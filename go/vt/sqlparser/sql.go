// Code generated by goyacc -o sql.go sql.y. DO NOT EDIT.

//line sql.y:18
package sqlparser

import __yyfmt__ "fmt"

//line sql.y:18

func setParseTree(yylex interface{}, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex interface{}, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func setDDL(yylex interface{}, ddl *DDL) {
	yylex.(*Tokenizer).partialDDL = ddl
}

func incNesting(yylex interface{}) bool {
	yylex.(*Tokenizer).nesting++
	if yylex.(*Tokenizer).nesting == 200 {
		return true
	}
	return false
}

func decNesting(yylex interface{}) {
	yylex.(*Tokenizer).nesting--
}

// skipToEnd forces the lexer to end prematurely. Not all SQL statements
// are supported by the Parser, thus calling skipToEnd will make the lexer
// return EOF early.
func skipToEnd(yylex interface{}) {
	yylex.(*Tokenizer).SkipToEnd = true
}

//line sql.y:53
type yySymType struct {
	yys                  int
	empty                struct{}
	statement            Statement
	selStmt              SelectStatement
	ddl                  *DDL
	ins                  *Insert
	byt                  byte
	bytes                []byte
	bytes2               [][]byte
	str                  string
	strs                 []string
	selectExprs          SelectExprs
	selectExpr           SelectExpr
	columns              Columns
	partitions           Partitions
	colName              *ColName
	tableExprs           TableExprs
	tableExpr            TableExpr
	joinCondition        JoinCondition
	tableName            TableName
	tableNames           TableNames
	indexHints           *IndexHints
	expr                 Expr
	exprs                Exprs
	boolVal              BoolVal
	sqlVal               *SQLVal
	colTuple             ColTuple
	values               Values
	valTuple             ValTuple
	subquery             *Subquery
	execsubquery         *ExecSubquery
	whens                []*When
	when                 *When
	orderBy              OrderBy
	order                *Order
	limit                *Limit
	updateExprs          UpdateExprs
	setExprs             SetExprs
	updateExpr           *UpdateExpr
	setExpr              *SetExpr
	characteristic       Characteristic
	characteristics      []Characteristic
	colIdent             ColIdent
	tableIdent           TableIdent
	convertType          *ConvertType
	aliasedTableName     *AliasedTableExpr
	TableSpec            *TableSpec
	columnType           ColumnType
	colKeyOpt            ColumnKeyOption
	optVal               Expr
	LengthScaleOption    LengthScaleOption
	columnDefinition     *ColumnDefinition
	indexDefinition      *IndexDefinition
	indexInfo            *IndexInfo
	indexOption          *IndexOption
	indexOptions         []*IndexOption
	indexColumn          *IndexColumn
	indexColumns         []*IndexColumn
	constraintDefinition *ConstraintDefinition
	constraintInfo       ConstraintInfo
	ReferenceAction      ReferenceAction
	partDefs             []*PartitionDefinition
	partDef              *PartitionDefinition
	partSpec             *PartitionSpec
	vindexParam          VindexParam
	vindexParams         []VindexParam
	showFilter           *ShowFilter
	optLike              *OptLike
	execVarDef           ExecVarDef
	execVarDefOpt        *ExecVarDef
	execVarDefs          []ExecVarDef
}

const LEX_ERROR = 57346
const UNION = 57347
const SELECT = 57348
const STREAM = 57349
const INSERT = 57350
const UPDATE = 57351
const DELETE = 57352
const FROM = 57353
const WHERE = 57354
const GROUP = 57355
const HAVING = 57356
const ORDER = 57357
const BY = 57358
const LIMIT = 57359
const OFFSET = 57360
const FOR = 57361
const ALL = 57362
const DISTINCT = 57363
const AS = 57364
const EXISTS = 57365
const ASC = 57366
const DESC = 57367
const INTO = 57368
const DUPLICATE = 57369
const KEY = 57370
const DEFAULT = 57371
const SET = 57372
const LOCK = 57373
const UNLOCK = 57374
const KEYS = 57375
const DO = 57376
const DISTINCTROW = 57377
const VALUES = 57378
const LAST_INSERT_ID = 57379
const NEXT = 57380
const VALUE = 57381
const SHARE = 57382
const MODE = 57383
const SQL_NO_CACHE = 57384
const SQL_CACHE = 57385
const SQL_CALC_FOUND_ROWS = 57386
const JOIN = 57387
const STRAIGHT_JOIN = 57388
const LEFT = 57389
const RIGHT = 57390
const INNER = 57391
const OUTER = 57392
const CROSS = 57393
const NATURAL = 57394
const USE = 57395
const FORCE = 57396
const ON = 57397
const USING = 57398
const ID = 57399
const AT_ID = 57400
const AT_AT_ID = 57401
const HEX = 57402
const STRING = 57403
const INTEGRAL = 57404
const FLOAT = 57405
const HEXNUM = 57406
const VALUE_ARG = 57407
const LIST_ARG = 57408
const COMMENT = 57409
const COMMENT_KEYWORD = 57410
const BIT_LITERAL = 57411
const NULL = 57412
const TRUE = 57413
const FALSE = 57414
const OFF = 57415
const OR = 57416
const XOR = 57417
const AND = 57418
const NOT = 57419
const BETWEEN = 57420
const CASE = 57421
const WHEN = 57422
const THEN = 57423
const ELSE = 57424
const END = 57425
const LE = 57426
const GE = 57427
const NE = 57428
const NULL_SAFE_EQUAL = 57429
const IS = 57430
const LIKE = 57431
const REGEXP = 57432
const IN = 57433
const SHIFT_LEFT = 57434
const SHIFT_RIGHT = 57435
const DIV = 57436
const MOD = 57437
const UNARY = 57438
const COLLATE = 57439
const BINARY = 57440
const UNDERSCORE_BINARY = 57441
const UNDERSCORE_UTF8MB4 = 57442
const UNDERSCORE_UTF8 = 57443
const UNDERSCORE_LATIN1 = 57444
const INTERVAL = 57445
const JSON_EXTRACT_OP = 57446
const JSON_UNQUOTE_EXTRACT_OP = 57447
const CREATE = 57448
const ALTER = 57449
const DROP = 57450
const RENAME = 57451
const ANALYZE = 57452
const ADD = 57453
const FLUSH = 57454
const SCHEMA = 57455
const TABLE = 57456
const INDEX = 57457
const VIEW = 57458
const TO = 57459
const IGNORE = 57460
const IF = 57461
const UNIQUE = 57462
const PRIMARY = 57463
const COLUMN = 57464
const SPATIAL = 57465
const FULLTEXT = 57466
const KEY_BLOCK_SIZE = 57467
const CHECK = 57468
const INDEXES = 57469
const ACTION = 57470
const CASCADE = 57471
const CONSTRAINT = 57472
const FOREIGN = 57473
const NO = 57474
const REFERENCES = 57475
const RESTRICT = 57476
const SHOW = 57477
const DESCRIBE = 57478
const EXPLAIN = 57479
const DATE = 57480
const ESCAPE = 57481
const REPAIR = 57482
const OPTIMIZE = 57483
const TRUNCATE = 57484
const MAXVALUE = 57485
const PARTITION = 57486
const REORGANIZE = 57487
const LESS = 57488
const THAN = 57489
const PROCEDURE = 57490
const TRIGGER = 57491
const VINDEX = 57492
const VINDEXES = 57493
const STATUS = 57494
const VARIABLES = 57495
const WARNINGS = 57496
const SEQUENCE = 57497
const BEGIN = 57498
const START = 57499
const TRANSACTION = 57500
const COMMIT = 57501
const ROLLBACK = 57502
const SAVEPOINT = 57503
const RELEASE = 57504
const WORK = 57505
const BIT = 57506
const TINYINT = 57507
const SMALLINT = 57508
const MEDIUMINT = 57509
const INT = 57510
const INTEGER = 57511
const BIGINT = 57512
const INTNUM = 57513
const REAL = 57514
const DOUBLE = 57515
const FLOAT_TYPE = 57516
const DECIMAL = 57517
const NUMERIC = 57518
const TIME = 57519
const TIMESTAMP = 57520
const DATETIME = 57521
const YEAR = 57522
const CHAR = 57523
const VARCHAR = 57524
const BOOL = 57525
const CHARACTER = 57526
const VARBINARY = 57527
const NCHAR = 57528
const TEXT = 57529
const TINYTEXT = 57530
const MEDIUMTEXT = 57531
const LONGTEXT = 57532
const BLOB = 57533
const TINYBLOB = 57534
const MEDIUMBLOB = 57535
const LONGBLOB = 57536
const JSON = 57537
const ENUM = 57538
const GEOMETRY = 57539
const POINT = 57540
const LINESTRING = 57541
const POLYGON = 57542
const GEOMETRYCOLLECTION = 57543
const MULTIPOINT = 57544
const MULTILINESTRING = 57545
const MULTIPOLYGON = 57546
const NULLX = 57547
const AUTO_INCREMENT = 57548
const APPROXNUM = 57549
const SIGNED = 57550
const UNSIGNED = 57551
const ZEROFILL = 57552
const COLLATION = 57553
const DATABASES = 57554
const TABLES = 57555
const VITESS_METADATA = 57556
const VSCHEMA = 57557
const FULL = 57558
const PROCESSLIST = 57559
const COLUMNS = 57560
const FIELDS = 57561
const ENGINES = 57562
const PLUGINS = 57563
const EXTENDED = 57564
const NAMES = 57565
const CHARSET = 57566
const GLOBAL = 57567
const SESSION = 57568
const ISOLATION = 57569
const LEVEL = 57570
const READ = 57571
const WRITE = 57572
const ONLY = 57573
const REPEATABLE = 57574
const COMMITTED = 57575
const UNCOMMITTED = 57576
const SERIALIZABLE = 57577
const CURRENT_TIMESTAMP = 57578
const DATABASE = 57579
const CURRENT_DATE = 57580
const CURRENT_TIME = 57581
const LOCALTIME = 57582
const LOCALTIMESTAMP = 57583
const UTC_DATE = 57584
const UTC_TIME = 57585
const UTC_TIMESTAMP = 57586
const REPLACE = 57587
const CONVERT = 57588
const CAST = 57589
const SUBSTR = 57590
const SUBSTRING = 57591
const GROUP_CONCAT = 57592
const SEPARATOR = 57593
const TIMESTAMPADD = 57594
const TIMESTAMPDIFF = 57595
const MATCH = 57596
const AGAINST = 57597
const BOOLEAN = 57598
const LANGUAGE = 57599
const WITH = 57600
const QUERY = 57601
const EXPANSION = 57602
const UNUSED = 57603
const ARRAY = 57604
const CUME_DIST = 57605
const DESCRIPTION = 57606
const DENSE_RANK = 57607
const EMPTY = 57608
const EXCEPT = 57609
const FIRST_VALUE = 57610
const GROUPING = 57611
const GROUPS = 57612
const JSON_TABLE = 57613
const LAG = 57614
const LAST_VALUE = 57615
const LATERAL = 57616
const LEAD = 57617
const MEMBER = 57618
const NTH_VALUE = 57619
const NTILE = 57620
const OF = 57621
const OVER = 57622
const PERCENT_RANK = 57623
const RANK = 57624
const RECURSIVE = 57625
const ROW_NUMBER = 57626
const SYSTEM = 57627
const WINDOW = 57628
const ACTIVE = 57629
const ADMIN = 57630
const BUCKETS = 57631
const CLONE = 57632
const COMPONENT = 57633
const DEFINITION = 57634
const ENFORCED = 57635
const EXCLUDE = 57636
const FOLLOWING = 57637
const GEOMCOLLECTION = 57638
const GET_MASTER_PUBLIC_KEY = 57639
const HISTOGRAM = 57640
const HISTORY = 57641
const INACTIVE = 57642
const INVISIBLE = 57643
const LOCKED = 57644
const MASTER_COMPRESSION_ALGORITHMS = 57645
const MASTER_PUBLIC_KEY_PATH = 57646
const MASTER_TLS_CIPHERSUITES = 57647
const MASTER_ZSTD_COMPRESSION_LEVEL = 57648
const NESTED = 57649
const NETWORK_NAMESPACE = 57650
const NOWAIT = 57651
const NULLS = 57652
const OJ = 57653
const OLD = 57654
const OPTIONAL = 57655
const ORDINALITY = 57656
const ORGANIZATION = 57657
const OTHERS = 57658
const PATH = 57659
const PERSIST = 57660
const PERSIST_ONLY = 57661
const PRECEDING = 57662
const PRIVILEGE_CHECKS_USER = 57663
const PROCESS = 57664
const RANDOM = 57665
const REFERENCE = 57666
const REQUIRE_ROW_FORMAT = 57667
const RESOURCE = 57668
const RESPECT = 57669
const RESTART = 57670
const RETAIN = 57671
const REUSE = 57672
const ROLE = 57673
const SECONDARY = 57674
const SECONDARY_ENGINE = 57675
const SECONDARY_LOAD = 57676
const SECONDARY_UNLOAD = 57677
const SKIP = 57678
const SRID = 57679
const THREAD_PRIORITY = 57680
const TIES = 57681
const UNBOUNDED = 57682
const VCPU = 57683
const VISIBLE = 57684
const FORMAT = 57685
const TREE = 57686
const VITESS = 57687
const TRADITIONAL = 57688
const AUTH = 57689
const INTERACTIVE = 57690
const LOGIN = 57691
const REVOKE = 57692
const SA = 57693
const SERVICEACCOUNT = 57694
const SLEEP = 57695
const REGISTRY = 57696
const PULL = 57697
const LIST = 57698
const EXEC = 57699
const PURGE = 57700
const STACKQL = 57701

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"LEX_ERROR",
	"UNION",
	"SELECT",
	"STREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"ALL",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"KEY",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"DO",
	"DISTINCTROW",
	"VALUES",
	"LAST_INSERT_ID",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"SQL_CALC_FOUND_ROWS",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"'('",
	"','",
	"')'",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"HEX",
	"STRING",
	"INTEGRAL",
	"FLOAT",
	"HEXNUM",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BIT_LITERAL",
	"NULL",
	"TRUE",
	"FALSE",
	"OFF",
	"OR",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"'|'",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_UTF8MB4",
	"UNDERSCORE_UTF8",
	"UNDERSCORE_LATIN1",
	"INTERVAL",
	"'.'",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"FLUSH",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"UNIQUE",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"CHECK",
	"INDEXES",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"VINDEX",
	"VINDEXES",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"SEQUENCE",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"SAVEPOINT",
	"RELEASE",
	"WORK",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL",
	"NUMERIC",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"COLLATION",
	"DATABASES",
	"TABLES",
	"VITESS_METADATA",
	"VSCHEMA",
	"FULL",
	"PROCESSLIST",
	"COLUMNS",
	"FIELDS",
	"ENGINES",
	"PLUGINS",
	"EXTENDED",
	"NAMES",
	"CHARSET",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_DATE",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"REPLACE",
	"CONVERT",
	"CAST",
	"SUBSTR",
	"SUBSTRING",
	"GROUP_CONCAT",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"UNUSED",
	"ARRAY",
	"CUME_DIST",
	"DESCRIPTION",
	"DENSE_RANK",
	"EMPTY",
	"EXCEPT",
	"FIRST_VALUE",
	"GROUPING",
	"GROUPS",
	"JSON_TABLE",
	"LAG",
	"LAST_VALUE",
	"LATERAL",
	"LEAD",
	"MEMBER",
	"NTH_VALUE",
	"NTILE",
	"OF",
	"OVER",
	"PERCENT_RANK",
	"RANK",
	"RECURSIVE",
	"ROW_NUMBER",
	"SYSTEM",
	"WINDOW",
	"ACTIVE",
	"ADMIN",
	"BUCKETS",
	"CLONE",
	"COMPONENT",
	"DEFINITION",
	"ENFORCED",
	"EXCLUDE",
	"FOLLOWING",
	"GEOMCOLLECTION",
	"GET_MASTER_PUBLIC_KEY",
	"HISTOGRAM",
	"HISTORY",
	"INACTIVE",
	"INVISIBLE",
	"LOCKED",
	"MASTER_COMPRESSION_ALGORITHMS",
	"MASTER_PUBLIC_KEY_PATH",
	"MASTER_TLS_CIPHERSUITES",
	"MASTER_ZSTD_COMPRESSION_LEVEL",
	"NESTED",
	"NETWORK_NAMESPACE",
	"NOWAIT",
	"NULLS",
	"OJ",
	"OLD",
	"OPTIONAL",
	"ORDINALITY",
	"ORGANIZATION",
	"OTHERS",
	"PATH",
	"PERSIST",
	"PERSIST_ONLY",
	"PRECEDING",
	"PRIVILEGE_CHECKS_USER",
	"PROCESS",
	"RANDOM",
	"REFERENCE",
	"REQUIRE_ROW_FORMAT",
	"RESOURCE",
	"RESPECT",
	"RESTART",
	"RETAIN",
	"REUSE",
	"ROLE",
	"SECONDARY",
	"SECONDARY_ENGINE",
	"SECONDARY_LOAD",
	"SECONDARY_UNLOAD",
	"SKIP",
	"SRID",
	"THREAD_PRIORITY",
	"TIES",
	"UNBOUNDED",
	"VCPU",
	"VISIBLE",
	"FORMAT",
	"TREE",
	"VITESS",
	"TRADITIONAL",
	"AUTH",
	"INTERACTIVE",
	"LOGIN",
	"REVOKE",
	"SA",
	"SERVICEACCOUNT",
	"SLEEP",
	"REGISTRY",
	"PULL",
	"LIST",
	"EXEC",
	"PURGE",
	"STACKQL",
	"';'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 0,
	364, 88,
	371, 88,
	-2, 33,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 47,
	169, 343,
	170, 343,
	230, 331,
	234, 331,
	235, 331,
	236, 331,
	-2, 329,
	-1, 52,
	134, 353,
	-2, 351,
	-1, 55,
	6, 359,
	8, 359,
	9, 359,
	10, 359,
	57, 359,
	262, 359,
	-2, 331,
	-1, 80,
	38, 389,
	-2, 397,
	-1, 405,
	120, 728,
	-2, 724,
	-1, 406,
	120, 729,
	-2, 725,
	-1, 425,
	38, 390,
	-2, 402,
	-1, 426,
	38, 391,
	-2, 403,
	-1, 449,
	88, 1000,
	-2, 79,
	-1, 450,
	88, 909,
	-2, 80,
	-1, 455,
	88, 877,
	134, 877,
	-2, 690,
	-1, 457,
	88, 943,
	134, 943,
	-2, 692,
	-1, 786,
	56, 61,
	58, 61,
	-2, 65,
	-1, 969,
	120, 731,
	-2, 727,
	-1, 1434,
	5, 646,
	17, 646,
	19, 646,
	31, 646,
	59, 646,
	-2, 429,
}

const yyPrivate = 57344

const yyLast = 18403

var yyAct = [...]int{
	405, 1671, 1473, 1681, 1353, 1638, 349, 1086, 1414, 1258,
	1551, 1484, 1587, 364, 1279, 1447, 1056, 1415, 378, 1259,
	1082, 1411, 622, 611, 760, 753, 708, 79, 3, 643,
	454, 335, 1129, 1085, 1115, 1095, 1026, 1420, 1246, 1008,
	1186, 1426, 99, 1376, 1330, 908, 299, 347, 956, 299,
	963, 1321, 418, 1099, 99, 779, 1052, 77, 799, 1058,
	1041, 427, 763, 758, 886, 989, 351, 412, 775, 933,
	448, 780, 1125, 798, 32, 580, 1034, 443, 80, 770,
	75, 899, 721, 440, 788, 74, 299, 99, 340, 336,
	581, 299, 339, 299, 407, 722, 746, 747, 744, 745,
	334, 408, 34, 35, 67, 37, 38, 1225, 919, 451,
	1227, 1226, 785, 7, 82, 83, 84, 85, 86, 6,
	1674, 71, 5, 600, 309, 1658, 39, 58, 59, 1669,
	61, 390, 1646, 396, 397, 394, 395, 393, 392, 391,
	1666, 1474, 409, 1657, 411, 433, 1645, 398, 399, 48,
	413, 1393, 1507, 66, 585, 1442, 1443, 1441, 297, 1613,
	670, 669, 679, 680, 672, 673, 674, 675, 676, 677,
	678, 671, 1073, 34, 681, 67, 37, 38, 295, 291,
	292, 293, 287, 1293, 915, 285, 1292, 289, 645, 1294,
	101, 102, 103, 1074, 1075, 800, 321, 801, 442, 338,
	642, 337, 1312, 582, 637, 584, 324, 1108, 638, 635,
	636, 966, 1541, 101, 102, 103, 1116, 1498, 328, 41,
	42, 44, 43, 46, 66, 60, 1355, 1496, 917, 330,
	326, 630, 631, 640, 1357, 875, 872, 1668, 1665, 1639,
	1352, 1035, 874, 1632, 1689, 1685, 1100, 1595, 47, 70,
	69, 1588, 601, 56, 57, 45, 587, 920, 921, 922,
	289, 617, 641, 619, 1377, 802, 1590, 1358, 303, 49,
	50, 879, 51, 52, 53, 54, 876, 306, 873, 646,
	863, 1437, 1356, 1436, 288, 313, 299, 592, 593, 1435,
	1102, 299, 583, 602, 1349, 616, 618, 299, 1280, 1282,
	1351, 1102, 294, 299, 609, 1379, 286, 615, 99, 590,
	624, 803, 99, 302, 99, 290, 1205, 693, 694, 311,
	644, 1109, 101, 102, 103, 318, 1620, 1160, 1522, 320,
	1159, 99, 1481, 333, 1202, 1083, 1614, 1589, 1289, 1102,
	1251, 1215, 1381, 1194, 1385, 1165, 1380, 794, 1378, 620,
	774, 706, 607, 1383, 1116, 304, 1596, 1594, 68, 681,
	650, 1683, 1382, 1069, 1684, 671, 1682, 1644, 681, 655,
	656, 101, 102, 103, 909, 1384, 1386, 900, 613, 833,
	1281, 1014, 315, 307, 614, 316, 317, 324, 1340, 613,
	913, 308, 310, 321, 1101, 305, 323, 322, 591, 900,
	1630, 661, 1604, 599, 1350, 1101, 1348, 660, 658, 606,
	299, 89, 299, 691, 1424, 608, 586, 603, 604, 605,
	1336, 1337, 1338, 1403, 661, 1234, 693, 694, 654, 68,
	101, 102, 103, 1395, 990, 284, 99, 750, 299, 299,
	299, 597, 751, 1101, 693, 694, 653, 99, 1098, 1096,
	90, 1097, 651, 99, 709, 652, 648, 1310, 1094, 1100,
	865, 910, 612, 821, 901, 1634, 64, 940, 767, 451,
	63, 65, 72, 612, 724, 726, 728, 730, 732, 734,
	735, 938, 939, 937, 1460, 1690, 901, 725, 727, 764,
	731, 733, 1339, 736, 752, 778, 1649, 1344, 1341, 1332,
	1342, 1335, 1547, 1331, 834, 1546, 1651, 1333, 1334, 594,
	1325, 595, 588, 589, 596, 1324, 66, 797, 319, 437,
	438, 1343, 748, 787, 749, 990, 792, 1212, 936, 1691,
	847, 850, 851, 852, 853, 854, 855, 1313, 856, 857,
	858, 859, 860, 835, 836, 837, 838, 819, 820, 848,
	777, 822, 786, 823, 824, 825, 826, 827, 828, 829,
	830, 831, 832, 839, 840, 841, 842, 843, 844, 845,
	846, 625, 672, 673, 674, 675, 676, 677, 678, 671,
	299, 658, 681, 410, 861, 99, 1631, 864, 1105, 866,
	299, 299, 99, 99, 99, 1106, 627, 661, 299, 1567,
	1544, 299, 1010, 1511, 299, 884, 885, 1200, 299, 1199,
	99, 1179, 1180, 1181, 1401, 99, 99, 99, 299, 99,
	99, 1322, 849, 101, 102, 103, 1173, 76, 659, 660,
	658, 99, 99, 891, 890, 422, 762, 1601, 888, 674,
	675, 676, 677, 678, 671, 1600, 661, 681, 903, 299,
	679, 680, 672, 673, 674, 675, 676, 677, 678, 671,
	1456, 629, 681, 632, 1019, 1020, 670, 669, 679, 680,
	672, 673, 674, 675, 676, 677, 678, 671, 1557, 1667,
	681, 422, 957, 934, 880, 101, 102, 103, 101, 102,
	103, 959, 811, 1653, 422, 626, 659, 660, 658, 1557,
	1642, 1103, 867, 868, 904, 99, 902, 628, 1037, 422,
	877, 1229, 1423, 442, 661, 1233, 883, 659, 660, 658,
	1518, 978, 981, 1187, 579, 1201, 1063, 991, 789, 967,
	896, 935, 1557, 422, 973, 661, 1038, 969, 99, 99,
	657, 960, 961, 1557, 1622, 644, 644, 1005, 1006, 670,
	669, 679, 680, 672, 673, 674, 675, 676, 677, 678,
	671, 918, 99, 681, 101, 102, 103, 709, 958, 299,
	790, 968, 99, 1247, 1003, 1004, 1016, 299, 1557, 1592,
	659, 660, 658, 1557, 1556, 299, 299, 1028, 970, 299,
	299, 999, 1000, 299, 299, 299, 99, 967, 661, 1537,
	1536, 406, 1603, 1011, 1464, 969, 659, 660, 658, 78,
	99, 581, 1054, 1021, 1397, 791, 1015, 793, 451, 1038,
	928, 930, 931, 1038, 661, 888, 1029, 929, 1297, 101,
	102, 103, 1087, 1296, 1423, 659, 660, 658, 1072, 1033,
	1524, 422, 1218, 100, 1217, 1064, 1027, 300, 34, 1066,
	300, 1031, 1027, 661, 789, 100, 1521, 422, 1017, 1117,
	1118, 1119, 1028, 1062, 299, 99, 1070, 99, 878, 1152,
	1071, 1067, 1253, 299, 299, 299, 299, 299, 1254, 299,
	299, 1030, 1412, 299, 99, 1423, 1090, 300, 100, 1036,
	1466, 1465, 300, 1131, 300, 1462, 1463, 1462, 1461, 66,
	299, 790, 1065, 299, 795, 299, 1027, 422, 299, 1027,
	299, 299, 1038, 422, 66, 299, 415, 99, 1659, 99,
	657, 422, 974, 975, 810, 809, 980, 983, 984, 1354,
	1127, 1128, 1170, 34, 862, 367, 366, 369, 370, 371,
	372, 869, 870, 871, 368, 373, 791, 1554, 789, 1553,
	34, 998, 1110, 1529, 1001, 1002, 934, 1130, 1452, 889,
	1427, 1428, 1133, 1574, 893, 894, 895, 66, 897, 898,
	1364, 1300, 1126, 1168, 1121, 1120, 1134, 314, 1676, 1672,
	905, 906, 1433, 1454, 66, 1154, 1155, 1156, 1157, 1158,
	1430, 1161, 1162, 1412, 1326, 1163, 1043, 1046, 1047, 1048,
	1044, 66, 1045, 1049, 935, 914, 1228, 1182, 882, 1270,
	1432, 1663, 1166, 1268, 1271, 1167, 1267, 777, 1269, 1272,
	1169, 1047, 1048, 1266, 1510, 1656, 1196, 1174, 1405, 299,
	1236, 761, 1661, 331, 1245, 1244, 428, 1235, 1195, 299,
	299, 299, 299, 299, 1260, 413, 1317, 1240, 808, 986,
	429, 299, 610, 1309, 1211, 1636, 299, 765, 766, 431,
	299, 430, 1255, 987, 299, 670, 669, 679, 680, 672,
	673, 674, 675, 676, 677, 678, 671, 754, 1635, 681,
	1572, 1239, 1307, 1278, 1295, 1249, 99, 300, 1302, 755,
	1248, 1250, 300, 1298, 1261, 1301, 1516, 1264, 300, 644,
	644, 1285, 428, 1287, 300, 1288, 1549, 1136, 1087, 100,
	1273, 1262, 1263, 100, 1265, 100, 429, 881, 1051, 1284,
	1286, 416, 417, 425, 426, 431, 419, 430, 1305, 1306,
	1515, 1290, 100, 420, 99, 99, 1316, 1243, 1318, 1319,
	1320, 1111, 1112, 1113, 1114, 1242, 1314, 1315, 78, 1514,
	1408, 1303, 1304, 1247, 639, 1678, 1677, 1122, 1123, 1124,
	1206, 1203, 907, 768, 99, 1678, 299, 1618, 1542, 1013,
	1329, 415, 76, 1323, 1053, 29, 1191, 1192, 81, 73,
	1, 1007, 1230, 1231, 1670, 1345, 1232, 994, 1009, 1475,
	1550, 1362, 1142, 1637, 1586, 99, 888, 1209, 1446, 1093,
	1084, 957, 88, 578, 87, 1629, 623, 1092, 1091, 1593,
	1540, 300, 1361, 300, 1135, 1365, 1137, 1373, 1104, 1311,
	1374, 1107, 1375, 1453, 1366, 1043, 1046, 1047, 1048, 1044,
	1360, 1045, 1049, 1164, 1394, 1427, 1428, 100, 1398, 300,
	300, 300, 299, 1308, 1372, 1388, 969, 1633, 100, 1387,
	816, 814, 99, 815, 100, 813, 818, 99, 99, 817,
	1260, 812, 312, 1413, 446, 916, 327, 421, 1050, 1402,
	804, 1132, 769, 1416, 1373, 91, 1347, 1346, 1138, 912,
	968, 633, 1404, 634, 99, 689, 1241, 1291, 452, 445,
	1363, 1418, 1018, 757, 1513, 1422, 1407, 1210, 99, 718,
	99, 99, 988, 783, 644, 644, 1431, 1445, 350, 927,
	1439, 365, 362, 363, 1022, 1252, 663, 348, 1459, 342,
	1087, 1438, 1087, 782, 1042, 1440, 1040, 299, 1039, 441,
	1429, 1444, 1425, 1450, 1451, 1457, 1458, 1449, 781, 424,
	1224, 1506, 1612, 423, 985, 55, 1176, 299, 332, 36,
	432, 62, 31, 99, 1406, 1476, 99, 99, 99, 299,
	28, 30, 1468, 27, 22, 99, 21, 20, 19, 18,
	24, 17, 16, 15, 598, 40, 26, 1469, 25, 1471,
	14, 300, 13, 12, 11, 1482, 100, 1483, 10, 1486,
	9, 300, 300, 100, 100, 100, 8, 4, 649, 300,
	23, 707, 300, 2, 0, 300, 0, 379, 33, 300,
	0, 100, 0, 0, 1494, 0, 100, 100, 100, 300,
	100, 100, 0, 0, 0, 0, 0, 1489, 0, 0,
	1260, 0, 100, 100, 0, 1517, 0, 0, 0, 1467,
	0, 33, 0, 1526, 0, 99, 0, 0, 0, 0,
	300, 1512, 1298, 99, 0, 0, 0, 0, 0, 1470,
	0, 1525, 0, 0, 1539, 0, 0, 1087, 99, 0,
	0, 1480, 0, 0, 0, 99, 0, 0, 0, 0,
	0, 0, 299, 414, 1328, 0, 0, 0, 0, 0,
	0, 0, 1535, 1560, 0, 0, 1543, 1552, 1545, 0,
	0, 0, 0, 0, 0, 0, 100, 0, 0, 0,
	0, 0, 888, 1359, 0, 1558, 0, 0, 0, 0,
	0, 0, 99, 99, 0, 99, 0, 1559, 0, 0,
	99, 0, 99, 99, 99, 299, 1573, 1416, 99, 100,
	100, 1580, 1571, 1581, 1583, 1584, 1555, 0, 1575, 0,
	1579, 1585, 0, 1591, 99, 299, 1597, 0, 99, 1566,
	0, 0, 0, 100, 1598, 1605, 1599, 0, 0, 0,
	300, 0, 0, 100, 0, 0, 0, 0, 300, 0,
	0, 0, 0, 1619, 0, 0, 300, 300, 0, 1628,
	300, 300, 0, 1416, 300, 300, 300, 100, 0, 1627,
	1626, 0, 0, 0, 99, 99, 0, 0, 0, 0,
	0, 100, 1641, 0, 1640, 0, 0, 0, 0, 0,
	0, 99, 0, 0, 0, 1260, 1552, 1087, 1647, 0,
	0, 0, 1621, 299, 0, 0, 0, 0, 0, 0,
	99, 0, 0, 0, 0, 0, 0, 1655, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1662, 1660,
	99, 0, 0, 0, 0, 300, 100, 1606, 100, 0,
	0, 1664, 1675, 0, 300, 300, 300, 300, 300, 0,
	300, 300, 1686, 1509, 300, 100, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1491,
	1492, 300, 1493, 0, 300, 1495, 300, 1497, 0, 300,
	0, 300, 300, 0, 0, 621, 300, 0, 100, 621,
	100, 621, 1148, 0, 670, 669, 679, 680, 672, 673,
	674, 675, 676, 677, 678, 671, 1147, 0, 681, 0,
	33, 0, 0, 0, 0, 1650, 0, 0, 0, 0,
	0, 0, 0, 690, 692, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 101, 102, 103,
	1538, 0, 376, 0, 0, 0, 0, 0, 1146, 0,
	0, 0, 0, 0, 705, 0, 0, 0, 710, 711,
	712, 713, 714, 715, 716, 717, 0, 720, 723, 723,
	723, 729, 723, 723, 729, 723, 737, 738, 739, 740,
	741, 742, 743, 0, 98, 0, 0, 1548, 0, 0,
	0, 0, 33, 0, 0, 0, 329, 0, 0, 1504,
	300, 1143, 1140, 1141, 0, 1139, 0, 0, 0, 0,
	300, 300, 300, 300, 300, 0, 784, 0, 0, 0,
	1367, 0, 300, 0, 0, 0, 0, 300, 0, 453,
	0, 300, 0, 0, 1503, 300, 0, 0, 1150, 1153,
	670, 669, 679, 680, 672, 673, 674, 675, 676, 677,
	678, 671, 0, 0, 681, 0, 0, 100, 0, 0,
	0, 0, 1502, 0, 0, 971, 972, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1145, 670,
	669, 679, 680, 672, 673, 674, 675, 676, 677, 678,
	671, 0, 1501, 681, 0, 0, 0, 0, 0, 0,
	1144, 0, 0, 0, 0, 100, 100, 0, 0, 1012,
	0, 0, 0, 344, 670, 669, 679, 680, 672, 673,
	674, 675, 676, 677, 678, 671, 0, 0, 681, 0,
	0, 0, 0, 0, 0, 100, 0, 300, 0, 0,
	1149, 0, 670, 669, 679, 680, 672, 673, 674, 675,
	676, 677, 678, 671, 0, 1151, 681, 0, 0, 0,
	0, 0, 621, 0, 0, 0, 100, 0, 0, 621,
	621, 621, 670, 669, 679, 680, 672, 673, 674, 675,
	676, 677, 678, 671, 0, 0, 681, 621, 0, 0,
	0, 0, 621, 621, 621, 0, 621, 621, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 621, 621,
	1188, 0, 0, 300, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 100, 0, 0, 0, 0, 100, 100,
	670, 669, 679, 680, 672, 673, 674, 675, 676, 677,
	678, 671, 0, 0, 681, 0, 0, 0, 0, 0,
	453, 0, 0, 0, 453, 100, 453, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 665, 0, 668, 100,
	0, 100, 100, 647, 682, 683, 684, 685, 686, 687,
	688, 0, 666, 667, 664, 670, 669, 679, 680, 672,
	673, 674, 675, 676, 677, 678, 671, 0, 300, 681,
	670, 669, 679, 680, 672, 673, 674, 675, 676, 677,
	678, 671, 0, 0, 681, 0, 0, 1189, 300, 0,
	0, 1190, 0, 0, 100, 0, 0, 100, 100, 100,
	300, 0, 1197, 1198, 0, 0, 100, 0, 1204, 0,
	0, 1207, 1208, 435, 0, 0, 0, 0, 0, 1214,
	0, 0, 0, 1216, 0, 0, 1219, 1220, 1221, 1222,
	1223, 0, 1055, 0, 0, 0, 784, 0, 0, 0,
	784, 0, 0, 0, 0, 0, 0, 0, 772, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 453,
	0, 0, 0, 0, 0, 805, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 341, 0, 0, 0, 0,
	1275, 1276, 1277, 0, 0, 0, 100, 0, 0, 0,
	0, 0, 0, 0, 100, 669, 679, 680, 672, 673,
	674, 675, 676, 677, 678, 671, 0, 0, 681, 100,
	0, 0, 621, 0, 621, 0, 100, 0, 0, 0,
	0, 0, 0, 300, 0, 0, 0, 0, 0, 0,
	0, 621, 0, 0, 0, 0, 695, 696, 697, 698,
	699, 700, 701, 702, 703, 704, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 100, 100, 0, 100, 0, 0, 0,
	0, 100, 0, 100, 100, 100, 300, 0, 0, 100,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 100, 300, 453, 0, 100,
	0, 0, 0, 0, 453, 453, 453, 0, 0, 0,
	0, 0, 0, 0, 0, 1193, 0, 0, 414, 1370,
	1371, 0, 453, 0, 0, 0, 0, 453, 453, 453,
	0, 453, 453, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 453, 453, 100, 100, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 100, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 300, 0, 784, 0, 0, 0,
	0, 100, 1256, 1257, 0, 0, 784, 784, 784, 784,
	784, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 100, 0, 1055, 0, 1283, 1434, 0, 0, 0,
	0, 784, 0, 0, 0, 0, 0, 962, 0, 453,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 992, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	996, 997, 0, 0, 0, 0, 0, 662, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1023, 0, 0, 0, 0, 0,
	0, 0, 621, 0, 772, 0, 0, 453, 0, 0,
	0, 0, 0, 341, 0, 0, 0, 0, 0, 0,
	1488, 0, 719, 0, 1490, 0, 0, 0, 453, 0,
	0, 621, 0, 0, 0, 1499, 1500, 0, 0, 0,
	0, 0, 453, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 756, 759, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1519, 1520, 932, 1523, 0,
	941, 942, 943, 944, 945, 946, 947, 948, 949, 950,
	951, 952, 953, 954, 955, 0, 1534, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 453, 0, 453,
	0, 377, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 453, 0, 0, 0,
	0, 0, 1417, 0, 33, 0, 0, 995, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 298, 0, 1175,
	325, 1177, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1582,
	0, 0, 0, 0, 436, 0, 0, 444, 0, 0,
	0, 0, 298, 0, 298, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1608,
	1609, 1610, 1611, 0, 1615, 0, 1616, 1617, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1623,
	0, 1624, 1625, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 892, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1643, 1505, 0, 0, 0, 0, 0, 0, 0, 0,
	992, 0, 0, 911, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1652, 0, 0, 0, 0,
	0, 923, 924, 925, 926, 0, 0, 0, 0, 0,
	0, 0, 0, 1531, 1532, 1533, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 453, 0,
	0, 0, 0, 0, 0, 0, 0, 1687, 1688, 0,
	0, 0, 0, 0, 0, 621, 0, 0, 0, 0,
	0, 0, 1183, 1184, 1185, 0, 976, 977, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1327, 453, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1417, 298, 33, 0,
	0, 0, 298, 0, 0, 0, 453, 0, 298, 0,
	0, 0, 0, 0, 298, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1602, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 453, 0, 0,
	0, 0, 0, 0, 0, 0, 1078, 1081, 0, 0,
	0, 0, 1417, 0, 0, 0, 0, 0, 453, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 453, 0, 992, 0, 0, 1419,
	1421, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 298, 0, 298, 0, 0, 1421, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 436, 0, 0, 0,
	453, 0, 453, 1448, 0, 0, 1673, 0, 0, 298,
	298, 298, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1472, 0, 0, 1477, 1478,
	1479, 1368, 1369, 0, 0, 0, 0, 1485, 0, 0,
	0, 0, 0, 0, 0, 0, 1389, 1390, 0, 1391,
	1392, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1399, 1400, 0, 1213, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1237,
	1238, 759, 0, 0, 0, 0, 992, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 453, 0, 0,
	0, 298, 0, 0, 0, 1485, 0, 0, 0, 0,
	0, 298, 298, 0, 0, 0, 0, 0, 0, 298,
	453, 0, 298, 0, 0, 298, 0, 453, 0, 887,
	0, 0, 0, 1455, 0, 0, 0, 0, 0, 298,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	298, 0, 0, 0, 1576, 1577, 0, 1578, 0, 0,
	0, 0, 1485, 0, 1485, 1485, 1485, 0, 0, 0,
	1448, 1487, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1485, 0, 0, 0,
	1607, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 436, 887, 0,
	0, 0, 436, 436, 0, 0, 436, 436, 436, 0,
	0, 0, 993, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 453, 453, 0, 0,
	0, 436, 436, 436, 436, 436, 1396, 0, 0, 0,
	0, 992, 0, 1648, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	298, 0, 1654, 0, 0, 0, 887, 0, 298, 0,
	0, 1409, 0, 0, 0, 0, 298, 1060, 0, 0,
	298, 298, 1485, 0, 298, 1068, 887, 0, 0, 0,
	0, 0, 0, 0, 0, 1561, 1562, 1563, 1564, 1565,
	0, 0, 0, 1568, 1569, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 298, 0, 0, 0, 0,
	0, 0, 0, 0, 298, 298, 298, 298, 298, 0,
	298, 298, 0, 0, 298, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 298, 0, 0, 298, 0, 298, 0, 0, 298,
	0, 1171, 1172, 0, 0, 0, 298, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1508, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 341, 0, 0, 0, 0, 0, 0, 1527, 0,
	0, 1528, 0, 0, 1530, 0, 436, 436, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1679, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 436, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 436,
	298, 0, 0, 0, 0, 0, 0, 0, 0, 993,
	298, 298, 298, 298, 298, 0, 0, 0, 1570, 341,
	0, 0, 1274, 0, 0, 0, 0, 298, 0, 0,
	0, 1060, 0, 0, 0, 298, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 887, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 436, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 887, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 298, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 993, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 298, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 298, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	298, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 993, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 887, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1060, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 298, 0, 564, 552,
	0, 509, 567, 481, 499, 575, 500, 503, 540, 466,
	522, 193, 497, 0, 485, 461, 493, 462, 483, 511,
	134, 515, 480, 554, 525, 566, 164, 0, 486, 573,
	166, 531, 0, 244, 181, 0, 0, 0, 513, 556,
	520, 549, 508, 541, 471, 530, 568, 498, 538, 569,
	0, 0, 0, 101, 102, 103, 0, 1088, 1089, 0,
	993, 0, 0, 0, 124, 0, 535, 563, 495, 537,
	539, 577, 460, 532, 298, 464, 467, 574, 559, 489,
	490, 1299, 0, 0, 0, 0, 0, 0, 512, 521,
	546, 506, 0, 0, 0, 0, 0, 0, 0, 0,
	487, 0, 529, 0, 0, 0, 468, 465, 0, 0,
	0, 0, 510, 0, 0, 0, 470, 0, 488, 547,
	0, 458, 143, 551, 558, 507, 301, 562, 505, 504,
	565, 212, 0, 249, 146, 163, 120, 160, 105, 116,
	0, 145, 190, 221, 225, 555, 484, 494, 128, 491,
	223, 200, 265, 528, 202, 222, 167, 255, 213, 264,
	274, 275, 252, 272, 279, 240, 109, 251, 263, 125,
	234, 0, 0, 0, 111, 261, 247, 179, 156, 157,
	110, 0, 219, 133, 141, 130, 192, 258, 259, 129,
	282, 117, 271, 113, 118, 270, 186, 254, 262, 180,
	172, 112, 260, 178, 171, 162, 137, 148, 210, 169,
	211, 149, 183, 182, 184, 0, 463, 0, 245, 268,
	283, 122, 479, 253, 277, 278, 0, 214, 123, 142,
	136, 209, 140, 185, 119, 151, 242, 161, 168, 218,
	281, 199, 224, 126, 267, 243, 475, 478, 473, 474,
	523, 524, 570, 571, 572, 548, 469, 0, 476, 477,
	0, 553, 560, 561, 527, 104, 114, 165, 280, 216,
	139, 269, 459, 472, 132, 482, 0, 0, 496, 501,
	502, 514, 516, 517, 518, 519, 526, 533, 534, 536,
	542, 543, 544, 545, 550, 557, 576, 106, 107, 115,
	121, 127, 131, 135, 138, 144, 147, 150, 152, 153,
	154, 159, 170, 174, 175, 176, 177, 187, 188, 189,
	191, 194, 195, 196, 197, 198, 201, 203, 204, 205,
	206, 207, 208, 217, 220, 226, 227, 228, 229, 230,
	231, 233, 236, 237, 238, 239, 246, 250, 256, 257,
	266, 273, 276, 0, 0, 0, 0, 108, 158, 173,
	232, 235, 241, 248, 0, 0, 0, 492, 215, 155,
	564, 552, 0, 509, 567, 481, 499, 575, 500, 503,
	540, 466, 522, 193, 497, 0, 485, 461, 493, 462,
	483, 511, 134, 515, 480, 554, 525, 566, 164, 0,
	486, 573, 166, 531, 0, 244, 181, 0, 0, 0,
	513, 556, 520, 549, 508, 541, 471, 530, 568, 498,
	538, 569, 0, 0, 0, 101, 102, 103, 0, 1088,
	1089, 0, 0, 0, 0, 0, 124, 0, 535, 563,
	495, 537, 539, 577, 460, 532, 0, 464, 467, 574,
	559, 489, 490, 0, 0, 0, 0, 0, 0, 0,
	512, 521, 546, 506, 0, 0, 0, 0, 0, 0,
	0, 0, 487, 0, 529, 0, 0, 0, 468, 465,
	0, 0, 0, 0, 510, 0, 0, 0, 470, 0,
	488, 547, 0, 458, 143, 551, 558, 507, 301, 562,
	505, 504, 565, 212, 0, 249, 146, 163, 120, 160,
	105, 116, 0, 145, 190, 221, 225, 555, 484, 494,
	128, 491, 223, 200, 265, 528, 202, 222, 167, 255,
	213, 264, 274, 275, 252, 272, 279, 240, 109, 251,
	263, 125, 234, 0, 0, 0, 111, 261, 247, 179,
	156, 157, 110, 0, 219, 133, 141, 130, 192, 258,
	259, 129, 282, 117, 271, 113, 118, 270, 186, 254,
	262, 180, 172, 112, 260, 178, 171, 162, 137, 148,
	210, 169, 211, 149, 183, 182, 184, 0, 463, 0,
	245, 268, 283, 122, 479, 253, 277, 278, 0, 214,
	123, 142, 136, 209, 140, 185, 119, 151, 242, 161,
	168, 218, 281, 199, 224, 126, 267, 243, 475, 478,
	473, 474, 523, 524, 570, 571, 572, 548, 469, 0,
	476, 477, 0, 553, 560, 561, 527, 104, 114, 165,
	280, 216, 139, 269, 459, 472, 132, 482, 0, 0,
	496, 501, 502, 514, 516, 517, 518, 519, 526, 533,
	534, 536, 542, 543, 544, 545, 550, 557, 576, 106,
	107, 115, 121, 127, 131, 135, 138, 144, 147, 150,
	152, 153, 154, 159, 170, 174, 175, 176, 177, 187,
	188, 189, 191, 194, 195, 196, 197, 198, 201, 203,
	204, 205, 206, 207, 208, 217, 220, 226, 227, 228,
	229, 230, 231, 233, 236, 237, 238, 239, 246, 250,
	256, 257, 266, 273, 276, 0, 0, 0, 0, 108,
	158, 173, 232, 235, 241, 248, 0, 0, 0, 492,
	215, 155, 564, 552, 0, 509, 567, 481, 499, 575,
	500, 503, 540, 466, 522, 193, 497, 0, 485, 461,
	493, 462, 483, 511, 134, 515, 480, 554, 525, 566,
	164, 0, 486, 573, 166, 531, 0, 244, 181, 0,
	0, 0, 513, 556, 520, 549, 508, 541, 471, 530,
	568, 498, 538, 569, 66, 0, 0, 101, 102, 103,
	0, 0, 0, 0, 0, 0, 0, 0, 124, 0,
	535, 563, 495, 537, 539, 577, 460, 532, 0, 464,
	467, 574, 559, 489, 490, 0, 0, 0, 0, 0,
	0, 0, 512, 521, 546, 506, 0, 0, 0, 0,
	0, 0, 0, 0, 487, 0, 529, 0, 0, 0,
	468, 465, 0, 0, 0, 0, 510, 0, 0, 0,
	470, 0, 488, 547, 0, 458, 143, 551, 558, 507,
	301, 562, 505, 504, 565, 212, 0, 249, 146, 163,
	120, 160, 105, 116, 0, 145, 190, 221, 225, 555,
	484, 494, 128, 491, 223, 200, 265, 528, 202, 222,
	167, 255, 213, 264, 274, 275, 252, 272, 279, 240,
	109, 251, 263, 125, 234, 0, 0, 0, 111, 261,
	247, 179, 156, 157, 110, 0, 219, 133, 141, 130,
	192, 258, 259, 129, 282, 117, 271, 113, 118, 270,
	186, 254, 262, 180, 172, 112, 260, 178, 171, 162,
	137, 148, 210, 169, 211, 149, 183, 182, 184, 0,
	463, 0, 245, 268, 283, 122, 479, 253, 277, 278,
	0, 214, 123, 142, 136, 209, 140, 185, 119, 151,
	242, 161, 168, 218, 281, 199, 224, 126, 267, 243,
	475, 478, 473, 474, 523, 524, 570, 571, 572, 548,
	469, 0, 476, 477, 0, 553, 560, 561, 527, 104,
	114, 165, 280, 216, 139, 269, 459, 472, 132, 482,
	0, 0, 496, 501, 502, 514, 516, 517, 518, 519,
	526, 533, 534, 536, 542, 543, 544, 545, 550, 557,
	576, 106, 107, 115, 121, 127, 131, 135, 138, 144,
	147, 150, 152, 153, 154, 159, 170, 174, 175, 176,
	177, 187, 188, 189, 191, 194, 195, 196, 197, 198,
	201, 203, 204, 205, 206, 207, 208, 217, 220, 226,
	227, 228, 229, 230, 231, 233, 236, 237, 238, 239,
	246, 250, 256, 257, 266, 273, 276, 0, 0, 0,
	0, 108, 158, 173, 232, 235, 241, 248, 0, 0,
	0, 492, 215, 155, 564, 552, 0, 509, 567, 481,
	499, 575, 500, 503, 540, 466, 522, 193, 497, 0,
	485, 461, 493, 462, 483, 511, 134, 515, 480, 554,
	525, 566, 164, 0, 486, 573, 166, 531, 0, 244,
	181, 0, 0, 0, 513, 556, 520, 549, 508, 541,
	471, 530, 568, 498, 538, 569, 0, 0, 0, 101,
	102, 103, 0, 0, 0, 0, 0, 0, 0, 0,
	124, 0, 535, 563, 495, 537, 539, 577, 460, 532,
	0, 464, 467, 574, 559, 489, 490, 0, 0, 0,
	0, 0, 0, 0, 512, 521, 546, 506, 0, 0,
	0, 0, 0, 0, 1410, 0, 487, 0, 529, 0,
	0, 0, 468, 465, 0, 0, 0, 0, 510, 0,
	0, 0, 470, 0, 488, 547, 0, 458, 143, 551,
	558, 507, 301, 562, 505, 504, 565, 212, 0, 249,
	146, 163, 120, 160, 105, 116, 0, 145, 190, 221,
	225, 555, 484, 494, 128, 491, 223, 200, 265, 528,
	202, 222, 167, 255, 213, 264, 274, 275, 252, 272,
	279, 240, 109, 251, 263, 125, 234, 0, 0, 0,
	111, 261, 247, 179, 156, 157, 110, 0, 219, 133,
	141, 130, 192, 258, 259, 129, 282, 117, 271, 113,
	118, 270, 186, 254, 262, 180, 172, 112, 260, 178,
	171, 162, 137, 148, 210, 169, 211, 149, 183, 182,
	184, 0, 463, 0, 245, 268, 283, 122, 479, 253,
	277, 278, 0, 214, 123, 142, 136, 209, 140, 185,
	119, 151, 242, 161, 168, 218, 281, 199, 224, 126,
	267, 243, 475, 478, 473, 474, 523, 524, 570, 571,
	572, 548, 469, 0, 476, 477, 0, 553, 560, 561,
	527, 104, 114, 165, 280, 216, 139, 269, 459, 472,
	132, 482, 0, 0, 496, 501, 502, 514, 516, 517,
	518, 519, 526, 533, 534, 536, 542, 543, 544, 545,
	550, 557, 576, 106, 107, 115, 121, 127, 131, 135,
	138, 144, 147, 150, 152, 153, 154, 159, 170, 174,
	175, 176, 177, 187, 188, 189, 191, 194, 195, 196,
	197, 198, 201, 203, 204, 205, 206, 207, 208, 217,
	220, 226, 227, 228, 229, 230, 231, 233, 236, 237,
	238, 239, 246, 250, 256, 257, 266, 273, 276, 0,
	0, 0, 0, 108, 158, 173, 232, 235, 241, 248,
	0, 0, 0, 492, 215, 155, 564, 552, 0, 509,
	567, 481, 499, 575, 500, 503, 540, 466, 522, 193,
	497, 0, 485, 461, 493, 462, 483, 511, 134, 515,
	480, 554, 525, 566, 164, 0, 486, 573, 166, 531,
	0, 244, 181, 0, 0, 0, 513, 556, 520, 549,
	508, 541, 471, 530, 568, 498, 538, 569, 0, 0,
	0, 101, 102, 103, 0, 0, 0, 0, 0, 0,
	0, 0, 124, 0, 535, 563, 495, 537, 539, 577,
	460, 532, 0, 464, 467, 574, 559, 489, 490, 0,
	0, 0, 0, 0, 0, 0, 512, 521, 546, 506,
	0, 0, 0, 0, 0, 0, 1069, 0, 487, 0,
	529, 0, 0, 0, 468, 465, 0, 0, 0, 0,
	510, 0, 0, 0, 470, 0, 488, 547, 0, 458,
	143, 551, 558, 507, 301, 562, 505, 504, 565, 212,
	0, 249, 146, 163, 120, 160, 105, 116, 0, 145,
	190, 221, 225, 555, 484, 494, 128, 491, 223, 200,
	265, 528, 202, 222, 167, 255, 213, 264, 274, 275,
	252, 272, 279, 240, 109, 251, 263, 125, 234, 0,
	0, 0, 111, 261, 247, 179, 156, 157, 110, 0,
	219, 133, 141, 130, 192, 258, 259, 129, 282, 117,
	271, 113, 118, 270, 186, 254, 262, 180, 172, 112,
	260, 178, 171, 162, 137, 148, 210, 169, 211, 149,
	183, 182, 184, 0, 463, 0, 245, 268, 283, 122,
	479, 253, 277, 278, 0, 214, 123, 142, 136, 209,
	140, 185, 119, 151, 242, 161, 168, 218, 281, 199,
	224, 126, 267, 243, 475, 478, 473, 474, 523, 524,
	570, 571, 572, 548, 469, 0, 476, 477, 0, 553,
	560, 561, 527, 104, 114, 165, 280, 216, 139, 269,
	459, 472, 132, 482, 0, 0, 496, 501, 502, 514,
	516, 517, 518, 519, 526, 533, 534, 536, 542, 543,
	544, 545, 550, 557, 576, 106, 107, 115, 121, 127,
	131, 135, 138, 144, 147, 150, 152, 153, 154, 159,
	170, 174, 175, 176, 177, 187, 188, 189, 191, 194,
	195, 196, 197, 198, 201, 203, 204, 205, 206, 207,
	208, 217, 220, 226, 227, 228, 229, 230, 231, 233,
	236, 237, 238, 239, 246, 250, 256, 257, 266, 273,
	276, 0, 0, 0, 0, 108, 158, 173, 232, 235,
	241, 248, 0, 0, 0, 492, 215, 155, 564, 552,
	0, 509, 567, 481, 499, 575, 500, 503, 540, 466,
	522, 193, 497, 0, 485, 461, 493, 462, 483, 511,
	134, 515, 480, 554, 525, 566, 164, 0, 486, 573,
	166, 531, 0, 244, 181, 0, 0, 0, 513, 556,
	520, 549, 508, 541, 471, 530, 568, 498, 538, 569,
	0, 0, 0, 101, 102, 103, 0, 0, 0, 0,
	0, 0, 0, 0, 124, 0, 535, 563, 495, 537,
	539, 577, 460, 532, 0, 464, 467, 574, 559, 489,
	490, 0, 0, 0, 0, 0, 0, 0, 512, 521,
	546, 506, 0, 0, 0, 0, 0, 0, 1032, 0,
	487, 0, 529, 0, 0, 0, 468, 465, 0, 0,
	0, 0, 510, 0, 0, 0, 470, 0, 488, 547,
	0, 458, 143, 551, 558, 507, 301, 562, 505, 504,
	565, 212, 0, 249, 146, 163, 120, 160, 105, 116,
	0, 145, 190, 221, 225, 555, 484, 494, 128, 491,
	223, 200, 265, 528, 202, 222, 167, 255, 213, 264,
	274, 275, 252, 272, 279, 240, 109, 251, 263, 125,
	234, 0, 0, 0, 111, 261, 247, 179, 156, 157,
	110, 0, 219, 133, 141, 130, 192, 258, 259, 129,
	282, 117, 271, 113, 118, 270, 186, 254, 262, 180,
	172, 112, 260, 178, 171, 162, 137, 148, 210, 169,
	211, 149, 183, 182, 184, 0, 463, 0, 245, 268,
	283, 122, 479, 253, 277, 278, 0, 214, 123, 142,
	136, 209, 140, 185, 119, 151, 242, 161, 168, 218,
	281, 199, 224, 126, 267, 243, 475, 478, 473, 474,
	523, 524, 570, 571, 572, 548, 469, 0, 476, 477,
	0, 553, 560, 561, 527, 104, 114, 165, 280, 216,
	139, 269, 459, 472, 132, 482, 0, 0, 496, 501,
	502, 514, 516, 517, 518, 519, 526, 533, 534, 536,
	542, 543, 544, 545, 550, 557, 576, 106, 107, 115,
	121, 127, 131, 135, 138, 144, 147, 150, 152, 153,
	154, 159, 170, 174, 175, 176, 177, 187, 188, 189,
	191, 194, 195, 196, 197, 198, 201, 203, 204, 205,
	206, 207, 208, 217, 220, 226, 227, 228, 229, 230,
	231, 233, 236, 237, 238, 239, 246, 250, 256, 257,
	266, 273, 276, 0, 0, 0, 0, 108, 158, 173,
	232, 235, 241, 248, 0, 0, 0, 492, 215, 155,
	564, 552, 0, 509, 567, 481, 499, 575, 500, 503,
	540, 466, 522, 193, 497, 0, 485, 461, 493, 462,
	483, 511, 134, 515, 480, 554, 525, 566, 164, 0,
	486, 573, 166, 531, 0, 244, 181, 0, 0, 0,
	513, 556, 520, 549, 508, 541, 471, 530, 568, 498,
	538, 569, 0, 0, 0, 101, 102, 103, 0, 0,
	0, 0, 0, 0, 0, 0, 124, 0, 535, 563,
	495, 537, 539, 577, 460, 532, 0, 464, 467, 574,
	559, 489, 490, 0, 0, 0, 0, 0, 0, 0,
	512, 521, 546, 506, 0, 0, 0, 0, 0, 0,
	0, 0, 487, 0, 529, 0, 0, 0, 468, 465,
	0, 0, 0, 0, 510, 0, 0, 0, 470, 0,
	488, 547, 0, 458, 143, 551, 558, 507, 301, 562,
	505, 504, 565, 212, 0, 249, 146, 163, 120, 160,
	105, 116, 0, 145, 190, 221, 225, 555, 484, 494,
	128, 491, 223, 200, 265, 528, 202, 222, 167, 255,
	213, 264, 274, 275, 252, 272, 279, 240, 109, 251,
	263, 125, 234, 0, 0, 0, 111, 261, 247, 179,
	156, 157, 110, 0, 219, 133, 141, 130, 192, 258,
	259, 129, 282, 117, 271, 113, 118, 270, 186, 254,
	262, 180, 172, 112, 260, 178, 171, 162, 137, 148,
	210, 169, 211, 149, 183, 182, 184, 0, 463, 0,
	245, 268, 283, 122, 479, 253, 277, 278, 0, 214,
	123, 142, 136, 209, 140, 185, 119, 151, 242, 161,
	168, 218, 281, 199, 224, 126, 267, 243, 475, 478,
	473, 474, 523, 524, 570, 571, 572, 548, 469, 0,
	476, 477, 0, 553, 560, 561, 527, 104, 114, 165,
	280, 216, 139, 269, 459, 472, 132, 482, 0, 0,
	496, 501, 502, 514, 516, 517, 518, 519, 526, 533,
	534, 536, 542, 543, 544, 545, 550, 557, 576, 106,
	107, 115, 121, 127, 131, 135, 138, 144, 147, 150,
	152, 153, 154, 159, 170, 174, 175, 176, 177, 187,
	188, 189, 191, 194, 195, 196, 197, 198, 201, 203,
	204, 205, 206, 207, 208, 217, 220, 226, 227, 228,
	229, 230, 231, 233, 236, 237, 238, 239, 246, 250,
	256, 257, 266, 273, 276, 0, 0, 0, 0, 108,
	158, 173, 232, 235, 241, 248, 0, 0, 0, 492,
	215, 155, 564, 552, 0, 509, 567, 481, 499, 575,
	500, 503, 540, 466, 522, 193, 497, 0, 485, 461,
	493, 462, 483, 511, 134, 515, 480, 554, 525, 566,
	164, 0, 486, 573, 166, 531, 0, 244, 181, 0,
	0, 0, 513, 556, 520, 549, 508, 541, 471, 530,
	568, 498, 538, 569, 0, 0, 0, 101, 102, 103,
	0, 0, 0, 0, 0, 0, 0, 0, 124, 0,
	535, 563, 495, 537, 539, 577, 460, 532, 0, 464,
	467, 574, 559, 489, 490, 0, 0, 0, 0, 0,
	0, 0, 512, 521, 546, 506, 0, 0, 0, 0,
	0, 0, 0, 0, 487, 0, 529, 0, 0, 0,
	468, 465, 0, 0, 0, 0, 510, 0, 0, 0,
	470, 0, 488, 547, 0, 458, 143, 551, 558, 507,
	301, 562, 505, 504, 565, 212, 0, 249, 146, 163,
	120, 160, 105, 116, 0, 145, 190, 221, 225, 555,
	484, 494, 128, 491, 223, 200, 265, 528, 202, 222,
	167, 255, 213, 264, 274, 275, 252, 272, 279, 240,
	109, 251, 263, 125, 234, 0, 0, 0, 111, 261,
	247, 179, 156, 157, 110, 0, 219, 133, 141, 130,
	192, 258, 259, 129, 282, 117, 271, 113, 456, 270,
	186, 254, 262, 180, 172, 112, 260, 178, 171, 162,
	137, 148, 210, 169, 211, 149, 183, 182, 184, 0,
	463, 0, 245, 268, 283, 122, 479, 253, 277, 278,
	0, 214, 123, 142, 136, 209, 140, 457, 455, 151,
	242, 161, 168, 218, 281, 199, 224, 126, 267, 243,
	475, 478, 473, 474, 523, 524, 570, 571, 572, 548,
	469, 0, 476, 477, 0, 553, 560, 561, 527, 104,
	114, 165, 280, 216, 139, 269, 459, 472, 132, 482,
	0, 0, 496, 501, 502, 514, 516, 517, 518, 519,
	526, 533, 534, 536, 542, 543, 544, 545, 550, 557,
	576, 106, 107, 115, 121, 127, 131, 135, 138, 144,
	147, 150, 152, 153, 154, 159, 170, 174, 175, 176,
	177, 187, 188, 189, 191, 194, 195, 196, 197, 198,
	201, 203, 204, 205, 206, 207, 208, 217, 220, 226,
	227, 228, 229, 230, 231, 233, 236, 237, 238, 239,
	246, 250, 256, 257, 266, 273, 276, 0, 0, 0,
	0, 108, 158, 173, 232, 235, 241, 248, 0, 0,
	0, 492, 215, 155, 564, 552, 0, 509, 567, 481,
	499, 575, 500, 503, 540, 466, 522, 193, 497, 0,
	485, 461, 493, 462, 483, 511, 134, 515, 480, 554,
	525, 566, 164, 0, 486, 573, 166, 531, 0, 244,
	181, 0, 0, 0, 513, 556, 520, 549, 508, 541,
	471, 530, 568, 498, 538, 569, 0, 0, 0, 101,
	102, 103, 0, 0, 0, 0, 0, 0, 0, 0,
	124, 0, 535, 563, 495, 537, 539, 577, 460, 532,
	0, 464, 467, 574, 559, 489, 490, 0, 0, 0,
	0, 0, 0, 0, 512, 521, 546, 506, 0, 0,
	0, 0, 0, 0, 0, 0, 487, 0, 529, 0,
	0, 0, 468, 465, 0, 0, 0, 0, 510, 0,
	0, 0, 470, 0, 488, 547, 0, 458, 143, 551,
	558, 507, 301, 562, 505, 504, 565, 212, 0, 249,
	146, 163, 120, 160, 105, 116, 0, 145, 190, 221,
	225, 555, 484, 494, 128, 491, 223, 200, 265, 528,
	202, 222, 167, 255, 213, 264, 274, 275, 252, 272,
	279, 240, 109, 251, 796, 125, 234, 0, 0, 0,
	111, 261, 247, 179, 156, 157, 110, 0, 219, 133,
	141, 130, 192, 258, 259, 129, 282, 117, 271, 113,
	456, 270, 186, 254, 262, 180, 172, 112, 260, 178,
	171, 162, 137, 148, 210, 169, 211, 149, 183, 182,
	184, 0, 463, 0, 245, 268, 283, 122, 479, 253,
	277, 278, 0, 214, 123, 142, 136, 209, 140, 457,
	455, 151, 242, 161, 168, 218, 281, 199, 224, 126,
	267, 243, 475, 478, 473, 474, 523, 524, 570, 571,
	572, 548, 469, 0, 476, 477, 0, 553, 560, 561,
	527, 104, 114, 165, 280, 216, 139, 269, 459, 472,
	132, 482, 0, 0, 496, 501, 502, 514, 516, 517,
	518, 519, 526, 533, 534, 536, 542, 543, 544, 545,
	550, 557, 576, 106, 107, 115, 121, 127, 131, 135,
	138, 144, 147, 150, 152, 153, 154, 159, 170, 174,
	175, 176, 177, 187, 188, 189, 191, 194, 195, 196,
	197, 198, 201, 203, 204, 205, 206, 207, 208, 217,
	220, 226, 227, 228, 229, 230, 231, 233, 236, 237,
	238, 239, 246, 250, 256, 257, 266, 273, 276, 0,
	0, 0, 0, 108, 158, 173, 232, 235, 241, 248,
	0, 0, 0, 492, 215, 155, 564, 552, 0, 509,
	567, 481, 499, 575, 500, 503, 540, 466, 522, 193,
	497, 0, 485, 461, 493, 462, 483, 511, 134, 515,
	480, 554, 525, 566, 164, 0, 486, 573, 166, 531,
	0, 244, 181, 0, 0, 0, 513, 556, 520, 549,
	508, 541, 471, 530, 568, 498, 538, 569, 0, 0,
	0, 101, 102, 103, 0, 0, 0, 0, 0, 0,
	0, 0, 124, 0, 535, 563, 495, 537, 539, 577,
	460, 532, 0, 464, 467, 574, 559, 489, 490, 0,
	0, 0, 0, 0, 0, 0, 512, 521, 546, 506,
	0, 0, 0, 0, 0, 0, 0, 0, 487, 0,
	529, 0, 0, 0, 468, 465, 0, 0, 0, 0,
	510, 0, 0, 0, 470, 0, 488, 547, 0, 458,
	143, 551, 558, 507, 301, 562, 505, 504, 565, 212,
	0, 249, 146, 163, 120, 160, 105, 116, 0, 145,
	190, 221, 225, 555, 484, 494, 128, 491, 223, 200,
	265, 528, 202, 222, 167, 255, 213, 264, 274, 275,
	252, 272, 279, 240, 109, 251, 447, 125, 234, 0,
	0, 0, 111, 261, 247, 179, 156, 157, 110, 0,
	219, 133, 141, 130, 192, 258, 259, 129, 282, 117,
	271, 113, 456, 270, 186, 254, 262, 180, 172, 112,
	260, 178, 171, 162, 137, 148, 210, 169, 211, 149,
	183, 182, 184, 0, 463, 0, 245, 268, 283, 122,
	479, 253, 277, 278, 0, 214, 123, 142, 136, 209,
	140, 457, 455, 450, 449, 161, 168, 218, 281, 199,
	224, 126, 267, 243, 475, 478, 473, 474, 523, 524,
	570, 571, 572, 548, 469, 0, 476, 477, 0, 553,
	560, 561, 527, 104, 114, 165, 280, 216, 139, 269,
	459, 472, 132, 482, 0, 0, 496, 501, 502, 514,
	516, 517, 518, 519, 526, 533, 534, 536, 542, 543,
	544, 545, 550, 557, 576, 106, 107, 115, 121, 127,
	131, 135, 138, 144, 147, 150, 152, 153, 154, 159,
	170, 174, 175, 176, 177, 187, 188, 189, 191, 194,
	195, 196, 197, 198, 201, 203, 204, 205, 206, 207,
	208, 217, 220, 226, 227, 228, 229, 230, 231, 233,
	236, 237, 238, 239, 246, 250, 256, 257, 266, 273,
	276, 0, 0, 0, 0, 108, 158, 173, 232, 235,
	241, 248, 0, 0, 0, 492, 215, 155, 193, 0,
	0, 964, 0, 346, 0, 0, 0, 134, 0, 345,
	0, 0, 0, 164, 0, 965, 389, 166, 0, 0,
	244, 181, 0, 0, 0, 0, 0, 380, 381, 0,
	0, 0, 0, 0, 0, 0, 0, 66, 0, 0,
	101, 102, 103, 367, 366, 369, 370, 371, 372, 0,
	0, 124, 368, 373, 374, 375, 0, 0, 0, 0,
	343, 360, 0, 388, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 357, 358, 434, 0, 0, 0, 403,
	0, 359, 0, 0, 352, 353, 355, 354, 356, 361,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 143,
	402, 0, 0, 301, 0, 0, 400, 0, 212, 0,
	249, 146, 163, 120, 160, 105, 116, 0, 145, 190,
	221, 225, 0, 0, 0, 128, 0, 223, 200, 265,
	0, 202, 222, 167, 255, 213, 264, 274, 275, 252,
	272, 279, 240, 109, 251, 263, 125, 234, 0, 0,
	0, 111, 261, 247, 179, 156, 157, 110, 0, 219,
	133, 141, 130, 192, 258, 259, 129, 282, 117, 271,
	113, 118, 270, 186, 254, 262, 180, 172, 112, 260,
	178, 171, 162, 137, 148, 210, 169, 211, 149, 183,
	182, 184, 0, 0, 0, 245, 268, 283, 122, 0,
	253, 277, 278, 0, 214, 123, 142, 136, 209, 140,
	185, 119, 151, 242, 161, 168, 218, 281, 199, 224,
	126, 267, 243, 390, 401, 396, 397, 394, 395, 393,
	392, 391, 404, 382, 383, 384, 385, 387, 0, 398,
	399, 386, 104, 114, 165, 280, 216, 139, 269, 0,
	0, 132, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 106, 107, 115, 121, 127, 131,
	135, 138, 144, 147, 150, 152, 153, 154, 159, 170,
	174, 175, 176, 177, 187, 188, 189, 191, 194, 195,
	196, 197, 198, 201, 203, 204, 205, 206, 207, 208,
	217, 220, 226, 227, 228, 229, 230, 231, 233, 236,
	237, 238, 239, 246, 250, 256, 257, 266, 273, 276,
	0, 0, 0, 0, 108, 158, 173, 232, 235, 241,
	248, 0, 193, 0, 0, 215, 155, 346, 0, 0,
	0, 134, 0, 345, 0, 0, 0, 164, 0, 0,
	389, 166, 0, 0, 244, 181, 0, 0, 0, 0,
	0, 380, 381, 0, 0, 0, 0, 0, 0, 1079,
	0, 66, 0, 0, 101, 102, 103, 367, 366, 369,
	370, 371, 372, 0, 0, 124, 368, 373, 374, 375,
	1080, 0, 0, 0, 343, 360, 0, 388, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 357, 358, 0,
	0, 0, 0, 403, 0, 359, 0, 0, 352, 353,
	355, 354, 356, 361, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 143, 402, 0, 0, 301, 0, 0,
	400, 0, 212, 0, 249, 146, 163, 120, 160, 105,
	116, 0, 145, 190, 221, 225, 0, 0, 0, 128,
	0, 223, 200, 265, 0, 202, 222, 167, 255, 213,
	264, 274, 275, 252, 272, 279, 240, 109, 251, 263,
	125, 234, 0, 0, 0, 111, 261, 247, 179, 156,
	157, 110, 0, 219, 133, 141, 130, 192, 258, 259,
	129, 282, 117, 271, 113, 118, 270, 186, 254, 262,
	180, 172, 112, 260, 178, 171, 162, 137, 148, 210,
	169, 211, 149, 183, 182, 184, 0, 0, 0, 245,
	268, 283, 122, 0, 253, 277, 278, 0, 214, 123,
	142, 136, 209, 140, 185, 119, 151, 242, 161, 168,
	218, 281, 199, 224, 126, 267, 243, 390, 401, 396,
	397, 394, 395, 393, 392, 391, 404, 382, 383, 384,
	385, 387, 0, 398, 399, 386, 104, 114, 165, 280,
	216, 139, 269, 0, 0, 132, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 106, 107,
	115, 121, 127, 131, 135, 138, 144, 147, 150, 152,
	153, 154, 159, 170, 174, 175, 176, 177, 187, 188,
	189, 191, 194, 195, 196, 197, 198, 201, 203, 204,
	205, 206, 207, 208, 217, 220, 226, 227, 228, 229,
	230, 231, 233, 236, 237, 238, 239, 246, 250, 256,
	257, 266, 273, 276, 0, 0, 0, 0, 108, 158,
	173, 232, 235, 241, 248, 0, 193, 0, 0, 215,
	155, 346, 0, 0, 0, 134, 0, 345, 0, 0,
	0, 164, 0, 0, 389, 166, 0, 0, 244, 181,
	0, 0, 0, 0, 0, 380, 381, 0, 0, 0,
	0, 0, 0, 1076, 0, 66, 0, 0, 101, 102,
	103, 367, 366, 369, 370, 371, 372, 0, 0, 124,
	368, 373, 374, 375, 1077, 0, 0, 0, 343, 360,
	0, 388, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 357, 358, 0, 0, 0, 0, 403, 0, 359,
	0, 0, 352, 353, 355, 354, 356, 361, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 143, 402, 0,
	0, 301, 0, 0, 400, 0, 212, 0, 249, 146,
	163, 120, 160, 105, 116, 0, 145, 190, 221, 225,
	0, 0, 0, 128, 0, 223, 200, 265, 0, 202,
	222, 167, 255, 213, 264, 274, 275, 252, 272, 279,
	240, 109, 251, 263, 125, 234, 0, 0, 0, 111,
	261, 247, 179, 156, 157, 110, 0, 219, 133, 141,
	130, 192, 258, 259, 129, 282, 117, 271, 113, 118,
	270, 186, 254, 262, 180, 172, 112, 260, 178, 171,
	162, 137, 148, 210, 169, 211, 149, 183, 182, 184,
	0, 0, 0, 245, 268, 283, 122, 0, 253, 277,
	278, 0, 214, 123, 142, 136, 209, 140, 185, 119,
	151, 242, 161, 168, 218, 281, 199, 224, 126, 267,
	243, 390, 401, 396, 397, 394, 395, 393, 392, 391,
	404, 382, 383, 384, 385, 387, 0, 398, 399, 386,
	104, 114, 165, 280, 216, 139, 269, 0, 0, 132,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 106, 107, 115, 121, 127, 131, 135, 138,
	144, 147, 150, 152, 153, 154, 159, 170, 174, 175,
	176, 177, 187, 188, 189, 191, 194, 195, 196, 197,
	198, 201, 203, 204, 205, 206, 207, 208, 217, 220,
	226, 227, 228, 229, 230, 231, 233, 236, 237, 238,
	239, 246, 250, 256, 257, 266, 273, 276, 0, 0,
	0, 0, 108, 158, 173, 232, 235, 241, 248, 0,
	193, 0, 0, 215, 155, 346, 0, 0, 0, 134,
	0, 345, 0, 0, 0, 164, 0, 0, 389, 166,
	0, 0, 244, 181, 0, 0, 0, 0, 0, 380,
	381, 0, 0, 0, 0, 0, 0, 0, 0, 66,
	0, 422, 101, 102, 103, 367, 366, 369, 370, 371,
	372, 0, 0, 124, 368, 373, 374, 375, 0, 0,
	0, 0, 343, 360, 0, 388, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 357, 358, 0, 0, 0,
	0, 403, 0, 359, 0, 0, 352, 353, 355, 354,
	356, 361, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 143, 402, 0, 0, 301, 0, 0, 400, 0,
	212, 0, 249, 146, 163, 120, 160, 105, 116, 0,
	145, 190, 221, 225, 0, 0, 0, 128, 0, 223,
	200, 265, 0, 202, 222, 167, 255, 213, 264, 274,
	275, 252, 272, 279, 240, 109, 251, 263, 125, 234,
	0, 0, 0, 111, 261, 247, 179, 156, 157, 110,
	0, 219, 133, 141, 130, 192, 258, 259, 129, 282,
	117, 271, 113, 118, 270, 186, 254, 262, 180, 172,
	112, 260, 178, 171, 162, 137, 148, 210, 169, 211,
	149, 183, 182, 184, 0, 0, 0, 245, 268, 283,
	122, 0, 253, 277, 278, 0, 214, 123, 142, 136,
	209, 140, 185, 119, 151, 242, 161, 168, 218, 281,
	199, 224, 126, 267, 243, 390, 401, 396, 397, 394,
	395, 393, 392, 391, 404, 382, 383, 384, 385, 387,
	0, 398, 399, 386, 104, 114, 165, 280, 216, 139,
	269, 0, 0, 132, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 106, 107, 115, 121,
	127, 131, 135, 138, 144, 147, 150, 152, 153, 154,
	159, 170, 174, 175, 176, 177, 187, 188, 189, 191,
	194, 195, 196, 197, 198, 201, 203, 204, 205, 206,
	207, 208, 217, 220, 226, 227, 228, 229, 230, 231,
	233, 236, 237, 238, 239, 246, 250, 256, 257, 266,
	273, 276, 0, 0, 0, 0, 108, 158, 173, 232,
	235, 241, 248, 0, 193, 0, 0, 215, 155, 346,
	0, 0, 0, 134, 0, 345, 0, 0, 0, 164,
	0, 0, 389, 166, 0, 0, 244, 181, 0, 0,
	0, 0, 0, 380, 381, 0, 0, 0, 0, 0,
	0, 0, 0, 66, 0, 0, 101, 102, 103, 367,
	366, 369, 370, 371, 372, 0, 0, 124, 368, 373,
	374, 375, 0, 0, 0, 0, 343, 360, 0, 388,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 357,
	358, 434, 0, 0, 0, 403, 0, 359, 0, 0,
	352, 353, 355, 354, 356, 361, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 143, 402, 0, 0, 301,
	0, 0, 400, 0, 212, 0, 249, 146, 163, 120,
	160, 105, 116, 0, 145, 190, 221, 225, 0, 0,
	0, 128, 0, 223, 200, 265, 0, 202, 222, 167,
	255, 213, 264, 274, 275, 252, 272, 279, 240, 109,
	251, 263, 125, 234, 0, 0, 0, 111, 261, 247,
	179, 156, 157, 110, 0, 219, 133, 141, 130, 192,
	258, 259, 129, 282, 117, 271, 113, 118, 270, 186,
	254, 262, 180, 172, 112, 260, 178, 171, 162, 137,
	148, 210, 169, 211, 149, 183, 182, 184, 0, 0,
	0, 245, 268, 283, 122, 0, 253, 277, 278, 0,
	214, 123, 142, 136, 209, 140, 185, 119, 151, 242,
	161, 168, 218, 281, 199, 224, 126, 267, 243, 390,
	401, 396, 397, 394, 395, 393, 392, 391, 404, 382,
	383, 384, 385, 387, 0, 398, 399, 386, 104, 114,
	165, 280, 216, 139, 269, 0, 0, 132, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	106, 107, 115, 121, 127, 131, 135, 138, 144, 147,
	150, 152, 153, 154, 159, 170, 174, 175, 176, 177,
	187, 188, 189, 191, 194, 195, 196, 197, 198, 201,
	203, 204, 205, 206, 207, 208, 217, 220, 226, 227,
	228, 229, 230, 231, 233, 236, 237, 238, 239, 246,
	250, 256, 257, 266, 273, 276, 0, 0, 0, 0,
	108, 158, 173, 232, 235, 241, 248, 0, 193, 0,
	0, 215, 155, 346, 0, 0, 0, 134, 0, 345,
	0, 0, 0, 164, 0, 0, 389, 166, 0, 0,
	244, 181, 0, 0, 0, 0, 0, 380, 381, 0,
	0, 0, 0, 0, 0, 0, 0, 66, 0, 0,
	101, 102, 103, 367, 982, 369, 370, 371, 372, 0,
	0, 124, 368, 373, 374, 375, 0, 0, 0, 0,
	343, 360, 0, 388, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 357, 358, 434, 0, 0, 0, 403,
	0, 359, 0, 0, 352, 353, 355, 354, 356, 361,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 143,
	402, 0, 0, 301, 0, 0, 400, 0, 212, 0,
	249, 146, 163, 120, 160, 105, 116, 0, 145, 190,
	221, 225, 0, 0, 0, 128, 0, 223, 200, 265,
	0, 202, 222, 167, 255, 213, 264, 274, 275, 252,
	272, 279, 240, 109, 251, 263, 125, 234, 0, 0,
	0, 111, 261, 247, 179, 156, 157, 110, 0, 219,
	133, 141, 130, 192, 258, 259, 129, 282, 117, 271,
	113, 118, 270, 186, 254, 262, 180, 172, 112, 260,
	178, 171, 162, 137, 148, 210, 169, 211, 149, 183,
	182, 184, 0, 0, 0, 245, 268, 283, 122, 0,
	253, 277, 278, 0, 214, 123, 142, 136, 209, 140,
	185, 119, 151, 242, 161, 168, 218, 281, 199, 224,
	126, 267, 243, 390, 401, 396, 397, 394, 395, 393,
	392, 391, 404, 382, 383, 384, 385, 387, 0, 398,
	399, 386, 104, 114, 165, 280, 216, 139, 269, 0,
	0, 132, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 106, 107, 115, 121, 127, 131,
	135, 138, 144, 147, 150, 152, 153, 154, 159, 170,
	174, 175, 176, 177, 187, 188, 189, 191, 194, 195,
	196, 197, 198, 201, 203, 204, 205, 206, 207, 208,
	217, 220, 226, 227, 228, 229, 230, 231, 233, 236,
	237, 238, 239, 246, 250, 256, 257, 266, 273, 276,
	0, 0, 0, 0, 108, 158, 173, 232, 235, 241,
	248, 0, 193, 0, 0, 215, 155, 346, 0, 0,
	0, 134, 0, 345, 0, 0, 0, 164, 0, 0,
	389, 166, 0, 0, 244, 181, 0, 0, 0, 0,
	0, 380, 381, 0, 0, 0, 0, 0, 0, 0,
	0, 66, 0, 0, 101, 102, 103, 367, 979, 369,
	370, 371, 372, 0, 0, 124, 368, 373, 374, 375,
	0, 0, 0, 0, 343, 360, 0, 388, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 357, 358, 434,
	0, 0, 0, 403, 0, 359, 0, 0, 352, 353,
	355, 354, 356, 361, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 143, 402, 0, 0, 301, 0, 0,
	400, 0, 212, 0, 249, 146, 163, 120, 160, 105,
	116, 0, 145, 190, 221, 225, 0, 0, 0, 128,
	0, 223, 200, 265, 0, 202, 222, 167, 255, 213,
	264, 274, 275, 252, 272, 279, 240, 109, 251, 263,
	125, 234, 0, 0, 0, 111, 261, 247, 179, 156,
	157, 110, 0, 219, 133, 141, 130, 192, 258, 259,
	129, 282, 117, 271, 113, 118, 270, 186, 254, 262,
	180, 172, 112, 260, 178, 171, 162, 137, 148, 210,
	169, 211, 149, 183, 182, 184, 0, 0, 0, 245,
	268, 283, 122, 0, 253, 277, 278, 0, 214, 123,
	142, 136, 209, 140, 185, 119, 151, 242, 161, 168,
	218, 281, 199, 224, 126, 267, 243, 390, 401, 396,
	397, 394, 395, 393, 392, 391, 404, 382, 383, 384,
	385, 387, 0, 398, 399, 386, 104, 114, 165, 280,
	216, 139, 269, 0, 0, 132, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 106, 107,
	115, 121, 127, 131, 135, 138, 144, 147, 150, 152,
	153, 154, 159, 170, 174, 175, 176, 177, 187, 188,
	189, 191, 194, 195, 196, 197, 198, 201, 203, 204,
	205, 206, 207, 208, 217, 220, 226, 227, 228, 229,
	230, 231, 233, 236, 237, 238, 239, 246, 250, 256,
	257, 266, 273, 276, 415, 0, 0, 0, 108, 158,
	173, 232, 235, 241, 248, 0, 193, 0, 0, 215,
	155, 346, 0, 0, 0, 134, 0, 345, 0, 0,
	0, 164, 0, 0, 389, 166, 0, 0, 244, 181,
	0, 0, 0, 0, 0, 380, 381, 0, 0, 0,
	0, 0, 0, 0, 0, 66, 0, 0, 101, 102,
	103, 367, 366, 369, 370, 371, 372, 0, 0, 124,
	368, 373, 374, 375, 0, 0, 0, 0, 343, 360,
	0, 388, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 357, 358, 0, 0, 0, 0, 403, 0, 359,
	0, 0, 352, 353, 355, 354, 356, 361, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 143, 402, 0,
	0, 301, 0, 0, 400, 0, 212, 0, 249, 146,
	163, 120, 160, 105, 116, 0, 145, 190, 221, 225,
	0, 0, 0, 128, 0, 223, 200, 265, 0, 202,
	222, 167, 255, 213, 264, 274, 275, 252, 272, 279,
	240, 109, 251, 263, 125, 234, 0, 0, 0, 111,
	261, 247, 179, 156, 157, 110, 0, 219, 133, 141,
	130, 192, 258, 259, 129, 282, 117, 271, 113, 118,
	270, 186, 254, 262, 180, 172, 112, 260, 178, 171,
	162, 137, 148, 210, 169, 211, 149, 183, 182, 184,
	0, 0, 0, 245, 268, 283, 122, 0, 253, 277,
	278, 0, 214, 123, 142, 136, 209, 140, 185, 119,
	151, 242, 161, 168, 218, 281, 199, 224, 126, 267,
	243, 390, 401, 396, 397, 394, 395, 393, 392, 391,
	404, 382, 383, 384, 385, 387, 0, 398, 399, 386,
	104, 114, 165, 280, 216, 139, 269, 0, 0, 132,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 106, 107, 115, 121, 127, 131, 135, 138,
	144, 147, 150, 152, 153, 154, 159, 170, 174, 175,
	176, 177, 187, 188, 189, 191, 194, 195, 196, 197,
	198, 201, 203, 204, 205, 206, 207, 208, 217, 220,
	226, 227, 228, 229, 230, 231, 233, 236, 237, 238,
	239, 246, 250, 256, 257, 266, 273, 276, 0, 0,
	0, 0, 108, 158, 173, 232, 235, 241, 248, 0,
	193, 0, 0, 215, 155, 346, 0, 0, 0, 134,
	0, 345, 0, 0, 0, 164, 0, 0, 389, 166,
	0, 0, 244, 181, 0, 0, 0, 0, 0, 380,
	381, 0, 0, 0, 0, 0, 0, 0, 0, 66,
	0, 0, 101, 102, 103, 367, 366, 369, 370, 371,
	372, 0, 0, 124, 368, 373, 374, 375, 0, 0,
	0, 0, 343, 360, 0, 388, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 357, 358, 0, 0, 0,
	0, 403, 0, 359, 0, 0, 352, 353, 355, 354,
	356, 361, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 143, 402, 0, 0, 301, 0, 0, 400, 0,
	212, 0, 249, 146, 163, 120, 160, 105, 116, 0,
	145, 190, 221, 225, 0, 0, 0, 128, 0, 223,
	200, 265, 0, 202, 222, 167, 255, 213, 264, 274,
	275, 252, 272, 279, 240, 109, 251, 263, 125, 234,
	0, 0, 0, 111, 261, 247, 179, 156, 157, 110,
	0, 219, 133, 141, 130, 192, 258, 259, 129, 282,
	117, 271, 113, 118, 270, 186, 254, 262, 180, 172,
	112, 260, 178, 171, 162, 137, 148, 210, 169, 211,
	149, 183, 182, 184, 0, 0, 0, 245, 268, 283,
	122, 0, 253, 277, 278, 0, 214, 123, 142, 136,
	209, 140, 185, 119, 151, 242, 161, 168, 218, 281,
	199, 224, 126, 267, 243, 390, 401, 396, 397, 394,
	395, 393, 392, 391, 404, 382, 383, 384, 385, 387,
	0, 398, 399, 386, 104, 114, 165, 280, 216, 139,
	269, 0, 0, 132, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 106, 107, 115, 121,
	127, 131, 135, 138, 144, 147, 150, 152, 153, 154,
	159, 170, 174, 175, 176, 177, 187, 188, 189, 191,
	194, 195, 196, 197, 198, 201, 203, 204, 205, 206,
	207, 208, 217, 220, 226, 227, 228, 229, 230, 231,
	233, 236, 237, 238, 239, 246, 250, 256, 257, 266,
	273, 276, 0, 0, 193, 0, 108, 158, 173, 232,
	235, 241, 248, 134, 0, 0, 0, 215, 155, 164,
	0, 0, 389, 166, 0, 0, 244, 181, 0, 0,
	0, 0, 0, 380, 381, 0, 0, 0, 0, 0,
	0, 0, 0, 66, 0, 0, 101, 102, 103, 367,
	366, 369, 370, 371, 372, 0, 0, 124, 368, 373,
	374, 375, 0, 0, 0, 0, 0, 360, 0, 388,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 357,
	358, 0, 0, 0, 0, 403, 0, 359, 0, 0,
	352, 353, 355, 354, 356, 361, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 143, 402, 0, 0, 301,
	0, 0, 400, 0, 212, 0, 249, 146, 163, 120,
	160, 105, 116, 0, 145, 190, 221, 225, 0, 0,
	0, 128, 0, 223, 200, 265, 1680, 202, 222, 167,
	255, 213, 264, 274, 275, 252, 272, 279, 240, 109,
	251, 263, 125, 234, 0, 0, 0, 111, 261, 247,
	179, 156, 157, 110, 0, 219, 133, 141, 130, 192,
	258, 259, 129, 282, 117, 271, 113, 118, 270, 186,
	254, 262, 180, 172, 112, 260, 178, 171, 162, 137,
	148, 210, 169, 211, 149, 183, 182, 184, 0, 0,
	0, 245, 268, 283, 122, 0, 253, 277, 278, 0,
	214, 123, 142, 136, 209, 140, 185, 119, 151, 242,
	161, 168, 218, 281, 199, 224, 126, 267, 243, 390,
	401, 396, 397, 394, 395, 393, 392, 391, 404, 382,
	383, 384, 385, 387, 0, 398, 399, 386, 104, 114,
	165, 280, 216, 139, 269, 0, 0, 132, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	106, 107, 115, 121, 127, 131, 135, 138, 144, 147,
	150, 152, 153, 154, 159, 170, 174, 175, 176, 177,
	187, 188, 189, 191, 194, 195, 196, 197, 198, 201,
	203, 204, 205, 206, 207, 208, 217, 220, 226, 227,
	228, 229, 230, 231, 233, 236, 237, 238, 239, 246,
	250, 256, 257, 266, 273, 276, 0, 0, 193, 0,
	108, 158, 173, 232, 235, 241, 248, 134, 0, 0,
	0, 215, 155, 164, 0, 0, 389, 166, 0, 0,
	244, 181, 0, 0, 0, 0, 0, 380, 381, 0,
	0, 0, 0, 0, 0, 0, 0, 66, 0, 422,
	101, 102, 103, 367, 366, 369, 370, 371, 372, 0,
	0, 124, 368, 373, 374, 375, 0, 0, 0, 0,
	0, 360, 0, 388, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 357, 358, 0, 0, 0, 0, 403,
	0, 359, 0, 0, 352, 353, 355, 354, 356, 361,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 143,
	402, 0, 0, 301, 0, 0, 400, 0, 212, 0,
	249, 146, 163, 120, 160, 105, 116, 0, 145, 190,
	221, 225, 0, 0, 0, 128, 0, 223, 200, 265,
	0, 202, 222, 167, 255, 213, 264, 274, 275, 252,
	272, 279, 240, 109, 251, 263, 125, 234, 0, 0,
	0, 111, 261, 247, 179, 156, 157, 110, 0, 219,
	133, 141, 130, 192, 258, 259, 129, 282, 117, 271,
	113, 118, 270, 186, 254, 262, 180, 172, 112, 260,
	178, 171, 162, 137, 148, 210, 169, 211, 149, 183,
	182, 184, 0, 0, 0, 245, 268, 283, 122, 0,
	253, 277, 278, 0, 214, 123, 142, 136, 209, 140,
	185, 119, 151, 242, 161, 168, 218, 281, 199, 224,
	126, 267, 243, 390, 401, 396, 397, 394, 395, 393,
	392, 391, 404, 382, 383, 384, 385, 387, 0, 398,
	399, 386, 104, 114, 165, 280, 216, 139, 269, 0,
	0, 132, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 106, 107, 115, 121, 127, 131,
	135, 138, 144, 147, 150, 152, 153, 154, 159, 170,
	174, 175, 176, 177, 187, 188, 189, 191, 194, 195,
	196, 197, 198, 201, 203, 204, 205, 206, 207, 208,
	217, 220, 226, 227, 228, 229, 230, 231, 233, 236,
	237, 238, 239, 246, 250, 256, 257, 266, 273, 276,
	0, 0, 193, 0, 108, 158, 173, 232, 235, 241,
	248, 134, 0, 0, 0, 215, 155, 164, 0, 0,
	389, 166, 0, 0, 244, 181, 0, 0, 0, 0,
	0, 380, 381, 0, 0, 0, 0, 0, 0, 0,
	0, 66, 0, 0, 101, 102, 103, 367, 366, 369,
	370, 371, 372, 0, 0, 124, 368, 373, 374, 375,
	0, 0, 0, 0, 0, 360, 0, 388, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 357, 358, 0,
	0, 0, 0, 403, 0, 359, 0, 0, 352, 353,
	355, 354, 356, 361, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 143, 402, 0, 0, 301, 0, 0,
	400, 0, 212, 0, 249, 146, 163, 120, 160, 105,
	116, 0, 145, 190, 221, 225, 0, 0, 0, 128,
	0, 223, 200, 265, 0, 202, 222, 167, 255, 213,
	264, 274, 275, 252, 272, 279, 240, 109, 251, 263,
	125, 234, 0, 0, 0, 111, 261, 247, 179, 156,
	157, 110, 0, 219, 133, 141, 130, 192, 258, 259,
	129, 282, 117, 271, 113, 118, 270, 186, 254, 262,
	180, 172, 112, 260, 178, 171, 162, 137, 148, 210,
	169, 211, 149, 183, 182, 184, 0, 0, 0, 245,
	268, 283, 122, 0, 253, 277, 278, 0, 214, 123,
	142, 136, 209, 140, 185, 119, 151, 242, 161, 168,
	218, 281, 199, 224, 126, 267, 243, 390, 401, 396,
	397, 394, 395, 393, 392, 391, 404, 382, 383, 384,
	385, 387, 0, 398, 399, 386, 104, 114, 165, 280,
	216, 139, 269, 0, 0, 132, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 106, 107,
	115, 121, 127, 131, 135, 138, 144, 147, 150, 152,
	153, 154, 159, 170, 174, 175, 176, 177, 187, 188,
	189, 191, 194, 195, 196, 197, 198, 201, 203, 204,
	205, 206, 207, 208, 217, 220, 226, 227, 228, 229,
	230, 231, 233, 236, 237, 238, 239, 246, 250, 256,
	257, 266, 273, 276, 0, 0, 193, 0, 108, 158,
	173, 232, 235, 241, 248, 134, 0, 0, 0, 215,
	155, 164, 0, 0, 0, 166, 0, 0, 244, 181,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 101, 102,
	103, 0, 0, 0, 0, 0, 0, 0, 0, 124,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 670, 669, 679,
	680, 672, 673, 674, 675, 676, 677, 678, 671, 0,
	0, 681, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 143, 0, 0,
	0, 301, 0, 0, 0, 0, 212, 0, 249, 146,
	163, 120, 160, 105, 116, 0, 145, 190, 221, 225,
	0, 0, 0, 128, 0, 223, 200, 265, 0, 202,
	222, 167, 255, 213, 264, 274, 275, 252, 272, 279,
	240, 109, 251, 263, 125, 234, 0, 0, 0, 111,
	261, 247, 179, 156, 157, 110, 0, 219, 133, 141,
	130, 192, 258, 259, 129, 282, 117, 271, 113, 118,
	270, 186, 254, 262, 180, 172, 112, 260, 178, 171,
	162, 137, 148, 210, 169, 211, 149, 183, 182, 184,
	0, 0, 0, 245, 268, 283, 122, 0, 253, 277,
	278, 0, 214, 123, 142, 136, 209, 140, 185, 119,
	151, 242, 161, 168, 218, 281, 199, 224, 126, 267,
	243, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	104, 114, 165, 280, 216, 139, 269, 0, 0, 132,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 106, 107, 115, 121, 127, 131, 135, 138,
	144, 147, 150, 152, 153, 154, 159, 170, 174, 175,
	176, 177, 187, 188, 189, 191, 194, 195, 196, 197,
	198, 201, 203, 204, 205, 206, 207, 208, 217, 220,
	226, 227, 228, 229, 230, 231, 233, 236, 237, 238,
	239, 246, 250, 256, 257, 266, 273, 276, 0, 0,
	0, 0, 108, 158, 173, 232, 235, 241, 248, 0,
	0, 193, 0, 215, 155, 771, 0, 0, 0, 0,
	134, 0, 0, 0, 0, 0, 164, 0, 0, 0,
	166, 0, 0, 244, 181, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 101, 102, 103, 0, 773, 0, 0,
	0, 0, 0, 0, 124, 0, 0, 0, 0, 0,
	659, 660, 658, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 661, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 143, 0, 0, 0, 301, 0, 0, 0,
	0, 212, 0, 249, 146, 163, 120, 160, 105, 116,
	0, 145, 190, 221, 225, 0, 0, 0, 128, 0,
	223, 200, 265, 0, 202, 222, 167, 255, 213, 264,
	274, 275, 252, 272, 279, 240, 109, 251, 263, 125,
	234, 0, 0, 0, 111, 261, 247, 179, 156, 157,
	110, 0, 219, 133, 141, 130, 192, 258, 259, 129,
	282, 117, 271, 113, 118, 270, 186, 254, 262, 180,
	172, 112, 260, 178, 171, 162, 137, 148, 210, 169,
	211, 149, 183, 182, 184, 0, 0, 0, 245, 268,
	283, 122, 0, 253, 277, 278, 0, 214, 123, 142,
	136, 209, 140, 185, 119, 151, 242, 161, 168, 218,
	281, 199, 224, 126, 267, 243, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 104, 114, 165, 280, 216,
	139, 269, 0, 0, 132, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 106, 107, 115,
	121, 127, 131, 135, 138, 144, 147, 150, 152, 153,
	154, 159, 170, 174, 175, 176, 177, 187, 188, 189,
	191, 194, 195, 196, 197, 198, 201, 203, 204, 205,
	206, 207, 208, 217, 220, 226, 227, 228, 229, 230,
	231, 233, 236, 237, 238, 239, 246, 250, 256, 257,
	266, 273, 276, 0, 0, 193, 0, 108, 158, 173,
	232, 235, 241, 248, 134, 0, 0, 0, 215, 155,
	164, 0, 0, 0, 166, 0, 0, 244, 181, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 101, 102, 103,
	0, 0, 0, 0, 0, 0, 0, 0, 124, 0,
	0, 0, 0, 0, 93, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 143, 95, 96, 0,
	92, 0, 0, 0, 97, 212, 0, 249, 146, 163,
	120, 160, 105, 116, 0, 145, 190, 221, 225, 0,
	0, 0, 128, 0, 223, 200, 265, 0, 202, 222,
	167, 255, 213, 264, 274, 275, 252, 272, 279, 240,
	109, 251, 263, 125, 234, 0, 0, 0, 111, 261,
	247, 179, 156, 157, 110, 0, 219, 133, 141, 130,
	192, 258, 259, 129, 282, 117, 271, 113, 118, 270,
	186, 254, 262, 180, 172, 112, 260, 178, 171, 162,
	137, 148, 210, 169, 211, 149, 183, 182, 184, 0,
	0, 0, 245, 268, 283, 122, 0, 253, 277, 278,
	0, 214, 123, 142, 136, 209, 140, 185, 119, 151,
	242, 161, 168, 218, 281, 199, 224, 126, 267, 243,
	0, 94, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 104,
	114, 165, 280, 216, 139, 269, 0, 0, 132, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 106, 107, 115, 121, 127, 131, 135, 138, 144,
	147, 150, 152, 153, 154, 159, 170, 174, 175, 176,
	177, 187, 188, 189, 191, 194, 195, 196, 197, 198,
	201, 203, 204, 205, 206, 207, 208, 217, 220, 226,
	227, 228, 229, 230, 231, 233, 236, 237, 238, 239,
	246, 250, 256, 257, 266, 273, 276, 34, 0, 0,
	0, 108, 158, 173, 232, 235, 241, 248, 0, 193,
	0, 0, 215, 155, 0, 0, 0, 0, 134, 0,
	0, 0, 0, 0, 164, 0, 0, 0, 166, 0,
	0, 244, 181, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 66, 0,
	0, 101, 102, 103, 0, 0, 0, 0, 0, 0,
	0, 0, 124, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	143, 0, 0, 0, 301, 0, 0, 0, 0, 212,
	0, 249, 146, 163, 120, 160, 105, 116, 0, 145,
	190, 221, 225, 0, 0, 0, 128, 0, 223, 200,
	265, 0, 202, 222, 167, 255, 213, 264, 274, 275,
	252, 272, 279, 240, 109, 251, 263, 125, 234, 0,
	0, 0, 111, 261, 247, 179, 156, 157, 110, 0,
	219, 133, 141, 130, 192, 258, 259, 129, 282, 117,
	271, 113, 118, 270, 186, 254, 262, 180, 172, 112,
	260, 178, 171, 162, 137, 148, 210, 169, 211, 149,
	183, 182, 184, 0, 0, 0, 245, 268, 283, 122,
	0, 253, 277, 278, 0, 214, 123, 142, 136, 209,
	140, 185, 119, 151, 242, 161, 168, 218, 281, 199,
	224, 126, 267, 243, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 104, 114, 165, 280, 216, 139, 269,
	0, 0, 132, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 106, 107, 115, 121, 127,
	131, 135, 138, 144, 147, 150, 152, 153, 154, 159,
	170, 174, 175, 176, 177, 187, 188, 189, 191, 194,
	195, 196, 197, 198, 201, 203, 204, 205, 206, 207,
	208, 217, 220, 226, 227, 228, 229, 230, 231, 233,
	236, 237, 238, 239, 246, 250, 256, 257, 266, 273,
	276, 0, 0, 0, 0, 108, 158, 173, 232, 235,
	241, 248, 0, 0, 193, 63, 215, 155, 1059, 0,
	0, 0, 0, 134, 0, 0, 0, 0, 0, 164,
	0, 0, 0, 166, 0, 0, 244, 181, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 101, 102, 103, 0,
	1061, 0, 0, 0, 0, 0, 0, 124, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 143, 0, 0, 0, 301,
	0, 0, 0, 0, 212, 0, 249, 146, 163, 120,
	160, 105, 116, 0, 145, 190, 221, 225, 0, 0,
	0, 128, 0, 223, 200, 265, 0, 202, 222, 167,
	255, 213, 264, 274, 275, 252, 272, 279, 240, 109,
	251, 263, 125, 234, 0, 0, 0, 111, 261, 247,
	179, 156, 157, 110, 0, 219, 133, 141, 130, 192,
	258, 259, 129, 282, 117, 271, 113, 118, 270, 186,
	254, 262, 180, 172, 112, 260, 178, 171, 162, 137,
	148, 210, 169, 211, 149, 183, 182, 184, 0, 0,
	0, 245, 268, 283, 122, 0, 253, 277, 278, 0,
	214, 123, 142, 136, 209, 140, 185, 119, 151, 242,
	161, 168, 218, 281, 199, 224, 126, 267, 243, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 104, 114,
	165, 280, 216, 139, 269, 0, 0, 132, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	106, 107, 115, 121, 127, 131, 135, 138, 144, 147,
	150, 152, 153, 154, 159, 170, 174, 175, 176, 177,
	187, 188, 189, 191, 194, 195, 196, 197, 198, 201,
	203, 204, 205, 206, 207, 208, 217, 220, 226, 227,
	228, 229, 230, 231, 233, 236, 237, 238, 239, 246,
	250, 256, 257, 266, 273, 276, 34, 0, 0, 0,
	108, 158, 173, 232, 235, 241, 248, 0, 193, 0,
	0, 215, 155, 0, 0, 0, 0, 134, 0, 0,
	0, 0, 0, 164, 0, 0, 0, 166, 0, 0,
	244, 181, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 66, 0, 0,
	101, 102, 103, 0, 0, 0, 0, 0, 0, 0,
	0, 124, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 143,
	0, 0, 0, 301, 0, 0, 0, 0, 212, 0,
	249, 146, 163, 120, 160, 105, 116, 0, 145, 190,
	221, 225, 0, 0, 0, 128, 0, 223, 200, 265,
	0, 202, 222, 167, 255, 213, 264, 274, 275, 252,
	272, 279, 240, 109, 251, 263, 125, 234, 0, 0,
	0, 111, 261, 247, 179, 156, 157, 110, 0, 219,
	133, 141, 130, 192, 258, 259, 129, 282, 117, 271,
	113, 118, 270, 186, 254, 262, 180, 172, 112, 260,
	178, 171, 162, 137, 148, 210, 169, 211, 149, 183,
	182, 184, 0, 0, 0, 245, 268, 283, 122, 0,
	253, 277, 278, 0, 214, 123, 142, 136, 209, 140,
	185, 119, 151, 242, 161, 168, 218, 281, 199, 224,
	126, 267, 243, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 104, 114, 165, 280, 216, 139, 269, 0,
	0, 132, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 106, 107, 115, 121, 127, 131,
	135, 138, 144, 147, 150, 152, 153, 154, 159, 170,
	174, 175, 176, 177, 187, 188, 189, 191, 194, 195,
	196, 197, 198, 201, 203, 204, 205, 206, 207, 208,
	217, 220, 226, 227, 228, 229, 230, 231, 233, 236,
	237, 238, 239, 246, 250, 256, 257, 266, 273, 276,
	0, 0, 0, 0, 108, 158, 173, 232, 235, 241,
	248, 0, 0, 193, 0, 215, 155, 1059, 0, 0,
	0, 0, 134, 0, 0, 0, 0, 0, 164, 0,
	0, 0, 166, 0, 0, 244, 181, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 101, 102, 103, 0, 1061,
	0, 0, 0, 0, 0, 0, 124, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 143, 0, 0, 0, 301, 0,
	0, 0, 0, 212, 0, 249, 146, 163, 120, 160,
	105, 116, 0, 145, 190, 221, 225, 0, 0, 0,
	128, 0, 223, 200, 265, 0, 1057, 222, 167, 255,
	213, 264, 274, 275, 252, 272, 279, 240, 109, 251,
	263, 125, 234, 0, 0, 0, 111, 261, 247, 179,
	156, 157, 110, 0, 219, 133, 141, 130, 192, 258,
	259, 129, 282, 117, 271, 113, 118, 270, 186, 254,
	262, 180, 172, 112, 260, 178, 171, 162, 137, 148,
	210, 169, 211, 149, 183, 182, 184, 0, 0, 0,
	245, 268, 283, 122, 0, 253, 277, 278, 0, 214,
	123, 142, 136, 209, 140, 185, 119, 151, 242, 161,
	168, 218, 281, 199, 224, 126, 267, 243, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 104, 114, 165,
	280, 216, 139, 269, 0, 0, 132, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 106,
	107, 115, 121, 127, 131, 135, 138, 144, 147, 150,
	152, 153, 154, 159, 170, 174, 175, 176, 177, 187,
	188, 189, 191, 194, 195, 196, 197, 198, 201, 203,
	204, 205, 206, 207, 208, 217, 220, 226, 227, 228,
	229, 230, 231, 233, 236, 237, 238, 239, 246, 250,
	256, 257, 266, 273, 276, 0, 0, 193, 0, 108,
	158, 173, 232, 235, 241, 248, 134, 0, 0, 0,
	215, 155, 164, 0, 0, 0, 166, 0, 0, 244,
	181, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 101,
	102, 103, 0, 0, 1024, 0, 0, 1025, 0, 0,
	124, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 143, 0,
	0, 0, 301, 0, 0, 0, 0, 212, 0, 249,
	146, 163, 120, 160, 105, 116, 0, 145, 190, 221,
	225, 0, 0, 0, 128, 0, 223, 200, 265, 0,
	202, 222, 167, 255, 213, 264, 274, 275, 252, 272,
	279, 240, 109, 251, 263, 125, 234, 0, 0, 0,
	111, 261, 247, 179, 156, 157, 110, 0, 219, 133,
	141, 130, 192, 258, 259, 129, 282, 117, 271, 113,
	118, 270, 186, 254, 262, 180, 172, 112, 260, 178,
	171, 162, 137, 148, 210, 169, 211, 149, 183, 182,
	184, 0, 0, 0, 245, 268, 283, 122, 0, 253,
	277, 278, 0, 214, 123, 142, 136, 209, 140, 185,
	119, 151, 242, 161, 168, 218, 281, 199, 224, 126,
	267, 243, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 104, 114, 165, 280, 216, 139, 269, 0, 0,
	132, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 106, 107, 115, 121, 127, 131, 135,
	138, 144, 147, 150, 152, 153, 154, 159, 170, 174,
	175, 176, 177, 187, 188, 189, 191, 194, 195, 196,
	197, 198, 201, 203, 204, 205, 206, 207, 208, 217,
	220, 226, 227, 228, 229, 230, 231, 233, 236, 237,
	238, 239, 246, 250, 256, 257, 266, 273, 276, 0,
	0, 193, 0, 108, 158, 173, 232, 235, 241, 248,
	134, 0, 807, 0, 215, 155, 164, 0, 0, 0,
	166, 0, 0, 244, 181, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 101, 102, 103, 0, 806, 0, 0,
	0, 0, 0, 0, 124, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 143, 0, 0, 0, 301, 0, 0, 0,
	0, 212, 0, 249, 146, 163, 120, 160, 105, 116,
	0, 145, 190, 221, 225, 0, 0, 0, 128, 0,
	223, 200, 265, 0, 202, 222, 167, 255, 213, 264,
	274, 275, 252, 272, 279, 240, 109, 251, 263, 125,
	234, 0, 0, 0, 111, 261, 247, 179, 156, 157,
	110, 0, 219, 133, 141, 130, 192, 258, 259, 129,
	282, 117, 271, 113, 118, 270, 186, 254, 262, 180,
	172, 112, 260, 178, 171, 162, 137, 148, 210, 169,
	211, 149, 183, 182, 184, 0, 0, 0, 245, 268,
	283, 122, 0, 253, 277, 278, 0, 214, 123, 142,
	136, 209, 140, 185, 119, 151, 242, 161, 168, 218,
	281, 199, 224, 126, 267, 243, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 104, 114, 165, 280, 216,
	139, 269, 0, 0, 132, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 106, 107, 115,
	121, 127, 131, 135, 138, 144, 147, 150, 152, 153,
	154, 159, 170, 174, 175, 176, 177, 187, 188, 189,
	191, 194, 195, 196, 197, 198, 201, 203, 204, 205,
	206, 207, 208, 217, 220, 226, 227, 228, 229, 230,
	231, 233, 236, 237, 238, 239, 246, 250, 256, 257,
	266, 273, 276, 0, 0, 193, 0, 108, 158, 173,
	232, 235, 241, 248, 134, 0, 0, 0, 215, 155,
	164, 0, 0, 0, 166, 0, 0, 244, 181, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 422, 101, 102, 103,
	0, 0, 0, 0, 0, 0, 0, 0, 124, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 143, 0, 0, 0,
	301, 0, 0, 0, 0, 212, 0, 249, 146, 163,
	120, 160, 105, 116, 0, 145, 190, 221, 225, 0,
	0, 0, 128, 0, 223, 200, 265, 0, 202, 222,
	167, 255, 213, 264, 274, 275, 252, 272, 279, 240,
	109, 251, 263, 125, 234, 0, 0, 0, 111, 261,
	247, 179, 156, 157, 110, 0, 219, 133, 141, 130,
	192, 258, 259, 129, 282, 117, 271, 113, 118, 270,
	186, 254, 262, 180, 172, 112, 260, 178, 171, 162,
	137, 148, 210, 169, 211, 149, 183, 182, 184, 0,
	0, 0, 245, 268, 283, 122, 0, 253, 277, 278,
	0, 214, 123, 142, 136, 209, 140, 185, 119, 151,
	242, 161, 168, 218, 281, 199, 224, 126, 267, 243,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 104,
	114, 165, 280, 216, 139, 269, 0, 0, 132, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 106, 107, 115, 121, 127, 131, 135, 138, 144,
	147, 150, 152, 153, 154, 159, 170, 174, 175, 176,
	177, 187, 188, 189, 191, 194, 195, 196, 197, 198,
	201, 203, 204, 205, 206, 207, 208, 217, 220, 226,
	227, 228, 229, 230, 231, 233, 236, 237, 238, 239,
	246, 250, 256, 257, 266, 273, 276, 0, 0, 193,
	0, 108, 158, 173, 232, 235, 241, 248, 134, 0,
	0, 0, 215, 155, 164, 0, 0, 0, 166, 0,
	0, 244, 181, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 66, 0,
	0, 101, 102, 103, 0, 0, 0, 0, 0, 0,
	0, 0, 124, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	143, 0, 0, 0, 301, 0, 0, 0, 0, 212,
	0, 249, 146, 163, 120, 160, 105, 116, 0, 145,
	190, 221, 225, 0, 0, 0, 128, 0, 223, 200,
	265, 0, 202, 222, 167, 255, 213, 264, 274, 275,
	252, 272, 279, 240, 109, 251, 263, 125, 234, 0,
	0, 0, 111, 261, 247, 179, 156, 157, 110, 0,
	219, 133, 141, 130, 192, 258, 259, 129, 282, 117,
	271, 113, 118, 270, 186, 254, 262, 180, 172, 112,
	260, 178, 171, 162, 137, 148, 210, 169, 211, 149,
	183, 182, 184, 0, 0, 0, 245, 268, 283, 122,
	0, 253, 277, 278, 0, 214, 123, 142, 136, 209,
	140, 185, 119, 151, 242, 161, 168, 218, 281, 199,
	224, 126, 267, 243, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 104, 114, 165, 280, 216, 139, 269,
	0, 0, 132, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 106, 107, 115, 121, 127,
	131, 135, 138, 144, 147, 150, 152, 153, 154, 159,
	170, 174, 175, 176, 177, 187, 188, 189, 191, 194,
	195, 196, 197, 198, 201, 203, 204, 205, 206, 207,
	208, 217, 220, 226, 227, 228, 229, 230, 231, 233,
	236, 237, 238, 239, 246, 250, 256, 257, 266, 273,
	276, 0, 0, 193, 0, 108, 158, 173, 232, 235,
	241, 248, 134, 0, 0, 0, 215, 155, 164, 0,
	0, 0, 166, 0, 0, 244, 181, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 101, 102, 103, 0, 1061,
	0, 0, 0, 0, 0, 0, 124, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 143, 0, 0, 0, 301, 0,
	0, 0, 0, 212, 0, 249, 146, 163, 120, 160,
	105, 116, 0, 145, 190, 221, 225, 0, 0, 0,
	128, 0, 223, 200, 265, 0, 202, 222, 167, 255,
	213, 264, 274, 275, 252, 272, 279, 240, 109, 251,
	263, 125, 234, 0, 0, 0, 111, 261, 247, 179,
	156, 157, 110, 0, 219, 133, 141, 130, 192, 258,
	259, 129, 282, 117, 271, 113, 118, 270, 186, 254,
	262, 180, 172, 112, 260, 178, 171, 162, 137, 148,
	210, 169, 211, 149, 183, 182, 184, 0, 0, 0,
	245, 268, 283, 122, 0, 253, 277, 278, 0, 214,
	123, 142, 136, 209, 140, 185, 119, 151, 242, 161,
	168, 218, 281, 199, 224, 126, 267, 243, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 104, 114, 165,
	280, 216, 139, 269, 0, 0, 132, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 106,
	107, 115, 121, 127, 131, 135, 138, 144, 147, 150,
	152, 153, 154, 159, 170, 174, 175, 176, 177, 187,
	188, 189, 191, 194, 195, 196, 197, 198, 201, 203,
	204, 205, 206, 207, 208, 217, 220, 226, 227, 228,
	229, 230, 231, 233, 236, 237, 238, 239, 246, 250,
	256, 257, 266, 273, 276, 0, 0, 193, 0, 108,
	158, 173, 232, 235, 241, 248, 134, 0, 0, 0,
	215, 155, 164, 0, 0, 0, 166, 0, 0, 244,
	181, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 101,
	102, 103, 0, 1178, 0, 0, 0, 0, 0, 0,
	124, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 143, 0,
	0, 0, 301, 0, 0, 0, 0, 212, 0, 249,
	146, 163, 120, 160, 105, 116, 0, 145, 190, 221,
	225, 0, 0, 0, 128, 0, 223, 200, 265, 0,
	202, 222, 167, 255, 213, 264, 274, 275, 252, 272,
	279, 240, 109, 251, 263, 125, 234, 0, 0, 0,
	111, 261, 247, 179, 156, 157, 110, 0, 219, 133,
	141, 130, 192, 258, 259, 129, 282, 117, 271, 113,
	118, 270, 186, 254, 262, 180, 172, 112, 260, 178,
	171, 162, 137, 148, 210, 169, 211, 149, 183, 182,
	184, 0, 0, 0, 245, 268, 283, 122, 0, 253,
	277, 278, 0, 214, 123, 142, 136, 209, 140, 185,
	119, 151, 242, 161, 168, 218, 281, 199, 224, 126,
	267, 243, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 104, 114, 165, 280, 216, 139, 269, 0, 0,
	132, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 106, 107, 115, 121, 127, 131, 135,
	138, 144, 147, 150, 152, 153, 154, 159, 170, 174,
	175, 176, 177, 187, 188, 189, 191, 194, 195, 196,
	197, 198, 201, 203, 204, 205, 206, 207, 208, 217,
	220, 226, 227, 228, 229, 230, 231, 233, 236, 237,
	238, 239, 246, 250, 256, 257, 266, 273, 276, 0,
	0, 0, 193, 108, 158, 173, 232, 235, 241, 248,
	776, 134, 0, 0, 215, 155, 0, 164, 0, 0,
	0, 166, 0, 0, 244, 181, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 101, 102, 103, 0, 0, 0,
	0, 0, 0, 0, 0, 124, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 143, 0, 0, 0, 301, 0, 0,
	0, 0, 212, 0, 249, 146, 163, 120, 160, 105,
	116, 0, 145, 190, 221, 225, 0, 0, 0, 128,
	0, 223, 200, 265, 0, 202, 222, 167, 255, 213,
	264, 274, 275, 252, 272, 279, 240, 109, 251, 263,
	125, 234, 0, 0, 0, 111, 261, 247, 179, 156,
	157, 110, 0, 219, 133, 141, 130, 192, 258, 259,
	129, 282, 117, 271, 113, 118, 270, 186, 254, 262,
	180, 172, 112, 260, 178, 171, 162, 137, 148, 210,
	169, 211, 149, 183, 182, 184, 0, 0, 0, 245,
	268, 283, 122, 0, 253, 277, 278, 0, 214, 123,
	142, 136, 209, 140, 185, 119, 151, 242, 161, 168,
	218, 281, 199, 224, 126, 267, 243, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 104, 114, 165, 280,
	216, 139, 269, 0, 0, 132, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 106, 107,
	115, 121, 127, 131, 135, 138, 144, 147, 150, 152,
	153, 154, 159, 170, 174, 175, 176, 177, 187, 188,
	189, 191, 194, 195, 196, 197, 198, 201, 203, 204,
	205, 206, 207, 208, 217, 220, 226, 227, 228, 229,
	230, 231, 233, 236, 237, 238, 239, 246, 250, 256,
	257, 266, 273, 276, 0, 0, 193, 0, 108, 158,
	173, 232, 235, 241, 248, 134, 0, 0, 0, 215,
	155, 164, 0, 0, 0, 166, 0, 0, 244, 181,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 101, 102,
	103, 0, 773, 0, 0, 0, 0, 0, 0, 124,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 143, 0, 0,
	0, 301, 0, 0, 0, 0, 212, 0, 249, 146,
	163, 120, 160, 105, 116, 0, 145, 190, 221, 225,
	0, 0, 0, 128, 0, 223, 200, 265, 0, 202,
	222, 167, 255, 213, 264, 274, 275, 252, 272, 279,
	240, 109, 251, 263, 125, 234, 0, 0, 0, 111,
	261, 247, 179, 156, 157, 110, 0, 219, 133, 141,
	130, 192, 258, 259, 129, 282, 117, 271, 113, 118,
	270, 186, 254, 262, 180, 172, 112, 260, 178, 171,
	162, 137, 148, 210, 169, 211, 149, 183, 182, 184,
	0, 0, 0, 245, 268, 283, 122, 0, 253, 277,
	278, 0, 214, 123, 142, 136, 209, 140, 185, 119,
	151, 242, 161, 168, 218, 281, 199, 224, 126, 267,
	243, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	104, 114, 165, 280, 216, 139, 269, 0, 0, 132,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 106, 107, 115, 121, 127, 131, 135, 138,
	144, 147, 150, 152, 153, 154, 159, 170, 174, 175,
	176, 177, 187, 188, 189, 191, 194, 195, 196, 197,
	198, 201, 203, 204, 205, 206, 207, 208, 217, 220,
	226, 227, 228, 229, 230, 231, 233, 236, 237, 238,
	239, 246, 250, 256, 257, 266, 273, 276, 0, 0,
	0, 0, 108, 158, 173, 232, 235, 241, 248, 439,
	0, 0, 0, 215, 155, 0, 193, 0, 0, 0,
	0, 0, 0, 0, 0, 134, 0, 0, 0, 0,
	0, 164, 0, 0, 0, 166, 0, 0, 244, 181,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 101, 102,
	103, 0, 0, 0, 0, 0, 0, 0, 0, 124,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 143, 0, 0,
	0, 301, 0, 0, 0, 0, 212, 0, 249, 146,
	163, 120, 160, 105, 116, 0, 145, 190, 221, 225,
	0, 0, 0, 128, 0, 223, 200, 265, 0, 202,
	222, 167, 255, 213, 264, 274, 275, 252, 272, 279,
	240, 109, 251, 263, 125, 234, 0, 0, 0, 111,
	261, 247, 179, 156, 157, 110, 0, 219, 133, 141,
	130, 192, 258, 259, 129, 282, 117, 271, 113, 118,
	270, 186, 254, 262, 180, 172, 112, 260, 178, 171,
	162, 137, 148, 210, 169, 211, 149, 183, 182, 184,
	0, 0, 0, 245, 268, 283, 122, 0, 253, 277,
	278, 0, 214, 123, 142, 136, 209, 140, 185, 119,
	151, 242, 161, 168, 218, 281, 199, 224, 126, 267,
	243, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	104, 114, 165, 280, 216, 139, 269, 0, 0, 132,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 106, 107, 115, 121, 127, 131, 135, 138,
	144, 147, 150, 152, 153, 154, 159, 170, 174, 175,
	176, 177, 187, 188, 189, 191, 194, 195, 196, 197,
	198, 201, 203, 204, 205, 206, 207, 208, 217, 220,
	226, 227, 228, 229, 230, 231, 233, 236, 237, 238,
	239, 246, 250, 256, 257, 266, 273, 276, 0, 0,
	193, 0, 108, 158, 173, 232, 235, 241, 248, 134,
	0, 0, 0, 215, 155, 164, 0, 0, 0, 166,
	0, 0, 244, 181, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 101, 102, 103, 0, 0, 0, 0, 0,
	0, 0, 0, 124, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 143, 0, 296, 0, 301, 0, 0, 0, 0,
	212, 0, 249, 146, 163, 120, 160, 105, 116, 0,
	145, 190, 221, 225, 0, 0, 0, 128, 0, 223,
	200, 265, 0, 202, 222, 167, 255, 213, 264, 274,
	275, 252, 272, 279, 240, 109, 251, 263, 125, 234,
	0, 0, 0, 111, 261, 247, 179, 156, 157, 110,
	0, 219, 133, 141, 130, 192, 258, 259, 129, 282,
	117, 271, 113, 118, 270, 186, 254, 262, 180, 172,
	112, 260, 178, 171, 162, 137, 148, 210, 169, 211,
	149, 183, 182, 184, 0, 0, 0, 245, 268, 283,
	122, 0, 253, 277, 278, 0, 214, 123, 142, 136,
	209, 140, 185, 119, 151, 242, 161, 168, 218, 281,
	199, 224, 126, 267, 243, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 104, 114, 165, 280, 216, 139,
	269, 0, 0, 132, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 106, 107, 115, 121,
	127, 131, 135, 138, 144, 147, 150, 152, 153, 154,
	159, 170, 174, 175, 176, 177, 187, 188, 189, 191,
	194, 195, 196, 197, 198, 201, 203, 204, 205, 206,
	207, 208, 217, 220, 226, 227, 228, 229, 230, 231,
	233, 236, 237, 238, 239, 246, 250, 256, 257, 266,
	273, 276, 0, 0, 193, 0, 108, 158, 173, 232,
	235, 241, 248, 134, 0, 0, 0, 215, 155, 164,
	0, 0, 0, 166, 0, 0, 244, 181, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 101, 102, 103, 0,
	0, 0, 0, 0, 0, 0, 0, 124, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 143, 0, 0, 0, 301,
	0, 0, 0, 0, 212, 0, 249, 146, 163, 120,
	160, 105, 116, 0, 145, 190, 221, 225, 0, 0,
	0, 128, 0, 223, 200, 265, 0, 202, 222, 167,
	255, 213, 264, 274, 275, 252, 272, 279, 240, 109,
	251, 263, 125, 234, 0, 0, 0, 111, 261, 247,
	179, 156, 157, 110, 0, 219, 133, 141, 130, 192,
	258, 259, 129, 282, 117, 271, 113, 118, 270, 186,
	254, 262, 180, 172, 112, 260, 178, 171, 162, 137,
	148, 210, 169, 211, 149, 183, 182, 184, 0, 0,
	0, 245, 268, 283, 122, 0, 253, 277, 278, 0,
	214, 123, 142, 136, 209, 140, 185, 119, 151, 242,
	161, 168, 218, 281, 199, 224, 126, 267, 243, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 104, 114,
	165, 280, 216, 139, 269, 0, 0, 132, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	106, 107, 115, 121, 127, 131, 135, 138, 144, 147,
	150, 152, 153, 154, 159, 170, 174, 175, 176, 177,
	187, 188, 189, 191, 194, 195, 196, 197, 198, 201,
	203, 204, 205, 206, 207, 208, 217, 220, 226, 227,
	228, 229, 230, 231, 233, 236, 237, 238, 239, 246,
	250, 256, 257, 266, 273, 276, 0, 0, 0, 0,
	108, 158, 173, 232, 235, 241, 248, 0, 0, 0,
	0, 215, 155,
}

var yyPact = [...]int{
	96, -1000, -292, 1167, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1133, 944, -1000, -1000, -1000, -1000, -1000, -1000,
	354, 12807, 52, 184, 48, 17682, 182, 154, 18026, -1000,
	55, -1000, 38, 18026, 51, -27, -1000, -1000, -29, -31,
	-1000, 10732, -270, -1000, 518, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 910, 1101, 1109, 1117, 622,
	1081, -1000, 9316, 125, 125, 17338, 7541, -1000, -1000, 628,
	18026, 160, 18026, -108, 120, 120, 120, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 178, 18026, 625, 625, 386, -1000,
	18026, 116, 625, 116, 116, 116, 18026, -1000, 232, -1000,
	-1000, -1000, 18026, 625, 1022, 377, 130, 4937, -1000, 563,
	-1000, 4937, 62, 4937, -26, 1142, 63, 32, -1000, 625,
	-56, -1000, -1000, -1000, -1000, -1000, -1000, 145, -1000, -1000,
	18026, -43, 167, 340, -1000, -1000, -1000, -1000, -1000, -1000,
	682, 619, -1000, 10732, 2016, 857, 857, -1000, -1000, 196,
	-1000, -1000, 11764, 11764, 11764, 11764, 11764, 11764, 11764, 11764,
	11764, 11764, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 857, 231, -1000, 10378,
	857, 857, 857, 857, 857, 857, 857, 857, 10732, 857,
	857, 857, 857, 857, 857, 857, 857, 857, 857, 857,
	857, 857, 857, 857, 857, -1000, -1000, -268, -276, 18026,
	-1000, 18026, 1133, -1000, 944, -1000, -1000, -1000, 1058, 10732,
	10732, 1133, -1000, 993, 9316, -1000, -1000, 1015, -1000, -1000,
	-1000, -1000, 398, 1152, -1000, 12463, 230, 16634, 15601, 18026,
	890, 759, -1000, -1000, 227, 846, 7169, -49, -1000, -1000,
	-1000, 177, 14913, -1000, -1000, -1000, 1018, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 866, 18026,
	-1000, 349, -1000, 625, 4937, 147, 625, 380, 625, 18026,
	18026, 4937, 4937, 4937, 69, 111, 104, 18026, 810, 137,
	18026, 1094, 953, 18026, 625, 625, -1000, 6425, -1000, 4937,
	377, -1000, 569, 10732, 4937, 4937, 4937, 18026, 4937, 4937,
	-1000, -1000, -1000, 388, 366, -1000, -1000, -1000, -1000, -1000,
	4937, 4937, -1000, 1151, 363, -1000, -1000, -1000, -1000, 10732,
	294, -1000, 950, -1000, -1000, -61, 50, -1000, 18026, -1000,
	1167, -1000, -1000, -1000, -104, -1000, -1000, 10732, 10732, 10732,
	10732, 747, 306, 11764, 459, 385, 11764, 11764, 11764, 11764,
	11764, 11764, 11764, 11764, 11764, 11764, 11764, 11764, 11764, 11764,
	11764, 704, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	625, -1000, 1165, 872, 872, 246, 246, 246, 246, 246,
	246, 246, 246, 246, 12108, 7900, 6425, 622, 862, 1133,
	9316, 9316, 10732, 10732, 10024, 9670, 9316, 1028, 350, 619,
	18026, -1000, -1000, 11420, -1000, -1000, -1000, -1000, -1000, 576,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 18026, 18026, 9316,
	9316, 9316, 9316, 9316, 625, 625, 625, 625, 541, -1000,
	1109, 622, 1015, -1000, 1160, 283, 758, 800, -1000, 640,
	1109, 14569, 851, -1000, 1015, -1000, -1000, -1000, 18026, -1000,
	-1000, 16978, -1000, -1000, 6053, 80, 18026, -1000, 678, 951,
	-1000, -1000, -1000, 1096, 13161, 14225, 80, 670, 15601, 18026,
	-1000, -1000, 15601, 18026, 5681, 6797, -49, -1000, 780, -1000,
	-73, -54, 8608, 8254, 222, -1000, -1000, -1000, -1000, 4565,
	311, 642, 515, -19, -1000, -1000, -1000, 895, -1000, 895,
	895, 895, 895, 15, 15, 15, 15, -1000, -1000, -1000,
	-1000, -1000, 918, 917, -1000, 895, 895, 895, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 915, 915, 915, 900,
	900, 906, -1000, 18026, 4937, 1084, 4937, -1000, 1707, -1000,
	-1000, -1000, 18026, 18026, 18026, 18026, 18026, 202, 18026, 18026,
	796, -1000, 18026, 4937, -1000, -1000, 225, -1000, -1000, -1000,
	-1000, -1000, 619, -1000, -1000, -1000, -1000, -1000, -1000, 18026,
	-1000, -1000, 18026, -1000, 16634, -1000, -1000, 18026, 377, 18026,
	18026, 619, -1000, 562, 18026, -1000, 18026, -1000, 16289, -1000,
	-1000, -1000, -1000, 619, 306, 329, 502, -1000, -1000, 538,
	-1000, -1000, 2031, -1000, -1000, -1000, -1000, 459, 11764, 11764,
	11764, 567, 2031, 1961, 549, 2155, 246, 534, 534, 255,
	255, 255, 255, 255, 469, 469, -1000, -1000, -1000, 576,
	-1000, -1000, -1000, 576, 9316, 9316, 788, 857, 223, -1000,
	910, -1000, -1000, 1109, 848, 848, 551, 703, 323, 1150,
	848, 305, 1149, 848, 848, 9316, -1000, -1000, 441, -1000,
	10732, 576, -1000, 221, -1000, 650, 786, 784, 848, 576,
	576, 848, 848, -258, -1000, 625, -1000, 653, -1000, 337,
	-1000, 1058, -1000, -1000, 990, 10732, 10732, 10732, -1000, -1000,
	-1000, 1058, 1126, -1000, 999, 998, 1141, 9316, 15601, 1015,
	-1000, -1000, -1000, 220, 842, 857, -1000, 18026, 15601, 15601,
	15601, 15601, 15601, -1000, 978, 971, -1000, 968, 964, 974,
	18026, -1000, 854, 576, 622, 13161, 245, 857, -1000, 15945,
	-1000, -1000, 1141, 15601, 761, -1000, 761, -1000, 218, -1000,
	-1000, 780, -49, -63, -1000, -1000, -1000, -1000, 619, -1000,
	-1000, 619, -1000, 769, 770, 4193, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 914, 625, -1000, 1060, 273, 262, 625,
	1054, -1000, -1000, -1000, 1024, -1000, 384, -25, -1000, -1000,
	472, 15, 15, -1000, -1000, 222, 1016, 222, 222, 222,
	557, 557, -1000, -1000, -1000, -1000, 450, -1000, -1000, -1000,
	445, -1000, 939, 18026, 4937, -1000, -1000, -1000, -1000, 360,
	360, 272, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 79, 873, -1000, -1000, -1000, -1000, 59,
	67, 133, -1000, 4937, -1000, 6425, 363, 377, 913, 363,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 567, 2031, 1771, -1000, 11764, 11764, -1000,
	-1000, 848, 848, 9316, 6425, 1133, 1058, -1000, -1000, 150,
	704, 150, 11764, 11764, -1000, 11764, 11764, -1000, -121, 794,
	346, -1000, 10732, 729, -1000, 6425, -1000, 11764, 11764, -1000,
	-1000, -1000, -1000, -1000, 550, -1000, -1000, -1000, -1000, 541,
	-1000, -1000, 335, -1000, 872, -1000, 987, 619, 619, -1000,
	-1000, 18026, -1000, -1000, -1000, -1000, 1137, 10732, -1000, 765,
	-1000, 5309, 938, 18026, 857, 1167, 13870, 18026, 776, -1000,
	326, 951, 905, 935, 1180, -1000, -1000, -1000, -1000, 965,
	-1000, 937, -1000, -1000, -1000, -1000, -1000, -1000, 622, -1000,
	157, 151, 149, 18026, -1000, 1133, 761, -1000, -1000, 258,
	-1000, -1000, -89, -95, -1000, -1000, -1000, 4565, -1000, 4565,
	18026, 98, -1000, 625, 625, -1000, -1000, 901, 928, 11764,
	-1000, -1000, -1000, 601, 222, 222, -1000, 370, -1000, -1000,
	-1000, 839, -1000, 837, 746, 832, 18026, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 18026, -1000, -1000, -1000,
	-1000, -1000, 18026, -134, 625, 18026, 18026, 18026, 18026, -1000,
	212, 377, -1000, 377, 18026, 377, -1000, 11764, 2031, 2031,
	-1000, -1000, 576, -1000, 1109, -1000, 576, 895, 895, -1000,
	895, 900, -1000, 895, 41, 895, 31, 576, 576, 1903,
	1873, 1845, 1810, 857, -116, -1000, 619, 10732, -1000, 1625,
	966, 539, -1000, 872, -1000, -1000, -1000, 1135, 1114, 619,
	-1000, -1000, 1069, 827, 662, -1000, -1000, 8962, 798, 208,
	782, -1000, 1141, 18026, 10732, -1000, -1000, 10732, 896, -1000,
	10732, -1000, -1000, -1000, 1133, 857, 857, 857, 782, 1109,
	-1000, -1000, -1000, -1000, 4193, -1000, 741, -1000, 895, -1000,
	-1000, -1000, 18026, -11, 1159, 2031, -1000, -1000, -1000, -1000,
	-1000, 15, 536, 15, 440, -1000, 437, 4937, -1000, -1000,
	-1000, -1000, 1080, -1000, 6425, -1000, -1000, 892, 891, -1000,
	-1000, 6425, -1000, -1000, 725, -1000, -1000, 2031, -1000, 1058,
	-1000, -1000, 153, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 11764, 11764, 11764, 11764, 11764, 1109, 535, 619, 11764,
	11764, -1000, -1000, -1000, 10732, 10732, 1052, -1000, 857, -1000,
	927, 18026, 18026, -1000, 18026, 1133, -1000, 619, 619, 18026,
	619, 15257, 18026, 18026, 13516, -1000, 195, 18026, -1000, 720,
	219, -1000, -122, 222, -1000, 222, 586, 578, -1000, 857,
	744, -1000, 314, 18026, 18026, -1000, -1000, 18026, -1000, -1000,
	-1000, 650, 650, 650, 650, 61, 576, -1000, 650, 650,
	619, 682, 1158, -1000, 857, 1167, 206, -1000, -1000, 1109,
	685, 674, -1000, 674, 674, 245, 195, -1000, 625, 312,
	522, -1000, 93, 394, 1050, -1000, 1027, -1000, -1000, -1000,
	-1000, -1000, 78, 6425, 4565, 641, -1000, -1000, -1000, -1000,
	-1000, -1000, 576, 94, -144, -1000, -1000, -1000, 18026, 662,
	18026, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 431,
	-1000, -1000, 18026, -1000, 442, -1000, -1000, 635, -1000, 18026,
	-1000, -1000, 873, -1000, 984, -131, -152, 654, -1000, -1000,
	861, -1000, -1000, 78, 996, -134, -1000, 970, -1000, 18026,
	-1000, 75, -1000, -135, 620, 73, -147, 924, 857, -157,
	923, -1000, 1146, 11076, -1000, -1000, 1156, 215, 215, 650,
	576, -1000, -1000, -1000, 99, 456, -1000, -1000, -1000, -1000,
	-1000, -1000,
}

var yyPgo = [...]int{
	0, 1403, 1401, 27, 74, 67, 1400, 1398, 1397, 122,
	119, 113, 1396, 1390, 1388, 1384, 1383, 1382, 1380, 1378,
	1376, 1375, 1374, 1373, 1372, 1371, 1370, 1369, 1368, 1367,
	1366, 1364, 1363, 1174, 1361, 1360, 1352, 1351, 78, 1350,
	80, 1349, 1348, 1346, 1345, 1344, 1343, 1342, 1341, 1340,
	40, 211, 50, 62, 1339, 61, 2173, 36, 56, 55,
	71, 1338, 41, 1332, 1330, 83, 1329, 1328, 60, 1326,
	1324, 112, 68, 77, 1323, 14, 38, 1319, 1317, 1316,
	1315, 47, 1943, 1314, 1313, 13, 1312, 1311, 95, 1309,
	69, 26, 8, 18, 17, 1308, 66, 1303, 6, 1302,
	65, 1299, 1297, 1296, 1294, 24, 1293, 63, 1292, 52,
	25, 1291, 11, 1290, 76, 37, 21, 9, 1289, 1288,
	19, 70, 58, 73, 1287, 1286, 435, 1285, 977, 45,
	1283, 1281, 124, 23, 1279, 123, 416, 1278, 1277, 1276,
	1275, 30, 801, 1772, 22, 79, 1272, 1271, 1270, 2641,
	64, 59, 16, 1268, 1266, 1265, 31, 349, 48, 1264,
	1262, 43, 1261, 1259, 1256, 1255, 1253, 1251, 1250, 321,
	1247, 1243, 1223, 34, 20, 1221, 1219, 72, 32, 1218,
	1210, 1209, 51, 75, 1208, 1207, 53, 1206, 81, 29,
	1205, 1204, 1203, 1202, 1200, 33, 7, 1199, 15, 1198,
	12, 1194, 35, 1193, 5, 1192, 10, 1190, 2, 0,
	1189, 4, 1188, 1186, 44, 3, 1184, 1, 39, 1183,
	1182, 1181, 1180, 1179, 1407, 1187, 84, 1178, 82,
}

var yyR1 = [...]int{
	0, 222, 223, 223, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 209, 209, 209, 212, 213, 20,
	3, 3, 3, 3, 2, 2, 8, 4, 5, 5,
	9, 9, 41, 41, 10, 11, 11, 11, 11, 226,
	226, 65, 65, 66, 66, 114, 114, 12, 13, 13,
	123, 123, 122, 122, 122, 124, 124, 124, 124, 159,
	159, 14, 14, 14, 14, 14, 14, 14, 37, 37,
	32, 32, 32, 32, 35, 35, 35, 49, 49, 49,
	211, 211, 210, 208, 208, 207, 207, 206, 21, 191,
	193, 193, 192, 192, 192, 192, 183, 162, 162, 162,
	162, 165, 165, 163, 163, 163, 163, 163, 163, 163,
	163, 163, 164, 164, 164, 164, 164, 166, 166, 166,
	166, 166, 167, 167, 167, 167, 167, 167, 167, 167,
	167, 167, 167, 167, 167, 167, 167, 168, 168, 168,
	168, 168, 168, 168, 168, 182, 182, 169, 169, 177,
	177, 178, 178, 178, 175, 175, 176, 176, 179, 179,
	179, 171, 171, 172, 172, 180, 180, 173, 173, 173,
	174, 174, 174, 181, 181, 181, 181, 181, 170, 170,
	184, 184, 201, 201, 200, 200, 200, 34, 190, 190,
	197, 197, 197, 197, 197, 187, 187, 187, 188, 188,
	186, 186, 189, 189, 199, 199, 198, 185, 185, 202,
	202, 202, 202, 216, 217, 215, 215, 215, 215, 215,
	194, 194, 194, 195, 195, 195, 196, 196, 196, 15,
	15, 15, 15, 15, 15, 15, 15, 15, 15, 15,
	15, 15, 15, 15, 15, 15, 214, 214, 214, 214,
	214, 214, 214, 214, 214, 214, 214, 214, 214, 214,
	205, 203, 203, 204, 204, 16, 22, 22, 17, 17,
	17, 17, 17, 18, 18, 23, 24, 24, 24, 24,
	24, 24, 24, 24, 24, 24, 24, 24, 24, 24,
	24, 24, 24, 24, 24, 24, 24, 24, 24, 24,
	24, 24, 24, 24, 24, 24, 24, 130, 130, 132,
	132, 128, 128, 131, 131, 129, 129, 129, 133, 133,
	133, 134, 134, 160, 160, 160, 25, 25, 27, 27,
	28, 29, 29, 154, 154, 155, 155, 30, 31, 42,
	42, 42, 42, 42, 42, 44, 44, 44, 7, 7,
	7, 7, 43, 43, 43, 6, 6, 26, 26, 26,
	26, 19, 227, 38, 39, 39, 40, 40, 40, 46,
	46, 46, 45, 45, 45, 52, 52, 54, 54, 54,
	54, 54, 55, 55, 55, 55, 55, 55, 51, 51,
	53, 53, 53, 53, 146, 146, 146, 145, 145, 57,
	57, 58, 58, 59, 59, 60, 60, 60, 60, 97,
	74, 74, 113, 113, 112, 112, 115, 115, 61, 61,
	61, 61, 62, 62, 63, 63, 64, 64, 153, 153,
	152, 152, 152, 151, 151, 67, 67, 67, 69, 68,
	68, 68, 68, 70, 70, 72, 72, 71, 71, 71,
	71, 73, 75, 75, 75, 75, 75, 76, 76, 56,
	56, 56, 56, 56, 56, 56, 56, 127, 127, 78,
	78, 77, 77, 77, 77, 77, 77, 77, 77, 77,
	77, 89, 89, 89, 89, 89, 89, 79, 79, 79,
	79, 79, 79, 79, 50, 50, 90, 90, 90, 96,
	91, 91, 82, 82, 82, 82, 82, 82, 82, 82,
	82, 82, 82, 82, 82, 82, 82, 82, 82, 82,
	82, 82, 82, 82, 82, 82, 82, 82, 82, 82,
	82, 82, 82, 82, 82, 82, 86, 86, 86, 86,
	84, 84, 84, 84, 84, 84, 84, 84, 84, 84,
	84, 84, 84, 85, 85, 85, 85, 85, 85, 85,
	85, 85, 85, 85, 85, 85, 85, 85, 85, 228,
	228, 88, 87, 87, 87, 87, 87, 87, 87, 47,
	47, 47, 47, 47, 158, 158, 161, 161, 161, 161,
	161, 161, 161, 161, 161, 161, 161, 161, 161, 101,
	101, 48, 48, 99, 99, 100, 102, 102, 98, 98,
	98, 81, 81, 81, 81, 81, 81, 81, 81, 83,
	83, 83, 103, 103, 104, 104, 105, 105, 106, 106,
	107, 108, 108, 108, 109, 109, 109, 109, 110, 110,
	110, 80, 80, 80, 80, 111, 111, 111, 111, 116,
	116, 92, 92, 94, 94, 93, 95, 117, 117, 120,
	118, 118, 118, 121, 121, 121, 121, 121, 121, 121,
	119, 119, 119, 148, 148, 148, 125, 125, 135, 135,
	136, 136, 126, 126, 137, 137, 137, 137, 137, 137,
	137, 137, 137, 137, 138, 138, 138, 139, 139, 140,
	140, 140, 147, 147, 143, 143, 144, 144, 149, 149,
	150, 150, 218, 219, 220, 220, 221, 221, 221, 33,
	36, 36, 141, 141, 141, 141, 141, 141, 141, 141,
	141, 141, 141, 141, 141, 141, 141, 141, 141, 141,
	141, 141, 141, 141, 141, 141, 141, 141, 141, 141,
	141, 141, 141, 141, 141, 141, 141, 141, 141, 141,
	141, 141, 141, 141, 141, 141, 141, 141, 141, 141,
	141, 141, 141, 141, 141, 141, 141, 141, 141, 141,
	141, 141, 141, 141, 141, 141, 141, 141, 141, 141,
	141, 141, 141, 141, 141, 141, 141, 141, 141, 141,
	141, 141, 141, 141, 141, 141, 141, 141, 141, 141,
	141, 141, 141, 141, 141, 141, 141, 141, 141, 141,
	141, 141, 141, 141, 141, 141, 141, 141, 141, 141,
	141, 141, 141, 141, 141, 141, 141, 141, 141, 141,
	141, 141, 142, 142, 142, 142, 142, 142, 142, 142,
	142, 142, 142, 142, 142, 142, 142, 142, 142, 142,
	142, 142, 142, 142, 142, 142, 142, 142, 142, 142,
	142, 142, 142, 142, 142, 142, 142, 142, 142, 142,
	142, 142, 142, 142, 142, 142, 142, 142, 142, 142,
	142, 142, 142, 142, 142, 142, 142, 142, 142, 142,
	142, 142, 142, 142, 142, 142, 142, 142, 142, 142,
	142, 142, 142, 142, 142, 142, 142, 142, 142, 142,
	142, 142, 142, 142, 142, 142, 142, 142, 142, 142,
	142, 142, 142, 142, 142, 142, 142, 142, 142, 142,
	142, 142, 142, 142, 142, 142, 142, 142, 142, 142,
	142, 142, 142, 142, 142, 142, 142, 142, 142, 142,
	142, 142, 142, 142, 142, 142, 142, 142, 142, 142,
	142, 142, 142, 142, 142, 142, 142, 142, 142, 142,
	142, 142, 142, 142, 142, 142, 142, 142, 142, 142,
	142, 142, 142, 142, 142, 142, 142, 142, 142, 142,
	142, 142, 142, 142, 142, 142, 142, 142, 142, 142,
	142, 142, 142, 142, 142, 142, 142, 142, 142, 142,
	142, 142, 142, 224, 225, 156, 157, 157, 157,
}

var yyR2 = [...]int{
	0, 2, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 0, 1, 1, 1, 1, 1, 2,
	4, 6, 6, 7, 4, 6, 5, 8, 1, 3,
	7, 8, 1, 1, 10, 8, 7, 6, 6, 1,
	1, 1, 3, 1, 3, 0, 4, 3, 5, 4,
	1, 3, 3, 2, 2, 2, 2, 2, 1, 1,
	1, 2, 2, 8, 4, 6, 5, 5, 0, 1,
	4, 5, 7, 4, 5, 4, 3, 1, 1, 1,
	0, 2, 1, 0, 2, 1, 3, 3, 4, 4,
	2, 4, 1, 3, 3, 3, 8, 3, 1, 1,
	1, 2, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 2, 2, 2, 2, 2, 1, 2, 2,
	2, 1, 4, 4, 2, 2, 3, 3, 3, 3,
	1, 1, 1, 1, 1, 6, 6, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 3, 0, 3, 0,
	5, 0, 3, 5, 0, 1, 0, 1, 0, 1,
	2, 0, 2, 0, 3, 0, 1, 0, 3, 3,
	0, 2, 2, 0, 2, 1, 2, 1, 0, 2,
	5, 4, 1, 2, 2, 3, 2, 2, 0, 1,
	2, 3, 3, 2, 2, 1, 1, 1, 1, 1,
	1, 1, 0, 1, 1, 3, 2, 3, 1, 10,
	11, 11, 12, 3, 3, 1, 1, 2, 2, 2,
	0, 1, 3, 1, 2, 3, 1, 1, 1, 6,
	7, 7, 7, 7, 4, 5, 4, 4, 7, 5,
	5, 5, 12, 7, 5, 9, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	7, 1, 3, 8, 8, 3, 3, 5, 4, 6,
	5, 4, 4, 3, 2, 3, 4, 4, 3, 4,
	4, 4, 4, 4, 4, 3, 2, 7, 2, 3,
	4, 3, 7, 5, 4, 2, 4, 4, 3, 3,
	5, 2, 6, 4, 3, 7, 4, 1, 1, 0,
	1, 0, 1, 1, 1, 0, 2, 2, 0, 2,
	2, 0, 2, 0, 1, 1, 2, 1, 1, 2,
	1, 1, 5, 0, 1, 0, 1, 2, 3, 0,
	3, 3, 3, 3, 1, 1, 1, 1, 1, 1,
	1, 1, 0, 1, 1, 5, 3, 2, 2, 3,
	3, 2, 0, 2, 0, 2, 1, 2, 2, 0,
	1, 1, 0, 1, 1, 0, 1, 0, 1, 2,
	3, 4, 1, 1, 1, 1, 1, 1, 1, 3,
	1, 2, 3, 5, 0, 1, 2, 1, 1, 0,
	2, 1, 3, 1, 1, 1, 3, 3, 3, 3,
	3, 7, 0, 3, 1, 3, 1, 3, 4, 4,
	4, 3, 2, 4, 0, 1, 0, 2, 0, 1,
	0, 1, 2, 1, 1, 1, 2, 2, 1, 2,
	3, 2, 3, 2, 2, 2, 1, 1, 3, 5,
	7, 3, 0, 5, 4, 5, 5, 0, 2, 1,
	3, 3, 3, 2, 3, 1, 2, 0, 3, 1,
	1, 3, 3, 4, 4, 5, 3, 4, 5, 6,
	2, 1, 2, 1, 2, 1, 2, 1, 1, 1,
	1, 1, 1, 1, 0, 2, 1, 1, 1, 3,
	1, 3, 1, 1, 1, 1, 1, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 3, 1, 1, 1, 1, 4, 5, 5, 6,
	4, 4, 6, 6, 6, 8, 8, 8, 8, 9,
	8, 5, 4, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 8, 8, 0,
	2, 3, 4, 4, 4, 4, 4, 4, 4, 0,
	3, 4, 7, 3, 1, 1, 2, 3, 3, 1,
	2, 2, 1, 2, 1, 2, 2, 1, 2, 0,
	1, 0, 2, 1, 2, 4, 0, 2, 1, 3,
	5, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	2, 2, 0, 3, 0, 2, 0, 3, 1, 3,
	2, 0, 1, 1, 0, 2, 4, 4, 0, 2,
	4, 2, 1, 5, 4, 1, 3, 3, 5, 0,
	5, 1, 3, 1, 2, 3, 1, 1, 3, 3,
	1, 2, 3, 3, 3, 3, 3, 3, 3, 3,
	1, 2, 1, 1, 1, 1, 1, 1, 0, 2,
	0, 3, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 0, 1, 1, 1, 1, 0,
	1, 1, 0, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 3, 3, 0, 1, 0, 1, 3, 5,
	2, 3, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 0, 0, 1, 1,
}

var yyChk = [...]int{
	-1000, -222, -1, -3, -8, -9, -10, -11, -12, -13,
	-14, -15, -16, -17, -18, -23, -24, -25, -27, -28,
	-29, -30, -31, -6, -26, -19, -20, -32, -35, -33,
	-34, -36, -4, -224, 6, 7, -41, 9, 10, 30,
	-21, 123, 124, 126, 125, 159, 127, 152, 53, 173,
	174, 176, 177, 178, 179, -44, 157, 158, 31, 32,
	129, 34, -37, 374, 370, 375, 57, 8, 262, 154,
	153, 25, 376, -223, 377, -40, 5, -105, 15, -3,
	-38, -227, -38, -38, -38, -38, -38, -191, -193, 57,
	96, -140, 133, 77, 254, 130, 131, 137, -143, -209,
	-142, 60, 61, 62, 272, 145, 304, 305, 364, 173,
	187, 181, 208, 200, 273, 306, 146, 198, 201, 241,
	143, 307, 228, 235, 71, 176, 250, 308, 155, 196,
	192, 309, 281, 190, 27, 310, 237, 213, 311, 277,
	239, 191, 236, 129, 312, 148, 141, 313, 214, 218,
	314, 242, 315, 316, 317, 376, 185, 186, 365, 318,
	144, 244, 212, 142, 33, 274, 37, 163, 245, 216,
	319, 211, 207, 366, 320, 321, 322, 323, 210, 184,
	206, 41, 220, 219, 221, 240, 203, 324, 325, 326,
	149, 327, 193, 18, 328, 329, 330, 331, 332, 248,
	158, 333, 161, 334, 335, 336, 337, 338, 339, 238,
	215, 217, 138, 165, 234, 375, 276, 340, 246, 189,
	341, 150, 162, 157, 249, 151, 342, 343, 344, 345,
	346, 347, 367, 348, 177, 368, 349, 350, 351, 352,
	172, 369, 243, 252, 40, 225, 353, 183, 370, 140,
	354, 174, 169, 230, 204, 164, 355, 356, 194, 195,
	209, 182, 205, 175, 166, 159, 357, 251, 226, 278,
	202, 199, 170, 358, 167, 168, 359, 231, 232, 171,
	275, 247, 197, 227, -126, 133, 254, 130, 232, 135,
	131, 131, 132, 133, 254, 130, 131, -71, -149, -209,
	-142, 133, 131, 114, 201, 241, 123, 229, 237, -132,
	238, 165, -160, 131, -128, 228, 231, 232, 171, 364,
	175, 239, 243, 242, 233, -149, 175, -154, 180, -143,
	178, -128, -42, 360, 127, -156, -156, 230, 230, -156,
	-91, -56, -77, 80, -82, 29, 23, -81, -78, -98,
	-95, -96, 114, 115, 117, 116, 118, 103, 104, 111,
	81, 119, -86, -84, -85, -87, 64, 63, 72, 65,
	66, 67, 68, 73, 74, 75, -143, -149, -93, -224,
	47, 48, 263, 264, 265, 266, 271, 267, 83, 36,
	253, 261, 260, 259, 257, 258, 255, 256, 269, 270,
	136, 254, 130, 109, 262, -209, -142, 364, 371, -38,
	65, -38, -5, -4, -224, 6, 20, 21, -109, 17,
	16, -225, 59, -46, -54, 42, 43, -55, 21, 35,
	46, 44, -39, -53, 105, -56, -149, -126, -126, 11,
	-65, -66, -71, -73, -149, -118, -159, 175, -121, 243,
	242, -144, -119, -143, -141, 241, 201, 240, 128, 279,
	79, 22, 24, 223, 82, 114, 16, 83, 113, 263,
	123, 51, 280, 255, 256, 253, 265, 266, 254, 229,
	29, 10, 282, 25, 153, 21, 35, 107, 125, 86,
	87, 156, 374, 23, 154, 75, 285, 19, 54, 11,
	13, 286, 287, 14, 136, 135, 98, 132, 49, 8,
	119, 26, 95, 45, 288, 28, 289, 290, 291, 292,
	47, 96, 17, 257, 258, 31, 293, 271, 160, 109,
	52, 38, 80, 294, 295, 73, 296, 76, 55, 77,
	15, 50, 297, 298, 299, 300, 97, 126, 262, 48,
	301, 130, 6, 268, 30, 152, 46, 302, 131, 85,
	269, 270, 134, 74, 5, 137, 32, 9, 53, 56,
	259, 260, 261, 36, 84, 12, 303, 78, -192, 96,
	-183, -209, -71, 132, -71, 262, -136, 136, -136, -136,
	131, -71, -209, -209, 123, 125, 128, 55, -22, -71,
	-135, 136, -209, -135, -135, -135, -71, 120, -71, -209,
	30, -133, 96, 12, 254, -209, 165, 131, 166, 133,
	-157, -224, -144, -187, -209, 8, 132, 33, 144, -157,
	169, 170, -157, -131, -130, 235, 236, 230, 234, 12,
	170, 230, 168, -189, -209, 244, 134, -143, -132, -7,
	-3, -10, -9, -11, 88, -156, -156, 58, 79, 77,
	78, 95, -56, -79, 98, 80, 96, 97, 82, 100,
	99, 110, 103, 104, 105, 106, 107, 108, 109, 101,
	102, 113, 88, 89, 90, 91, 92, 93, 94, -127,
	-224, -96, -224, 121, 122, -82, -82, -82, -82, -82,
	-82, -82, -82, -82, -82, -224, 120, -2, -91, -4,
	-224, -224, -224, -224, -224, -224, -224, -224, -101, -56,
	-224, -228, -88, -224, -228, -88, -228, -88, -228, -224,
	-228, -88, -228, -88, -228, -228, -88, -224, -224, -224,
	-224, -224, -224, -224, 366, 367, 372, 373, -71, -71,
	-105, -3, -38, -110, 19, 31, -56, -106, -107, -56,
	-105, 38, -51, -53, -55, 42, 43, 70, 11, -146,
	-145, 22, -143, 64, 120, -72, 26, -71, -58, -59,
	-60, -61, -74, -97, -224, -71, -71, -65, -226, 58,
	11, 56, -226, 58, 120, 58, 175, -121, -123, -122,
	244, 246, 88, 134, -148, -143, 64, 29, 30, 59,
	58, -71, -162, -165, -167, -166, -168, -163, -164, 198,
	199, 114, 202, 204, 205, 206, 207, 208, 209, 210,
	211, 212, 213, 30, 155, 194, 195, 196, 197, 214,
	215, 216, 217, 218, 219, 220, 221, 181, 200, 273,
	182, 183, 184, 185, 186, 187, 189, 190, 191, 192,
	193, -209, -157, 133, -209, 80, -209, -71, -71, -157,
	-157, -157, 167, 167, 131, 131, 172, -71, 58, 134,
	-65, 23, 55, -71, -209, -209, -150, -149, -141, -157,
	-133, 64, -56, -157, -157, -157, -71, -157, -157, -188,
	11, 98, -188, -133, -38, -157, -157, 11, -129, 11,
	98, -56, -134, 96, 55, 245, -155, 178, -71, 212,
	361, 362, 363, -56, -56, -56, -56, -89, 73, 80,
	74, 75, -82, -90, -93, -96, 69, 98, 96, 97,
	82, -82, -82, -82, -82, -82, -82, -82, -82, -82,
	-82, -82, -82, -82, -82, -82, -158, -209, 64, -209,
	-81, -81, -143, -52, 21, 35, -51, -144, -150, -141,
	-40, -225, -225, -105, -51, -51, -56, -56, -98, 64,
	-51, -98, 64, -51, -51, -45, 21, 35, -99, -100,
	84, -98, -143, -149, -225, -82, -143, -143, -51, -52,
	-52, -51, -51, -189, -189, -209, -209, -221, -218, -212,
	61, -109, -225, 9, 98, 58, 18, 58, -108, 24,
	25, -109, -83, -143, 65, 68, -57, 58, 11, -55,
	-71, -145, 105, -150, -114, 161, -71, 30, 58, -67,
	-69, -68, -70, 45, 49, 51, 46, 47, 48, 52,
	-153, 22, -58, -33, -3, -224, -152, 161, -151, 22,
	-149, 64, -114, 56, -58, -71, -58, -73, -149, 105,
	-121, -123, 58, 245, 247, 248, 55, 76, -56, 55,
	76, -56, -174, 113, -194, -195, -196, -144, 64, 65,
	-183, -184, -185, -197, 147, -202, 138, 140, 137, -186,
	148, 132, 28, 59, -179, 73, 80, -175, 226, -169,
	57, -169, -169, -169, -169, -173, 201, -173, -173, -173,
	57, 57, -169, -169, -169, -177, 57, -177, -177, -178,
	57, -178, -147, 56, -71, -157, 23, -157, -137, 128,
	125, 126, -205, 124, 223, 201, 71, 29, 15, 263,
	161, 278, -209, 162, -71, -71, -71, -71, -71, 128,
	125, -71, -71, -71, -157, 120, -71, -71, -72, -71,
	-133, -149, -149, 64, -71, -143, -43, -143, 64, 73,
	74, 75, -90, -82, -82, -82, -50, 156, 79, -225,
	-225, -51, -51, -224, 120, -5, -109, -225, -225, 58,
	56, 22, 11, 11, -225, 11, 11, -225, -225, -51,
	-102, -100, 86, -56, -225, 120, -225, 58, 58, -225,
	-225, -225, -225, -225, -49, 365, 369, 368, -209, 58,
	-220, -219, -213, 62, 88, -110, 40, -56, -56, -107,
	-110, -125, 19, 11, 36, 36, -76, 12, -53, -58,
	-55, 120, -80, 30, 36, -3, -224, -224, -117, -120,
	-98, -59, -60, -60, -59, -60, 45, 45, 45, 50,
	45, 50, 45, -68, -149, -225, -225, -225, -3, -75,
	53, 135, 54, -224, -151, -76, -58, -76, -76, 120,
	-122, -124, 249, 246, 252, -209, 64, 58, -196, 88,
	57, -209, 28, -186, -186, -189, -189, 28, -171, 29,
	73, -176, 227, 65, -173, -173, -174, 30, -174, -174,
	-174, -182, 64, -182, 65, 65, 55, -143, -157, -156,
	-214, 143, 139, 147, 148, 141, 60, 61, 62, 132,
	28, 138, 140, 161, 137, -214, -138, -139, 134, 22,
	132, 28, 161, -211, 56, 167, 223, 167, 134, -157,
	-150, -129, -133, -113, 57, -129, -50, 79, -82, -82,
	-225, -225, -52, -144, -105, -110, -161, 114, 198, 155,
	196, 192, 212, 203, 225, 194, 226, -158, -161, -82,
	-82, -82, -82, 272, -105, 87, -56, 85, -144, -82,
	-82, 64, -218, 88, -81, 41, -71, -103, 13, -56,
	105, -116, 55, -117, -92, -94, -93, -224, -111, -143,
	-115, -143, -57, 58, 88, -63, -62, 55, 56, -64,
	55, -62, 45, 45, -225, 132, 132, 132, -115, -105,
	-76, 246, 250, 251, -195, -196, -199, -198, -143, -202,
	-189, -189, 57, -172, 55, -82, 59, -174, -174, -209,
	114, 59, 58, 59, 58, 59, 58, -71, -156, -156,
	-71, -156, -143, -208, 275, -210, -209, -143, -143, -143,
	-71, 120, -133, -133, -112, -143, -133, -82, -225, -109,
	-225, -169, -169, -169, -178, -169, 186, -169, 186, -225,
	-225, 19, 19, 19, 19, -224, -48, 268, -56, 58,
	58, 64, -81, -104, 14, 16, 27, -116, 58, -225,
	-225, 58, 120, -225, 58, -76, -120, -56, -56, 57,
	-56, -224, -224, -224, -225, -109, 59, 58, -169, -112,
	-180, 223, 9, -173, 64, -173, 65, 65, -157, 26,
	-207, -206, -144, 57, 56, -150, 59, 58, -110, -173,
	-209, -82, -82, -82, -82, -82, -109, 64, -82, -82,
	-56, -91, 28, -94, 36, -3, -143, -143, -143, -105,
	-112, -112, -225, -112, -112, -152, -201, -200, 56, 142,
	71, -198, 59, -181, 138, 28, 137, -85, -174, -174,
	59, 59, -224, 58, 88, -112, -71, -143, -225, -225,
	-225, -225, -47, 98, 275, -225, -225, -225, 9, -92,
	120, -109, 59, -225, -225, -225, -75, -200, -209, -190,
	88, 64, 150, -170, 71, 28, 28, -203, -204, 161,
	-206, -196, 59, -225, 273, 52, 276, -117, -143, 65,
	-71, 64, -225, 58, -143, -211, 41, 274, 277, 57,
	-204, 36, -208, 41, -112, 163, 275, 59, 164, 276,
	-216, -217, 55, -224, 277, -217, 55, 10, 9, -82,
	160, -215, 151, 146, 149, 30, -215, -225, -225, 145,
	29, 73,
}

var yyDef = [...]int{
	-2, -2, 2, 4, 5, 6, 7, 8, 9, 10,
	11, 12, 13, 14, 15, 16, 17, 18, 19, 20,
	21, 22, 23, 24, 25, 26, 27, 28, 29, 30,
	31, 32, 646, 0, 382, 382, 382, 382, 382, 382,
	0, 719, 702, 0, 0, 0, 0, -2, 347, 348,
	0, 350, -2, 0, 0, -2, 1045, 1045, 0, 0,
	1045, 0, 0, 382, 0, 382, 1043, 52, 53, 365,
	366, 367, 89, 1, 3, 0, 386, 654, 0, 0,
	-2, 384, 0, 702, 702, 0, 0, 81, 82, 0,
	0, 0, 1032, 0, 700, 700, 700, 720, 721, 724,
	725, 34, 35, 36, 862, 863, 864, 865, 866, 867,
	868, 869, 870, 871, 872, 873, 874, 875, 876, 877,
	878, 879, 880, 881, 882, 883, 884, 885, 886, 887,
	888, 889, 890, 891, 892, 893, 894, 895, 896, 897,
	898, 899, 900, 901, 902, 903, 904, 905, 906, 907,
	908, 909, 910, 911, 912, 913, 914, 915, 916, 917,
	918, 919, 920, 921, 922, 923, 924, 925, 926, 927,
	928, 929, 930, 931, 932, 933, 934, 935, 936, 937,
	938, 939, 940, 941, 942, 943, 944, 945, 946, 947,
	948, 949, 950, 951, 952, 953, 954, 955, 956, 957,
	958, 959, 960, 961, 962, 963, 964, 965, 966, 967,
	968, 969, 970, 971, 972, 973, 974, 975, 976, 977,
	978, 979, 980, 981, 982, 983, 984, 985, 986, 987,
	988, 989, 990, 991, 992, 993, 994, 995, 996, 997,
	998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007,
	1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017,
	1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027,
	1028, 1029, 1030, 1031, 1033, 1034, 1035, 1036, 1037, 1038,
	1039, 1040, 1041, 1042, 0, 0, 0, 0, 0, 703,
	0, 698, 0, 698, 698, 698, 0, 294, 467, 728,
	729, 1032, 0, 0, 0, 338, 0, 1046, 306, 0,
	308, 1046, 0, 1046, 0, 315, 0, 0, 321, 222,
	0, 330, 344, 345, 332, 346, 349, 0, 354, 357,
	0, 329, 0, 0, 364, 377, 378, 1045, 1045, 381,
	39, 520, 479, 0, 485, 487, 0, 522, 523, 524,
	525, 526, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 552, 553, 554, 555, 631, 632, 633, 634,
	635, 636, 637, 638, 489, 490, 628, 0, 676, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 619, 0,
	589, 589, 589, 589, 589, 589, 589, 589, 0, 0,
	0, 0, 0, 0, 0, -2, -2, 0, 0, 0,
	207, 740, 646, 48, 0, 382, 387, 388, 658, 0,
	0, 646, 1044, 0, 0, -2, -2, 398, 404, 405,
	406, 407, 383, 0, 410, 414, 0, 0, 0, 0,
	0, 0, 61, 63, 467, 67, 0, 1021, 680, -2,
	-2, 0, 0, 726, 727, -2, 876, -2, 742, 743,
	744, 745, 746, 747, 748, 749, 750, 751, 752, 753,
	754, 755, 756, 757, 758, 759, 760, 761, 762, 763,
	764, 765, 766, 767, 768, 769, 770, 771, 772, 773,
	774, 775, 776, 777, 778, 779, 780, 781, 782, 783,
	784, 785, 786, 787, 788, 789, 790, 791, 792, 793,
	794, 795, 796, 797, 798, 799, 800, 801, 802, 803,
	804, 805, 806, 807, 808, 809, 810, 811, 812, 813,
	814, 815, 816, 817, 818, 819, 820, 821, 822, 823,
	824, 825, 826, 827, 828, 829, 830, 831, 832, 833,
	834, 835, 836, 837, 838, 839, 840, 841, 842, 843,
	844, 845, 846, 847, 848, 849, 850, 851, 852, 853,
	854, 855, 856, 857, 858, 859, 860, 861, 0, 0,
	112, 0, 110, 0, 1046, 0, 0, 0, 0, 0,
	0, 1046, 1046, 1046, 0, 0, 0, 0, 285, 0,
	0, 0, 0, 0, 0, 0, 293, 0, 295, 1046,
	338, 298, 0, 0, 1046, 1046, 1046, 0, 1046, 1046,
	305, 1047, 1048, 0, 338, 382, 215, 216, 217, 309,
	1046, 1046, 311, 0, 335, 333, 334, 327, 328, 0,
	341, 318, 319, 324, 223, 0, 355, 358, 0, 376,
	368, 369, 370, 371, 0, 379, 380, 0, 0, 0,
	0, 0, 483, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 507, 508, 509, 510, 511, 512, 513, 486,
	0, 500, 0, 0, 0, 542, 543, 544, 545, 546,
	547, 548, 549, 550, 0, 395, 0, 0, 0, 646,
	0, 0, 0, 0, 0, 0, 0, 392, 0, 620,
	0, 573, 581, 0, 574, 582, 575, 583, 576, 0,
	577, 584, 578, 585, 579, 580, 586, 0, 0, 0,
	395, 395, 0, 0, 222, 222, 0, 96, 736, 741,
	654, 0, 397, 40, 0, 0, 655, 647, 648, 651,
	654, 0, 419, 408, 399, 402, 403, 385, 0, 411,
	415, 0, 417, 418, 0, 65, 0, 466, 0, 421,
	423, 424, 425, 448, 0, 450, -2, 0, 0, 0,
	59, 60, 0, 0, 0, 0, 1021, 681, 69, 70,
	0, 0, 0, 0, 190, 693, 694, 695, 691, 240,
	0, 0, 178, 174, 118, 119, 120, 167, 122, 167,
	167, 167, 167, 187, 187, 187, 187, 150, 151, 152,
	153, 154, 0, 0, 137, 167, 167, 167, 141, 157,
	158, 159, 160, 161, 162, 163, 164, 123, 124, 125,
	126, 127, 128, 129, 130, 131, 169, 169, 169, 171,
	171, 722, 84, 0, 1046, 0, 1046, 108, 0, 254,
	256, 257, 0, 0, 0, 0, 0, 0, 0, 0,
	288, 699, 0, 1046, 291, 292, 468, 730, 731, 296,
	297, 339, 340, 299, 300, 301, 302, 303, 304, 0,
	218, 219, 0, 323, 0, 310, 314, 0, 338, 0,
	0, 316, 317, 0, 0, 326, 0, 356, 372, 360,
	361, 362, 363, 521, 480, 481, 482, 484, 501, 0,
	503, 505, 491, 492, 516, 517, 518, 0, 0, 0,
	0, 514, 496, 0, 527, 528, 529, 530, 531, 532,
	533, 534, 535, 536, 537, 538, 541, 604, 605, 0,
	539, 540, 551, 0, 0, 0, 396, 629, 0, -2,
	0, 519, 675, 654, 0, 0, 0, 0, 524, 631,
	0, 524, 631, 0, 0, 0, 393, 394, 626, 623,
	0, 0, 628, 0, 590, 0, 0, 0, 0, 0,
	0, 0, 0, 90, 93, 0, 95, 734, 737, 0,
	37, 658, 49, 659, 0, 0, 0, 0, 650, 652,
	653, 658, 0, 639, 0, 0, 477, 0, 0, 400,
	46, 416, 412, 0, 0, 0, 465, 0, 0, 0,
	0, 0, 0, 455, 0, 0, 458, 0, 0, 0,
	0, 449, 0, 0, 0, 0, 472, 960, 451, 0,
	453, 454, 477, 0, 477, 62, 477, 64, 0, 471,
	682, 68, 0, 0, 73, 74, 683, 684, 685, 686,
	687, 688, 689, 0, 109, 241, 243, 246, 247, 248,
	113, 114, 115, 0, 0, 228, 0, 0, 222, 222,
	0, 220, 221, 111, 181, 179, 0, 176, 175, 121,
	0, 187, 187, 144, 145, 190, 0, 190, 190, 190,
	0, 0, 138, 139, 140, 132, 0, 133, 134, 135,
	0, 136, 0, 0, 1046, 86, 701, 87, 1045, 0,
	0, 714, 255, 704, 705, 706, 707, 708, 709, 710,
	711, 712, 713, 0, 100, 259, 261, 260, 264, 0,
	0, 0, 286, 1046, 290, 0, 335, 338, 432, 335,
	313, 336, 337, 342, 320, 352, 375, 373, 374, 502,
	504, 506, 493, 514, 497, 0, 494, 0, 0, 488,
	556, 0, 0, 395, 0, 646, 658, 560, 561, 0,
	0, 0, 0, 0, 597, 0, 0, 598, 0, 646,
	0, 624, 0, 0, 572, 0, 591, 0, 0, 592,
	593, 594, 595, 596, 91, 97, 98, 99, 94, 0,
	739, 735, 0, 38, 0, 42, 0, 656, 657, 649,
	41, 0, 696, 697, 640, 641, 642, 0, 409, 420,
	401, 0, 669, 0, 0, 662, 0, 0, 419, 677,
	0, 422, 444, 446, 0, 441, 456, 457, 459, 0,
	461, 0, 463, 464, 426, 427, 428, 429, 0, 430,
	0, 0, 0, 0, 452, 646, 477, 57, 58, 0,
	71, 72, 0, 0, 78, 191, 192, 0, 244, 0,
	0, 0, 210, 222, 222, 213, 214, 0, 183, 0,
	180, 117, 177, 0, 190, 190, 146, 0, 147, 148,
	149, 0, 165, 0, 0, 0, 0, 723, 85, 249,
	1045, 266, 267, 268, 269, 270, 271, 272, 273, 274,
	275, 276, 277, 278, 279, 1045, 0, 1045, 715, 716,
	717, 718, 0, 103, 0, 0, 0, 0, 0, 289,
	469, 338, 322, 338, 0, 338, 495, 0, 515, 498,
	557, 558, 0, 630, 654, 44, 0, 167, 167, 609,
	167, 171, 612, 167, 614, 167, 617, 0, 0, 0,
	0, 0, 0, 0, 621, 571, 627, 0, 629, 0,
	0, 0, 738, 0, 732, 660, 43, 644, 0, 478,
	413, 50, 0, 669, 661, 671, 673, 0, 0, 665,
	0, 436, 477, 0, 0, 438, 445, 0, 0, 439,
	0, 440, 460, 462, -2, 0, 0, 0, 0, 654,
	56, 75, 76, 77, 242, 245, 0, 224, 167, 227,
	211, 212, 0, 185, 0, 182, 168, 142, 143, 188,
	189, 187, 0, 187, 0, 172, 0, 1046, 250, 251,
	252, 253, 0, 258, 0, 101, 102, 0, 0, 263,
	287, 0, 307, 325, 0, 434, 312, 499, 559, 658,
	562, 606, 187, 610, 611, 613, 615, 616, 618, 564,
	563, 0, 0, 0, 0, 0, 654, 0, 625, 0,
	0, 92, 733, 47, 0, 0, 0, 51, 0, 674,
	0, 0, 0, 66, 0, 646, 678, 679, 442, 0,
	447, 0, 0, 0, 450, 55, 201, 0, 226, 0,
	193, 186, 0, 190, 166, 190, 0, 0, 83, 0,
	104, 105, 0, 0, 0, 470, 433, 0, 45, 607,
	608, 0, 0, 0, 0, 599, 0, 622, 0, 0,
	645, 643, 0, 672, 0, 664, 667, 666, 437, 654,
	0, 0, 474, 0, 0, 472, 200, 202, 0, 208,
	0, 225, 0, 198, 0, 195, 197, 184, 155, 156,
	170, 173, 0, 0, 0, 0, 265, 435, 565, 567,
	566, 568, 0, 0, 0, 570, 587, 588, 0, 663,
	0, 54, 443, 473, 475, 476, 431, 203, 204, 0,
	209, 206, 0, 116, 0, 194, 196, 0, 281, 0,
	106, 107, 100, 569, 0, 0, 0, 670, 668, 205,
	0, 199, 280, 0, 0, 103, 600, 0, 603, 0,
	282, 0, 262, 601, 0, 0, 0, 229, 0, 0,
	230, 231, 0, 0, 602, 232, 0, 0, 0, 0,
	0, 233, 235, 236, 0, 0, 234, 283, 284, 237,
	238, 239,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 81, 3, 3, 3, 108, 100, 3,
	57, 59, 105, 103, 58, 104, 120, 106, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 377,
	89, 88, 90, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 110, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 99, 3, 111,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 60, 61, 62, 63, 64,
	65, 66, 67, 68, 69, 70, 71, 72, 73, 74,
	75, 76, 77, 78, 79, 80, 82, 83, 84, 85,
	86, 87, 91, 92, 93, 94, 95, 96, 97, 98,
	101, 102, 107, 109, 112, 113, 114, 115, 116, 117,
	118, 119, 121, 122, 123, 124, 125, 126, 127, 128,
	129, 130, 131, 132, 133, 134, 135, 136, 137, 138,
	139, 140, 141, 142, 143, 144, 145, 146, 147, 148,
	149, 150, 151, 152, 153, 154, 155, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 175, 176, 177, 178,
	179, 180, 181, 182, 183, 184, 185, 186, 187, 188,
	189, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:362
		{
			setParseTree(yylex, yyDollar[1].statement)
		}
	case 2:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:367
		{
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:368
		{
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:372
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 33:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:404
		{
			setParseTree(yylex, nil)
		}
	case 34:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:410
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].bytes), NoAt)
		}
	case 35:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:414
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].bytes), SingleAt)
		}
	case 36:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:418
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].bytes), DoubleAt)
		}
	case 37:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:424
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].bytes), SingleAt)
		}
	case 38:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:430
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].bytes), DoubleAt)
		}
	case 39:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:436
		{
			yyVAL.statement = &OtherAdmin{}
		}
	case 40:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:442
		{
			sel := yyDollar[1].selStmt.(*Select)
			sel.OrderBy = yyDollar[2].orderBy
			sel.Limit = yyDollar[3].limit
			sel.Lock = yyDollar[4].str
			yyVAL.selStmt = sel
		}
	case 41:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:450
		{
			yyVAL.selStmt = &Union{FirstStatement: &ParenSelect{Select: yyDollar[2].selStmt}, OrderBy: yyDollar[4].orderBy, Limit: yyDollar[5].limit, Lock: yyDollar[6].str}
		}
	case 42:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:454
		{
			yyVAL.selStmt = Unionize(yyDollar[1].selStmt, yyDollar[3].selStmt, yyDollar[2].str, yyDollar[4].orderBy, yyDollar[5].limit, yyDollar[6].str)
		}
	case 43:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:458
		{
			yyVAL.selStmt = NewSelect(Comments(yyDollar[2].bytes2), SelectExprs{Nextval{Expr: yyDollar[5].expr}}, []string{yyDollar[3].str} /*options*/, TableExprs{&AliasedTableExpr{Expr: yyDollar[7].tableName}}, nil /*where*/, nil /*groupBy*/, nil /*having*/)
		}
	case 44:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:481
		{
			sel := yyDollar[1].selStmt.(*Select)
			sel.OrderBy = yyDollar[2].orderBy
			sel.Limit = yyDollar[3].limit
			sel.Lock = yyDollar[4].str
			yyVAL.selStmt = sel
		}
	case 45:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:489
		{
			yyVAL.selStmt = Unionize(yyDollar[1].selStmt, yyDollar[3].selStmt, yyDollar[2].str, yyDollar[4].orderBy, yyDollar[5].limit, yyDollar[6].str)
		}
	case 46:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:495
		{
			yyVAL.statement = &Stream{Comments: Comments(yyDollar[2].bytes2), SelectExpr: yyDollar[3].selectExpr, Table: yyDollar[5].tableName}
		}
	case 47:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:503
		{
			yyVAL.selStmt = NewSelect(Comments(yyDollar[2].bytes2), yyDollar[4].selectExprs /*SelectExprs*/, yyDollar[3].strs /*options*/, yyDollar[5].tableExprs /*from*/, NewWhere(WhereStr, yyDollar[6].expr), GroupBy(yyDollar[7].exprs), NewWhere(HavingStr, yyDollar[8].expr))
		}
	case 48:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:509
		{
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 49:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:513
		{
			yyVAL.selStmt = &ParenSelect{Select: yyDollar[2].selStmt}
		}
	case 50:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:520
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[6].ins
			ins.Action = yyDollar[1].str
			ins.Comments = yyDollar[2].bytes2
			ins.Ignore = yyDollar[3].str
			ins.Table = yyDollar[4].tableName
			ins.Partitions = yyDollar[5].partitions
			ins.OnDup = OnDup(yyDollar[7].updateExprs)
			yyVAL.statement = ins
		}
	case 51:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:532
		{
			cols := make(Columns, 0, len(yyDollar[7].updateExprs))
			vals := make(ValTuple, 0, len(yyDollar[8].updateExprs))
			for _, updateList := range yyDollar[7].updateExprs {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			yyVAL.statement = &Insert{Action: yyDollar[1].str, Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].str, Table: yyDollar[4].tableName, Partitions: yyDollar[5].partitions, Columns: cols, Rows: Values{vals}, OnDup: OnDup(yyDollar[8].updateExprs)}
		}
	case 52:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:544
		{
			yyVAL.str = InsertStr
		}
	case 53:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:548
		{
			yyVAL.str = ReplaceStr
		}
	case 54:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:554
		{
			yyVAL.statement = &Update{Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].str, TableExprs: yyDollar[4].tableExprs, Exprs: yyDollar[6].updateExprs, From: yyDollar[7].tableExprs, Where: NewWhere(WhereStr, yyDollar[8].expr), OrderBy: yyDollar[9].orderBy, Limit: yyDollar[10].limit}
		}
	case 55:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:560
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), TableExprs: TableExprs{&AliasedTableExpr{Expr: yyDollar[4].tableName}}, Partitions: yyDollar[5].partitions, Where: NewWhere(WhereStr, yyDollar[6].expr), OrderBy: yyDollar[7].orderBy, Limit: yyDollar[8].limit}
		}
	case 56:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:564
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Targets: yyDollar[4].tableNames, TableExprs: yyDollar[6].tableExprs, Where: NewWhere(WhereStr, yyDollar[7].expr)}
		}
	case 57:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:568
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Targets: yyDollar[3].tableNames, TableExprs: yyDollar[5].tableExprs, Where: NewWhere(WhereStr, yyDollar[6].expr)}
		}
	case 58:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:572
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Targets: yyDollar[3].tableNames, TableExprs: yyDollar[5].tableExprs, Where: NewWhere(WhereStr, yyDollar[6].expr)}
		}
	case 59:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:577
		{
		}
	case 60:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:578
		{
		}
	case 61:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:582
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName}
		}
	case 62:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:586
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName)
		}
	case 63:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:592
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName}
		}
	case 64:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:596
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName)
		}
	case 65:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:601
		{
			yyVAL.partitions = nil
		}
	case 66:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:605
		{
			yyVAL.partitions = yyDollar[3].partitions
		}
	case 67:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:611
		{
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Exprs: yyDollar[3].setExprs}
		}
	case 68:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:617
		{
			yyVAL.statement = &SetTransaction{Comments: Comments(yyDollar[2].bytes2), Scope: yyDollar[3].str, Characteristics: yyDollar[5].characteristics}
		}
	case 69:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:621
		{
			yyVAL.statement = &SetTransaction{Comments: Comments(yyDollar[2].bytes2), Characteristics: yyDollar[4].characteristics}
		}
	case 70:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:627
		{
			yyVAL.characteristics = []Characteristic{yyDollar[1].characteristic}
		}
	case 71:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:631
		{
			yyVAL.characteristics = append(yyVAL.characteristics, yyDollar[3].characteristic)
		}
	case 72:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:637
		{
			yyVAL.characteristic = &IsolationLevel{Level: string(yyDollar[3].str)}
		}
	case 73:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:641
		{
			yyVAL.characteristic = &AccessMode{Mode: TxReadWrite}
		}
	case 74:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:645
		{
			yyVAL.characteristic = &AccessMode{Mode: TxReadOnly}
		}
	case 75:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:651
		{
			yyVAL.str = RepeatableRead
		}
	case 76:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:655
		{
			yyVAL.str = ReadCommitted
		}
	case 77:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:659
		{
			yyVAL.str = ReadUncommitted
		}
	case 78:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:663
		{
			yyVAL.str = Serializable
		}
	case 79:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:669
		{
			yyVAL.str = SessionStr
		}
	case 80:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:673
		{
			yyVAL.str = GlobalStr
		}
	case 81:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:679
		{
			yyDollar[1].ddl.TableSpec = yyDollar[2].TableSpec
			yyVAL.statement = yyDollar[1].ddl
		}
	case 82:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:684
		{
			// Create table [name] like [name]
			yyDollar[1].ddl.OptLike = yyDollar[2].optLike
			yyVAL.statement = yyDollar[1].ddl
		}
	case 83:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:690
		{
			// Change this to an alter statement
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[7].tableName}
		}
	case 84:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:695
		{
			yyVAL.statement = &DDL{Action: CreateStr, Table: yyDollar[3].tableName.ToViewName()}
		}
	case 85:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:699
		{
			yyVAL.statement = &DDL{Action: CreateStr, Table: yyDollar[5].tableName.ToViewName()}
		}
	case 86:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:703
		{
			yyVAL.statement = &DBDDL{Action: CreateStr, DBName: string(yyDollar[4].colIdent.String())}
		}
	case 87:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:707
		{
			yyVAL.statement = &DBDDL{Action: CreateStr, DBName: string(yyDollar[4].colIdent.String())}
		}
	case 88:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:712
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 89:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:716
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 90:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:722
		{
			yyVAL.statement = &Auth{SessionAuth: yyDollar[1].boolVal, Provider: yyDollar[4].str}
		}
	case 91:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:727
		{
			yyVAL.statement = &Auth{SessionAuth: yyDollar[1].boolVal, Provider: yyDollar[4].str, Type: yyDollar[5].str}
		}
	case 92:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:732
		{
			yyVAL.statement = &Auth{SessionAuth: yyDollar[1].boolVal, Provider: yyDollar[4].str, Type: yyDollar[5].str, KeyFilePath: string(yyDollar[6].bytes), KeyEnvVar: string(yyDollar[7].bytes)}
		}
	case 93:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:737
		{
			yyVAL.statement = &AuthRevoke{SessionAuth: yyDollar[1].boolVal, Provider: yyDollar[4].str}
		}
	case 94:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:743
		{
			yyVAL.statement = &Registry{ActionType: string(yyDollar[3].bytes), ProviderId: yyDollar[4].colIdent.GetRawVal(), ProviderVersion: yyDollar[5].colIdent.GetRawVal()}
		}
	case 95:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:748
		{
			yyVAL.statement = &Registry{ActionType: string(yyDollar[3].bytes), ProviderId: yyDollar[4].colIdent.GetRawVal()}
		}
	case 96:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:753
		{
			yyVAL.statement = &Registry{ActionType: string(yyDollar[3].bytes)}
		}
	case 97:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:759
		{
			yyVAL.str = InteractiveStr
		}
	case 98:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:763
		{
			yyVAL.str = ServiceAccountStr
		}
	case 99:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:767
		{
			yyVAL.str = ServiceAccountStr
		}
	case 100:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:773
		{
			yyVAL.colIdent = NewColIdent("")
		}
	case 101:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:777
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 102:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:783
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 103:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:788
		{
			var v []VindexParam
			yyVAL.vindexParams = v
		}
	case 104:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:793
		{
			yyVAL.vindexParams = yyDollar[2].vindexParams
		}
	case 105:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:799
		{
			yyVAL.vindexParams = make([]VindexParam, 0, 4)
			yyVAL.vindexParams = append(yyVAL.vindexParams, yyDollar[1].vindexParam)
		}
	case 106:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:804
		{
			yyVAL.vindexParams = append(yyVAL.vindexParams, yyDollar[3].vindexParam)
		}
	case 107:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:810
		{
			yyVAL.vindexParam = VindexParam{Key: yyDollar[1].colIdent, Val: yyDollar[3].str}
		}
	case 108:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:816
		{
			yyVAL.ddl = &DDL{Action: CreateStr, Table: yyDollar[4].tableName}
			setDDL(yylex, yyVAL.ddl)
		}
	case 109:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:823
		{
			yyVAL.TableSpec = yyDollar[2].TableSpec
			yyVAL.TableSpec.Options = yyDollar[4].str
		}
	case 110:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:830
		{
			yyVAL.optLike = &OptLike{LikeTable: yyDollar[2].tableName}
		}
	case 111:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:834
		{
			yyVAL.optLike = &OptLike{LikeTable: yyDollar[3].tableName}
		}
	case 112:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:840
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddColumn(yyDollar[1].columnDefinition)
		}
	case 113:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:845
		{
			yyVAL.TableSpec.AddColumn(yyDollar[3].columnDefinition)
		}
	case 114:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:849
		{
			yyVAL.TableSpec.AddIndex(yyDollar[3].indexDefinition)
		}
	case 115:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:853
		{
			yyVAL.TableSpec.AddConstraint(yyDollar[3].constraintDefinition)
		}
	case 116:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:859
		{
			yyDollar[2].columnType.NotNull = yyDollar[3].boolVal
			yyDollar[2].columnType.Default = yyDollar[4].optVal
			yyDollar[2].columnType.OnUpdate = yyDollar[5].optVal
			yyDollar[2].columnType.Autoincrement = yyDollar[6].boolVal
			yyDollar[2].columnType.KeyOpt = yyDollar[7].colKeyOpt
			yyDollar[2].columnType.Comment = yyDollar[8].sqlVal
			yyVAL.columnDefinition = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
	case 117:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:870
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Unsigned = yyDollar[2].boolVal
			yyVAL.columnType.Zerofill = yyDollar[3].boolVal
		}
	case 121:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:881
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Length = yyDollar[2].sqlVal
		}
	case 122:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:886
		{
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 123:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:892
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 124:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:896
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 125:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:900
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 126:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:904
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 127:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:908
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 128:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:912
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 129:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:916
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 130:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:920
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 131:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:924
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 132:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:930
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 133:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:936
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 134:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:942
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 135:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:948
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 136:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:954
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 137:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:962
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 138:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:966
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 139:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:970
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 140:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:974
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 141:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:978
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 142:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:984
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 143:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:988
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 144:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:992
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 145:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:996
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 146:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1000
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 147:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1004
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 148:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1008
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 149:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1012
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 150:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1016
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 151:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1020
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 152:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1024
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 153:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1028
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 154:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1032
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 155:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1036
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str, Collate: yyDollar[6].str}
		}
	case 156:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1041
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str, Collate: yyDollar[6].str}
		}
	case 157:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1047
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 158:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1051
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 159:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1055
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 160:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1059
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 161:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1063
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 162:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1067
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 163:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1071
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 164:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1075
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 165:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1081
		{
			yyVAL.strs = make([]string, 0, 4)
			yyVAL.strs = append(yyVAL.strs, "'"+string(yyDollar[1].bytes)+"'")
		}
	case 166:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1086
		{
			yyVAL.strs = append(yyDollar[1].strs, "'"+string(yyDollar[3].bytes)+"'")
		}
	case 167:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1091
		{
			yyVAL.sqlVal = nil
		}
	case 168:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1095
		{
			yyVAL.sqlVal = NewIntVal(yyDollar[2].bytes)
		}
	case 169:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1100
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 170:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1104
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
				Scale:  NewIntVal(yyDollar[4].bytes),
			}
		}
	case 171:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1112
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 172:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1116
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
			}
		}
	case 173:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1122
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
				Scale:  NewIntVal(yyDollar[4].bytes),
			}
		}
	case 174:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1130
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 175:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1134
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 176:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1139
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 177:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1143
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 178:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1149
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 179:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1153
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 180:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1157
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 181:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1162
		{
			yyVAL.optVal = nil
		}
	case 182:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1166
		{
			yyVAL.optVal = yyDollar[2].expr
		}
	case 183:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1171
		{
			yyVAL.optVal = nil
		}
	case 184:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1175
		{
			yyVAL.optVal = yyDollar[3].expr
		}
	case 185:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1180
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 186:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1184
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 187:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1189
		{
			yyVAL.str = ""
		}
	case 188:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1193
		{
			yyVAL.str = string(yyDollar[3].colIdent.String())
		}
	case 189:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1197
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 190:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1202
		{
			yyVAL.str = ""
		}
	case 191:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1206
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 192:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1210
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 193:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1215
		{
			yyVAL.colKeyOpt = colKeyNone
		}
	case 194:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1219
		{
			yyVAL.colKeyOpt = ColKeyPrimary
		}
	case 195:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1223
		{
			yyVAL.colKeyOpt = ColKey
		}
	case 196:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1227
		{
			yyVAL.colKeyOpt = ColKeyUniqueKey
		}
	case 197:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1231
		{
			yyVAL.colKeyOpt = ColKeyUnique
		}
	case 198:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1236
		{
			yyVAL.sqlVal = nil
		}
	case 199:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1240
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[2].bytes)
		}
	case 200:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1246
		{
			yyVAL.indexDefinition = &IndexDefinition{Info: yyDollar[1].indexInfo, Columns: yyDollar[3].indexColumns, Options: yyDollar[5].indexOptions}
		}
	case 201:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1250
		{
			yyVAL.indexDefinition = &IndexDefinition{Info: yyDollar[1].indexInfo, Columns: yyDollar[3].indexColumns}
		}
	case 202:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1256
		{
			yyVAL.indexOptions = []*IndexOption{yyDollar[1].indexOption}
		}
	case 203:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1260
		{
			yyVAL.indexOptions = append(yyVAL.indexOptions, yyDollar[2].indexOption)
		}
	case 204:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1266
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Using: string(yyDollar[2].colIdent.String())}
		}
	case 205:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1270
		{
			// should not be string
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewIntVal(yyDollar[3].bytes)}
		}
	case 206:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1275
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewStrVal(yyDollar[2].bytes)}
		}
	case 207:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1281
		{
			yyVAL.statement = &Sleep{Duration: NewIntVal(yyDollar[2].bytes)}
		}
	case 208:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1287
		{
			yyVAL.str = ""
		}
	case 209:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1291
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 210:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1297
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Name: NewColIdent("PRIMARY"), Primary: true, Unique: true}
		}
	case 211:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1301
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Spatial: true, Unique: false}
		}
	case 212:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1305
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Unique: true}
		}
	case 213:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1309
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes), Name: NewColIdent(yyDollar[2].str), Unique: true}
		}
	case 214:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1313
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].str), Name: NewColIdent(yyDollar[2].str), Unique: false}
		}
	case 215:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1319
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 216:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1323
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 217:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1327
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 218:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1334
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 219:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1338
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 220:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1344
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 221:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1348
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 222:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1353
		{
			yyVAL.str = ""
		}
	case 223:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1357
		{
			yyVAL.str = string(yyDollar[1].colIdent.String())
		}
	case 224:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1363
		{
			yyVAL.indexColumns = []*IndexColumn{yyDollar[1].indexColumn}
		}
	case 225:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1367
		{
			yyVAL.indexColumns = append(yyVAL.indexColumns, yyDollar[3].indexColumn)
		}
	case 226:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1373
		{
			yyVAL.indexColumn = &IndexColumn{Column: yyDollar[1].colIdent, Length: yyDollar[2].sqlVal}
		}
	case 227:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1379
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].colIdent.String()), Details: yyDollar[3].constraintInfo}
		}
	case 228:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1383
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Details: yyDollar[1].constraintInfo}
		}
	case 229:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:1390
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns}
		}
	case 230:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:1394
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[11].ReferenceAction}
		}
	case 231:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:1398
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnUpdate: yyDollar[11].ReferenceAction}
		}
	case 232:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:1402
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[11].ReferenceAction, OnUpdate: yyDollar[12].ReferenceAction}
		}
	case 233:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1408
		{
			yyVAL.ReferenceAction = yyDollar[3].ReferenceAction
		}
	case 234:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1414
		{
			yyVAL.ReferenceAction = yyDollar[3].ReferenceAction
		}
	case 235:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1420
		{
			yyVAL.ReferenceAction = Restrict
		}
	case 236:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1424
		{
			yyVAL.ReferenceAction = Cascade
		}
	case 237:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1428
		{
			yyVAL.ReferenceAction = NoAction
		}
	case 238:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1432
		{
			yyVAL.ReferenceAction = SetDefault
		}
	case 239:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1436
		{
			yyVAL.ReferenceAction = SetNull
		}
	case 240:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1441
		{
			yyVAL.str = ""
		}
	case 241:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1445
		{
			yyVAL.str = " " + string(yyDollar[1].str)
		}
	case 242:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1449
		{
			yyVAL.str = string(yyDollar[1].str) + ", " + string(yyDollar[3].str)
		}
	case 243:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1457
		{
			yyVAL.str = yyDollar[1].str
		}
	case 244:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1461
		{
			yyVAL.str = yyDollar[1].str + " " + yyDollar[2].str
		}
	case 245:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1465
		{
			yyVAL.str = yyDollar[1].str + "=" + yyDollar[3].str
		}
	case 246:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1471
		{
			yyVAL.str = yyDollar[1].colIdent.String()
		}
	case 247:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1475
		{
			yyVAL.str = "'" + string(yyDollar[1].bytes) + "'"
		}
	case 248:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1479
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 249:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1485
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[4].tableName}
		}
	case 250:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1489
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[4].tableName}
		}
	case 251:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1493
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[4].tableName}
		}
	case 252:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1497
		{
			// Change this to a rename statement
			yyVAL.statement = &DDL{Action: RenameStr, FromTables: TableNames{yyDollar[4].tableName}, ToTables: TableNames{yyDollar[7].tableName}}
		}
	case 253:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1502
		{
			// Rename an index can just be an alter
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[4].tableName}
		}
	case 254:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1507
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[3].tableName.ToViewName()}
		}
	case 255:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1511
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[4].tableName, PartitionSpec: yyDollar[5].partSpec}
		}
	case 256:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1515
		{
			yyVAL.statement = &DBDDL{Action: AlterStr, DBName: string(yyDollar[3].colIdent.String())}
		}
	case 257:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1519
		{
			yyVAL.statement = &DBDDL{Action: AlterStr, DBName: string(yyDollar[3].colIdent.String())}
		}
	case 258:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1523
		{
			yyVAL.statement = &DDL{
				Action: CreateVindexStr,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name:   NewColIdent(yyDollar[5].tableName.Name.String()),
					Type:   yyDollar[6].colIdent,
					Params: yyDollar[7].vindexParams,
				},
			}
		}
	case 259:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1535
		{
			yyVAL.statement = &DDL{
				Action: DropVindexStr,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name: NewColIdent(yyDollar[5].tableName.Name.String()),
				},
			}
		}
	case 260:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1545
		{
			yyVAL.statement = &DDL{Action: AddVschemaTableStr, Table: yyDollar[5].tableName}
		}
	case 261:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1549
		{
			yyVAL.statement = &DDL{Action: DropVschemaTableStr, Table: yyDollar[5].tableName}
		}
	case 262:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:1553
		{
			yyVAL.statement = &DDL{
				Action: AddColVindexStr,
				Table:  yyDollar[4].tableName,
				VindexSpec: &VindexSpec{
					Name:   yyDollar[7].colIdent,
					Type:   yyDollar[11].colIdent,
					Params: yyDollar[12].vindexParams,
				},
				VindexCols: yyDollar[9].columns,
			}
		}
	case 263:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1566
		{
			yyVAL.statement = &DDL{
				Action: DropColVindexStr,
				Table:  yyDollar[4].tableName,
				VindexSpec: &VindexSpec{
					Name: yyDollar[7].colIdent,
				},
			}
		}
	case 264:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1576
		{
			yyVAL.statement = &DDL{Action: AddSequenceStr, Table: yyDollar[5].tableName}
		}
	case 265:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:1580
		{
			yyVAL.statement = &DDL{
				Action: AddAutoIncStr,
				Table:  yyDollar[4].tableName,
				AutoIncSpec: &AutoIncSpec{
					Column:   yyDollar[7].colIdent,
					Sequence: yyDollar[9].tableName,
				},
			}
		}
	case 280:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1609
		{
			yyVAL.partSpec = &PartitionSpec{Action: ReorganizeStr, Name: yyDollar[3].colIdent, Definitions: yyDollar[6].partDefs}
		}
	case 281:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1615
		{
			yyVAL.partDefs = []*PartitionDefinition{yyDollar[1].partDef}
		}
	case 282:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1619
		{
			yyVAL.partDefs = append(yyDollar[1].partDefs, yyDollar[3].partDef)
		}
	case 283:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:1625
		{
			yyVAL.partDef = &PartitionDefinition{Name: yyDollar[2].colIdent, Limit: yyDollar[7].expr}
		}
	case 284:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:1629
		{
			yyVAL.partDef = &PartitionDefinition{Name: yyDollar[2].colIdent, Maxvalue: true}
		}
	case 285:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1635
		{
			yyVAL.statement = yyDollar[3].ddl
		}
	case 286:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1641
		{
			yyVAL.ddl = &DDL{Action: RenameStr, FromTables: TableNames{yyDollar[1].tableName}, ToTables: TableNames{yyDollar[3].tableName}}
		}
	case 287:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1645
		{
			yyVAL.ddl = yyDollar[1].ddl
			yyVAL.ddl.FromTables = append(yyVAL.ddl.FromTables, yyDollar[3].tableName)
			yyVAL.ddl.ToTables = append(yyVAL.ddl.ToTables, yyDollar[5].tableName)
		}
	case 288:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1653
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, FromTables: yyDollar[4].tableNames, IfExists: exists}
		}
	case 289:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1661
		{
			// Change this to an alter statement
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[5].tableName}
		}
	case 290:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1666
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, FromTables: TableNames{yyDollar[4].tableName.ToViewName()}, IfExists: exists}
		}
	case 291:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1674
		{
			yyVAL.statement = &DBDDL{Action: DropStr, DBName: string(yyDollar[4].colIdent.String())}
		}
	case 292:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1678
		{
			yyVAL.statement = &DBDDL{Action: DropStr, DBName: string(yyDollar[4].colIdent.String())}
		}
	case 293:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1684
		{
			yyVAL.statement = &DDL{Action: TruncateStr, Table: yyDollar[3].tableName}
		}
	case 294:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1688
		{
			yyVAL.statement = &DDL{Action: TruncateStr, Table: yyDollar[2].tableName}
		}
	case 295:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1693
		{
			yyVAL.statement = &OtherRead{}
		}
	case 296:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1699
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].colIdent.String())}
		}
	case 297:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1704
		{
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[4].showFilter}
			yyVAL.statement = &Show{Type: CharsetStr, ShowTablesOpt: showTablesOpt}
		}
	case 298:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1709
		{
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[3].showFilter}
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), ShowTablesOpt: showTablesOpt}
		}
	case 299:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1714
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 300:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1719
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].colIdent.String())}
		}
	case 301:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1723
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 302:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1727
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Table: yyDollar[4].tableName}
		}
	case 303:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1731
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 304:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1735
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 305:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1739
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 306:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1743
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 307:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1747
		{
			showTablesOpt := &ShowTablesOpt{DbName: yyDollar[6].str, Filter: yyDollar[7].showFilter}
			yyVAL.statement = &Show{Extended: string(yyDollar[2].str), Type: string(yyDollar[3].str), ShowTablesOpt: showTablesOpt, OnTable: yyDollar[5].tableName}
		}
	case 308:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1752
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 309:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1756
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 310:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1760
		{
			yyVAL.statement = &Show{Scope: yyDollar[2].str, Type: string(yyDollar[3].bytes)}
		}
	case 311:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1764
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 312:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1768
		{
			showTablesOpt := &ShowTablesOpt{Full: yyDollar[2].str, DbName: yyDollar[6].str, Filter: yyDollar[7].showFilter}
			yyVAL.statement = &Show{Type: string(yyDollar[3].str), ShowTablesOpt: showTablesOpt, OnTable: yyDollar[5].tableName}
		}
	case 313:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1773
		{
			// this is ugly, but I couldn't find a better way for now
			if yyDollar[3].str == "processlist" {
				yyVAL.statement = &Show{Type: yyDollar[3].str}
			} else {
				showTablesOpt := &ShowTablesOpt{Full: yyDollar[2].str, DbName: yyDollar[4].str, Filter: yyDollar[5].showFilter}
				yyVAL.statement = &Show{Type: yyDollar[3].str, ShowTablesOpt: showTablesOpt}
			}
		}
	case 314:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1783
		{
			yyVAL.statement = &Show{Scope: yyDollar[2].str, Type: string(yyDollar[3].bytes)}
		}
	case 315:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1787
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 316:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1791
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), ShowCollationFilterOpt: yyDollar[4].expr}
		}
	case 317:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1795
		{
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[4].showFilter}
			yyVAL.statement = &Show{Scope: string(yyDollar[2].bytes), Type: string(yyDollar[3].bytes), ShowTablesOpt: showTablesOpt}
		}
	case 318:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1800
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 319:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1804
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 320:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1808
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), OnTable: yyDollar[5].tableName}
		}
	case 321:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1812
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 322:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1816
		{
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[6].showFilter}
			yyVAL.statement = &Show{Extended: string(yyDollar[2].str), Type: string(yyDollar[3].colIdent.String()), OnTable: yyDollar[5].tableName, ShowTablesOpt: showTablesOpt}
		}
	case 323:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1833
		{
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[4].showFilter}
			yyVAL.statement = &Show{Extended: string(yyDollar[2].str), Type: string(yyDollar[3].colIdent.String()), ShowTablesOpt: showTablesOpt}
		}
	case 324:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1838
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), Scope: yyDollar[3].str}
		}
	case 325:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1843
		{
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[7].showFilter}
			yyVAL.statement = &Show{Extended: string(yyDollar[2].str), Comments: Comments(yyDollar[4].bytes2), Type: string(yyDollar[3].bytes), OnTable: yyDollar[5].tableName, ShowTablesOpt: showTablesOpt, Columns: yyDollar[6].columns}
		}
	case 326:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1849
		{
			yyVAL.statement = &Show{Type: "TRANSACTION_ISOLATION_LEVEL"}
		}
	case 327:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1855
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 328:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1859
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 329:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1865
		{
			yyVAL.str = ""
		}
	case 330:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1869
		{
			yyVAL.str = "extended "
		}
	case 331:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1875
		{
			yyVAL.str = ""
		}
	case 332:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1879
		{
			yyVAL.str = "full "
		}
	case 333:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1885
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 334:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1889
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 335:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1895
		{
			yyVAL.str = ""
		}
	case 336:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1899
		{
			yyVAL.str = yyDollar[2].tableIdent.v
		}
	case 337:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1903
		{
			yyVAL.str = yyDollar[2].tableIdent.v
		}
	case 338:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1909
		{
			yyVAL.showFilter = nil
		}
	case 339:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1913
		{
			yyVAL.showFilter = &ShowFilter{Like: string(yyDollar[2].bytes)}
		}
	case 340:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1917
		{
			yyVAL.showFilter = &ShowFilter{Filter: yyDollar[2].expr}
		}
	case 341:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1923
		{
			yyVAL.showFilter = nil
		}
	case 342:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1927
		{
			yyVAL.showFilter = &ShowFilter{Like: string(yyDollar[2].bytes)}
		}
	case 343:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1933
		{
			yyVAL.str = ""
		}
	case 344:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1937
		{
			yyVAL.str = SessionStr
		}
	case 345:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1941
		{
			yyVAL.str = GlobalStr
		}
	case 346:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1947
		{
			yyVAL.statement = &Use{DBName: yyDollar[2].tableIdent}
		}
	case 347:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1951
		{
			yyVAL.statement = &Use{DBName: TableIdent{v: ""}}
		}
	case 348:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1957
		{
			yyVAL.statement = &Begin{}
		}
	case 349:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1961
		{
			yyVAL.statement = &Begin{}
		}
	case 350:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1967
		{
			yyVAL.statement = &Commit{}
		}
	case 351:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1973
		{
			yyVAL.statement = &Rollback{}
		}
	case 352:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1977
		{
			yyVAL.statement = &SRollback{Name: yyDollar[5].colIdent}
		}
	case 353:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1982
		{
			yyVAL.empty = struct{}{}
		}
	case 354:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1984
		{
			yyVAL.empty = struct{}{}
		}
	case 355:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1987
		{
			yyVAL.empty = struct{}{}
		}
	case 356:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1989
		{
			yyVAL.empty = struct{}{}
		}
	case 357:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1994
		{
			yyVAL.statement = &Savepoint{Name: yyDollar[2].colIdent}
		}
	case 358:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2000
		{
			yyVAL.statement = &Release{Name: yyDollar[3].colIdent}
		}
	case 359:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2005
		{
			yyVAL.str = ""
		}
	case 360:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2009
		{
			yyVAL.str = JSONStr
		}
	case 361:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2013
		{
			yyVAL.str = TreeStr
		}
	case 362:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2017
		{
			yyVAL.str = VitessStr
		}
	case 363:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2021
		{
			yyVAL.str = TraditionalStr
		}
	case 364:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2025
		{
			yyVAL.str = AnalyzeStr
		}
	case 365:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2031
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 366:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2035
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 367:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2039
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 368:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2045
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 369:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2049
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 370:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2053
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 371:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2057
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 372:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2062
		{
			yyVAL.str = ""
		}
	case 373:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2066
		{
			yyVAL.str = ""
		}
	case 374:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2070
		{
			yyVAL.str = ""
		}
	case 375:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2076
		{
			yyVAL.statement = &DescribeTable{Full: string(yyDollar[2].str), Extended: string(yyDollar[3].str), Table: yyDollar[4].tableName}
		}
	case 376:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2080
		{
			yyVAL.statement = &Explain{Type: yyDollar[2].str, Statement: yyDollar[3].statement}
		}
	case 377:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2086
		{
			yyVAL.statement = &OtherAdmin{}
		}
	case 378:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2090
		{
			yyVAL.statement = &OtherAdmin{}
		}
	case 379:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2094
		{
			yyVAL.statement = &OtherAdmin{}
		}
	case 380:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2098
		{
			yyVAL.statement = &OtherAdmin{}
		}
	case 381:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2104
		{
			yyVAL.statement = &DDL{Action: FlushStr}
		}
	case 382:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2108
		{
			setAllowComments(yylex, true)
		}
	case 383:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2112
		{
			yyVAL.bytes2 = yyDollar[2].bytes2
			setAllowComments(yylex, false)
		}
	case 384:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2118
		{
			yyVAL.bytes2 = nil
		}
	case 385:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2122
		{
			yyVAL.bytes2 = append(yyDollar[1].bytes2, yyDollar[2].bytes)
		}
	case 386:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2128
		{
			yyVAL.str = UnionStr
		}
	case 387:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2132
		{
			yyVAL.str = UnionAllStr
		}
	case 388:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2136
		{
			yyVAL.str = UnionDistinctStr
		}
	case 389:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2141
		{
			yyVAL.str = ""
		}
	case 390:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2145
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 391:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2149
		{
			yyVAL.str = SQLCacheStr
		}
	case 392:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2154
		{
			yyVAL.str = ""
		}
	case 393:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2158
		{
			yyVAL.str = DistinctStr
		}
	case 394:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2162
		{
			yyVAL.str = DistinctStr
		}
	case 395:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2167
		{
			yyVAL.selectExprs = nil
		}
	case 396:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2171
		{
			yyVAL.selectExprs = yyDollar[1].selectExprs
		}
	case 397:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2176
		{
			yyVAL.strs = nil
		}
	case 398:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2180
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 399:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2184
		{ // TODO: This is a hack since I couldn't get it to work in a nicer way. I got 'conflicts: 8 shift/reduce'
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str}
		}
	case 400:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2188
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str}
		}
	case 401:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2192
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str, yyDollar[4].str}
		}
	case 402:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2198
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 403:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2202
		{
			yyVAL.str = SQLCacheStr
		}
	case 404:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2206
		{
			yyVAL.str = DistinctStr
		}
	case 405:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2210
		{
			yyVAL.str = DistinctStr
		}
	case 406:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2214
		{
			yyVAL.str = StraightJoinHint
		}
	case 407:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2218
		{
			yyVAL.str = SQLCalcFoundRowsStr
		}
	case 408:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2224
		{
			yyVAL.selectExprs = SelectExprs{yyDollar[1].selectExpr}
		}
	case 409:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2228
		{
			yyVAL.selectExprs = append(yyVAL.selectExprs, yyDollar[3].selectExpr)
		}
	case 410:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2234
		{
			yyVAL.selectExpr = &StarExpr{}
		}
	case 411:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2238
		{
			yyVAL.selectExpr = &AliasedExpr{Expr: yyDollar[1].expr, As: yyDollar[2].colIdent}
		}
	case 412:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2242
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Name: yyDollar[1].tableIdent}}
		}
	case 413:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2246
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}}
		}
	case 414:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2251
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 415:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2255
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 416:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2259
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 418:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2266
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 419:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2271
		{
			yyVAL.tableExprs = TableExprs{&AliasedTableExpr{Expr: TableName{Name: NewTableIdent("dual")}}}
		}
	case 420:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2275
		{
			yyVAL.tableExprs = yyDollar[2].tableExprs
		}
	case 421:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2281
		{
			yyVAL.tableExprs = TableExprs{yyDollar[1].tableExpr}
		}
	case 422:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2285
		{
			yyVAL.tableExprs = append(yyVAL.tableExprs, yyDollar[3].tableExpr)
		}
	case 425:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2295
		{
			yyVAL.tableExpr = yyDollar[1].aliasedTableName
		}
	case 426:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2299
		{
			yyVAL.tableExpr = &AliasedTableExpr{Expr: yyDollar[1].subquery, As: yyDollar[3].tableIdent}
		}
	case 427:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2303
		{
			yyVAL.tableExpr = &ParenTableExpr{Exprs: yyDollar[2].tableExprs}
		}
	case 428:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2307
		{
			exec := yyDollar[2].statement.(*Exec)
			yyVAL.tableExpr = &ExecSubquery{Exec: exec}
		}
	case 429:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2314
		{
			yyVAL.subquery = &Subquery{yyDollar[2].selStmt}
		}
	case 430:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2320
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{Expr: yyDollar[1].tableName, As: yyDollar[2].tableIdent, Hints: yyDollar[3].indexHints}
		}
	case 431:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2324
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{Expr: yyDollar[1].tableName, Partitions: yyDollar[4].partitions, As: yyDollar[6].tableIdent, Hints: yyDollar[7].indexHints}
		}
	case 432:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2329
		{
			yyVAL.columns = nil
		}
	case 433:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2333
		{
			yyVAL.columns = yyDollar[2].columns
		}
	case 434:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2340
		{
			yyVAL.columns = Columns{yyDollar[1].colIdent}
		}
	case 435:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2344
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[3].colIdent)
		}
	case 436:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2350
		{
			yyVAL.partitions = Partitions{yyDollar[1].colIdent}
		}
	case 437:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2354
		{
			yyVAL.partitions = append(yyVAL.partitions, yyDollar[3].colIdent)
		}
	case 438:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2367
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 439:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2371
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 440:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2375
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 441:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2379
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr}
		}
	case 442:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2385
		{
			yyVAL.joinCondition = JoinCondition{On: yyDollar[2].expr}
		}
	case 443:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2387
		{
			yyVAL.joinCondition = JoinCondition{Using: yyDollar[3].columns}
		}
	case 444:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2391
		{
			yyVAL.joinCondition = JoinCondition{}
		}
	case 445:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2393
		{
			yyVAL.joinCondition = yyDollar[1].joinCondition
		}
	case 446:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2397
		{
			yyVAL.joinCondition = JoinCondition{}
		}
	case 447:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2399
		{
			yyVAL.joinCondition = JoinCondition{On: yyDollar[2].expr}
		}
	case 448:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2402
		{
			yyVAL.empty = struct{}{}
		}
	case 449:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2404
		{
			yyVAL.empty = struct{}{}
		}
	case 450:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2407
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 451:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2411
		{
			yyVAL.tableIdent = yyDollar[1].tableIdent
		}
	case 452:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2415
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 454:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2422
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 455:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2428
		{
			yyVAL.str = JoinStr
		}
	case 456:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2432
		{
			yyVAL.str = JoinStr
		}
	case 457:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2436
		{
			yyVAL.str = JoinStr
		}
	case 458:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2442
		{
			yyVAL.str = StraightJoinStr
		}
	case 459:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2448
		{
			yyVAL.str = LeftJoinStr
		}
	case 460:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2452
		{
			yyVAL.str = LeftJoinStr
		}
	case 461:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2456
		{
			yyVAL.str = RightJoinStr
		}
	case 462:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2460
		{
			yyVAL.str = RightJoinStr
		}
	case 463:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2466
		{
			yyVAL.str = NaturalJoinStr
		}
	case 464:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2470
		{
			if yyDollar[2].str == LeftJoinStr {
				yyVAL.str = NaturalLeftJoinStr
			} else {
				yyVAL.str = NaturalRightJoinStr
			}
		}
	case 465:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2480
		{
			yyVAL.tableName = yyDollar[2].tableName
		}
	case 466:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2484
		{
			yyVAL.tableName = yyDollar[1].tableName
		}
	case 467:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2490
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 468:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2494
		{
			yyVAL.tableName = TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}
		}
	case 469:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2498
		{
			yyVAL.tableName = TableName{QualifierSecond: yyDollar[1].tableIdent, Qualifier: yyDollar[3].tableIdent, Name: yyDollar[5].tableIdent}
		}
	case 470:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2502
		{
			yyVAL.tableName = TableName{QualifierThird: yyDollar[1].tableIdent, QualifierSecond: yyDollar[3].tableIdent, Qualifier: yyDollar[5].tableIdent, Name: yyDollar[7].tableIdent}
		}
	case 471:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2508
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 472:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2513
		{
			yyVAL.indexHints = nil
		}
	case 473:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2517
		{
			yyVAL.indexHints = &IndexHints{Type: UseStr, Indexes: yyDollar[4].columns}
		}
	case 474:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2521
		{
			yyVAL.indexHints = &IndexHints{Type: UseStr}
		}
	case 475:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2525
		{
			yyVAL.indexHints = &IndexHints{Type: IgnoreStr, Indexes: yyDollar[4].columns}
		}
	case 476:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2529
		{
			yyVAL.indexHints = &IndexHints{Type: ForceStr, Indexes: yyDollar[4].columns}
		}
	case 477:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2534
		{
			yyVAL.expr = nil
		}
	case 478:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2538
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 479:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2544
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 480:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2548
		{
			yyVAL.expr = &AndExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 481:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2552
		{
			yyVAL.expr = &OrExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 482:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2556
		{
			yyVAL.expr = &XorExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 483:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2560
		{
			yyVAL.expr = &NotExpr{Expr: yyDollar[2].expr}
		}
	case 484:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2564
		{
			yyVAL.expr = &IsExpr{Operator: yyDollar[3].str, Expr: yyDollar[1].expr}
		}
	case 485:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2568
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 486:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2572
		{
			yyVAL.expr = &Default{ColName: yyDollar[2].str}
		}
	case 487:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2578
		{
			yyVAL.str = ""
		}
	case 488:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2582
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 489:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2588
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 490:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2592
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 491:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2598
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: yyDollar[2].str, Right: yyDollar[3].expr}
		}
	case 492:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2602
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: InStr, Right: yyDollar[3].colTuple}
		}
	case 493:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2606
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotInStr, Right: yyDollar[4].colTuple}
		}
	case 494:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2610
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: LikeStr, Right: yyDollar[3].expr, Escape: yyDollar[4].expr}
		}
	case 495:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2614
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotLikeStr, Right: yyDollar[4].expr, Escape: yyDollar[5].expr}
		}
	case 496:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2618
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: RegexpStr, Right: yyDollar[3].expr}
		}
	case 497:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2622
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotRegexpStr, Right: yyDollar[4].expr}
		}
	case 498:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2626
		{
			yyVAL.expr = &RangeCond{Left: yyDollar[1].expr, Operator: BetweenStr, From: yyDollar[3].expr, To: yyDollar[5].expr}
		}
	case 499:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2630
		{
			yyVAL.expr = &RangeCond{Left: yyDollar[1].expr, Operator: NotBetweenStr, From: yyDollar[4].expr, To: yyDollar[6].expr}
		}
	case 500:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2634
		{
			yyVAL.expr = &ExistsExpr{Subquery: yyDollar[2].subquery}
		}
	case 501:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2640
		{
			yyVAL.str = IsNullStr
		}
	case 502:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2644
		{
			yyVAL.str = IsNotNullStr
		}
	case 503:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2648
		{
			yyVAL.str = IsTrueStr
		}
	case 504:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2652
		{
			yyVAL.str = IsNotTrueStr
		}
	case 505:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2656
		{
			yyVAL.str = IsFalseStr
		}
	case 506:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2660
		{
			yyVAL.str = IsNotFalseStr
		}
	case 507:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2666
		{
			yyVAL.str = EqualStr
		}
	case 508:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2670
		{
			yyVAL.str = LessThanStr
		}
	case 509:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2674
		{
			yyVAL.str = GreaterThanStr
		}
	case 510:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2678
		{
			yyVAL.str = LessEqualStr
		}
	case 511:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2682
		{
			yyVAL.str = GreaterEqualStr
		}
	case 512:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2686
		{
			yyVAL.str = NotEqualStr
		}
	case 513:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2690
		{
			yyVAL.str = NullSafeEqualStr
		}
	case 514:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2695
		{
			yyVAL.expr = nil
		}
	case 515:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2699
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 516:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2705
		{
			yyVAL.colTuple = yyDollar[1].valTuple
		}
	case 517:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2709
		{
			yyVAL.colTuple = yyDollar[1].subquery
		}
	case 518:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2713
		{
			yyVAL.colTuple = ListArg(yyDollar[1].bytes)
		}
	case 519:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2719
		{
			yyVAL.subquery = &Subquery{yyDollar[2].selStmt}
		}
	case 520:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2725
		{
			yyVAL.exprs = Exprs{yyDollar[1].expr}
		}
	case 521:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2729
		{
			yyVAL.exprs = append(yyDollar[1].exprs, yyDollar[3].expr)
		}
	case 522:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2735
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 523:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2739
		{
			yyVAL.expr = yyDollar[1].boolVal
		}
	case 524:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2743
		{
			yyVAL.expr = yyDollar[1].colName
		}
	case 525:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2747
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 526:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2751
		{
			yyVAL.expr = yyDollar[1].subquery
		}
	case 527:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2755
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitAndStr, Right: yyDollar[3].expr}
		}
	case 528:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2759
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitOrStr, Right: yyDollar[3].expr}
		}
	case 529:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2763
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitXorStr, Right: yyDollar[3].expr}
		}
	case 530:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2767
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: PlusStr, Right: yyDollar[3].expr}
		}
	case 531:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2771
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: MinusStr, Right: yyDollar[3].expr}
		}
	case 532:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2775
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: MultStr, Right: yyDollar[3].expr}
		}
	case 533:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2779
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: DivStr, Right: yyDollar[3].expr}
		}
	case 534:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2783
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: IntDivStr, Right: yyDollar[3].expr}
		}
	case 535:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2787
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ModStr, Right: yyDollar[3].expr}
		}
	case 536:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2791
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ModStr, Right: yyDollar[3].expr}
		}
	case 537:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2795
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ShiftLeftStr, Right: yyDollar[3].expr}
		}
	case 538:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2799
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ShiftRightStr, Right: yyDollar[3].expr}
		}
	case 539:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2803
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].colName, Operator: JSONExtractOp, Right: yyDollar[3].expr}
		}
	case 540:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2807
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].colName, Operator: JSONUnquoteExtractOp, Right: yyDollar[3].expr}
		}
	case 541:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2811
		{
			yyVAL.expr = &CollateExpr{Expr: yyDollar[1].expr, Charset: yyDollar[3].str}
		}
	case 542:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2815
		{
			yyVAL.expr = &UnaryExpr{Operator: BinaryStr, Expr: yyDollar[2].expr}
		}
	case 543:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2819
		{
			yyVAL.expr = &UnaryExpr{Operator: UBinaryStr, Expr: yyDollar[2].expr}
		}
	case 544:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2823
		{
			yyVAL.expr = &UnaryExpr{Operator: Utf8Str, Expr: yyDollar[2].expr}
		}
	case 545:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2827
		{
			yyVAL.expr = &UnaryExpr{Operator: Utf8mb4Str, Expr: yyDollar[2].expr}
		}
	case 546:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2831
		{
			yyVAL.expr = &UnaryExpr{Operator: Latin1Str, Expr: yyDollar[2].expr}
		}
	case 547:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2835
		{
			if num, ok := yyDollar[2].expr.(*SQLVal); ok && num.Type == IntVal {
				yyVAL.expr = num
			} else {
				yyVAL.expr = &UnaryExpr{Operator: UPlusStr, Expr: yyDollar[2].expr}
			}
		}
	case 548:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2843
		{
			if num, ok := yyDollar[2].expr.(*SQLVal); ok && num.Type == IntVal {
				// Handle double negative
				if num.Val[0] == '-' {
					num.Val = num.Val[1:]
					yyVAL.expr = num
				} else {
					yyVAL.expr = NewIntVal(append([]byte("-"), num.Val...))
				}
			} else {
				yyVAL.expr = &UnaryExpr{Operator: UMinusStr, Expr: yyDollar[2].expr}
			}
		}
	case 549:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2857
		{
			yyVAL.expr = &UnaryExpr{Operator: TildaStr, Expr: yyDollar[2].expr}
		}
	case 550:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2861
		{
			yyVAL.expr = &UnaryExpr{Operator: BangStr, Expr: yyDollar[2].expr}
		}
	case 551:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2865
		{
			// This rule prevents the usage of INTERVAL
			// as a function. If support is needed for that,
			// we'll need to revisit this. The solution
			// will be non-trivial because of grammar conflicts.
			yyVAL.expr = &IntervalExpr{Expr: yyDollar[2].expr, Unit: yyDollar[3].colIdent.String()}
		}
	case 556:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2883
		{
			yyVAL.expr = &FuncExpr{Name: yyDollar[1].colIdent, Exprs: yyDollar[3].selectExprs}
		}
	case 557:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2887
		{
			yyVAL.expr = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: true, Exprs: yyDollar[4].selectExprs}
		}
	case 558:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2891
		{
			yyVAL.expr = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: true, Exprs: yyDollar[4].selectExprs}
		}
	case 559:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2895
		{
			yyVAL.expr = &FuncExpr{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].colIdent, Exprs: yyDollar[5].selectExprs}
		}
	case 560:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2905
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("left"), Exprs: yyDollar[3].selectExprs}
		}
	case 561:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2909
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("right"), Exprs: yyDollar[3].selectExprs}
		}
	case 562:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2913
		{
			yyVAL.expr = &ConvertExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].convertType}
		}
	case 563:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2917
		{
			yyVAL.expr = &ConvertExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].convertType}
		}
	case 564:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2921
		{
			yyVAL.expr = &ConvertUsingExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].str}
		}
	case 565:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:2925
		{
			yyVAL.expr = &SubstrExpr{Name: yyDollar[3].colName, From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 566:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:2929
		{
			yyVAL.expr = &SubstrExpr{Name: yyDollar[3].colName, From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 567:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:2933
		{
			yyVAL.expr = &SubstrExpr{StrVal: NewStrVal(yyDollar[3].bytes), From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 568:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:2937
		{
			yyVAL.expr = &SubstrExpr{StrVal: NewStrVal(yyDollar[3].bytes), From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 569:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:2941
		{
			yyVAL.expr = &MatchExpr{Columns: yyDollar[3].selectExprs, Expr: yyDollar[7].expr, Option: yyDollar[8].str}
		}
	case 570:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:2945
		{
			yyVAL.expr = &GroupConcatExpr{Distinct: yyDollar[3].str, Exprs: yyDollar[4].selectExprs, OrderBy: yyDollar[5].orderBy, Separator: yyDollar[6].str, Limit: yyDollar[7].limit}
		}
	case 571:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2949
		{
			yyVAL.expr = &CaseExpr{Expr: yyDollar[2].expr, Whens: yyDollar[3].whens, Else: yyDollar[4].expr}
		}
	case 572:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2953
		{
			yyVAL.expr = &ValuesFuncExpr{Name: yyDollar[3].colName}
		}
	case 573:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2963
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("current_timestamp")}
		}
	case 574:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2967
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("utc_timestamp")}
		}
	case 575:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2971
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("utc_time")}
		}
	case 576:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2976
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("utc_date")}
		}
	case 577:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2981
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("localtime")}
		}
	case 578:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2986
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("localtimestamp")}
		}
	case 579:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2992
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("current_date")}
		}
	case 580:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2997
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("current_time")}
		}
	case 581:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3002
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent("current_timestamp"), Fsp: yyDollar[2].expr}
		}
	case 582:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3006
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent("utc_timestamp"), Fsp: yyDollar[2].expr}
		}
	case 583:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3010
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent("utc_time"), Fsp: yyDollar[2].expr}
		}
	case 584:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3015
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent("localtime"), Fsp: yyDollar[2].expr}
		}
	case 585:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3020
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent("localtimestamp"), Fsp: yyDollar[2].expr}
		}
	case 586:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3025
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent("current_time"), Fsp: yyDollar[2].expr}
		}
	case 587:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3029
		{
			yyVAL.expr = &TimestampFuncExpr{Name: string("timestampadd"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].expr, Expr2: yyDollar[7].expr}
		}
	case 588:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3033
		{
			yyVAL.expr = &TimestampFuncExpr{Name: string("timestampdiff"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].expr, Expr2: yyDollar[7].expr}
		}
	case 591:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3043
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 592:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3053
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("if"), Exprs: yyDollar[3].selectExprs}
		}
	case 593:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3057
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("database"), Exprs: yyDollar[3].selectExprs}
		}
	case 594:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3061
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("schema"), Exprs: yyDollar[3].selectExprs}
		}
	case 595:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3065
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("mod"), Exprs: yyDollar[3].selectExprs}
		}
	case 596:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3069
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("replace"), Exprs: yyDollar[3].selectExprs}
		}
	case 597:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3073
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("substr"), Exprs: yyDollar[3].selectExprs}
		}
	case 598:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3077
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("substr"), Exprs: yyDollar[3].selectExprs}
		}
	case 599:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3083
		{
			yyVAL.str = ""
		}
	case 600:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3087
		{
			yyVAL.str = BooleanModeStr
		}
	case 601:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3091
		{
			yyVAL.str = NaturalLanguageModeStr
		}
	case 602:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:3095
		{
			yyVAL.str = NaturalLanguageModeWithQueryExpansionStr
		}
	case 603:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3099
		{
			yyVAL.str = QueryExpansionStr
		}
	case 604:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3105
		{
			yyVAL.str = string(yyDollar[1].colIdent.String())
		}
	case 605:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3109
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 606:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3115
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 607:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3119
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Operator: CharacterSetStr}
		}
	case 608:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3123
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: string(yyDollar[3].colIdent.String())}
		}
	case 609:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3127
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 610:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3131
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 611:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3135
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
			yyVAL.convertType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.convertType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 612:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3141
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 613:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3145
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 614:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3149
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 615:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3153
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 616:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3157
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 617:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3161
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 618:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3165
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 619:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3170
		{
			yyVAL.expr = nil
		}
	case 620:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3174
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 621:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3179
		{
			yyVAL.str = string("")
		}
	case 622:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3183
		{
			yyVAL.str = " separator '" + string(yyDollar[2].bytes) + "'"
		}
	case 623:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3189
		{
			yyVAL.whens = []*When{yyDollar[1].when}
		}
	case 624:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3193
		{
			yyVAL.whens = append(yyDollar[1].whens, yyDollar[2].when)
		}
	case 625:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3199
		{
			yyVAL.when = &When{Cond: yyDollar[2].expr, Val: yyDollar[4].expr}
		}
	case 626:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3204
		{
			yyVAL.expr = nil
		}
	case 627:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3208
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 628:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3214
		{
			yyVAL.colName = &ColName{Name: yyDollar[1].colIdent}
		}
	case 629:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3218
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Name: yyDollar[1].tableIdent}, Name: yyDollar[3].colIdent}
		}
	case 630:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3222
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}, Name: yyDollar[5].colIdent}
		}
	case 631:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3228
		{
			yyVAL.expr = NewStrVal(yyDollar[1].bytes)
		}
	case 632:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3232
		{
			yyVAL.expr = NewHexVal(yyDollar[1].bytes)
		}
	case 633:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3236
		{
			yyVAL.expr = NewBitVal(yyDollar[1].bytes)
		}
	case 634:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3240
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 635:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3244
		{
			yyVAL.expr = NewFloatVal(yyDollar[1].bytes)
		}
	case 636:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3248
		{
			yyVAL.expr = NewHexNum(yyDollar[1].bytes)
		}
	case 637:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3252
		{
			yyVAL.expr = NewValArg(yyDollar[1].bytes)
		}
	case 638:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3256
		{
			yyVAL.expr = &NullVal{}
		}
	case 639:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3262
		{
			// TODO(sougou): Deprecate this construct.
			if yyDollar[1].colIdent.Lowered() != "value" {
				yylex.Error("expecting value after next")
				return 1
			}
			yyVAL.expr = NewIntVal([]byte("1"))
		}
	case 640:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3271
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 641:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3275
		{
			yyVAL.expr = NewValArg(yyDollar[1].bytes)
		}
	case 642:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3280
		{
			yyVAL.exprs = nil
		}
	case 643:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3284
		{
			yyVAL.exprs = yyDollar[3].exprs
		}
	case 644:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3289
		{
			yyVAL.expr = nil
		}
	case 645:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3293
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 646:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3298
		{
			yyVAL.orderBy = nil
		}
	case 647:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3302
		{
			yyVAL.orderBy = yyDollar[3].orderBy
		}
	case 648:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3308
		{
			yyVAL.orderBy = OrderBy{yyDollar[1].order}
		}
	case 649:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3312
		{
			yyVAL.orderBy = append(yyDollar[1].orderBy, yyDollar[3].order)
		}
	case 650:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3318
		{
			yyVAL.order = &Order{Expr: yyDollar[1].expr, Direction: yyDollar[2].str}
		}
	case 651:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3323
		{
			yyVAL.str = AscScr
		}
	case 652:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3327
		{
			yyVAL.str = AscScr
		}
	case 653:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3331
		{
			yyVAL.str = DescScr
		}
	case 654:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3336
		{
			yyVAL.limit = nil
		}
	case 655:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3340
		{
			yyVAL.limit = &Limit{Rowcount: yyDollar[2].expr}
		}
	case 656:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3344
		{
			yyVAL.limit = &Limit{Offset: yyDollar[2].expr, Rowcount: yyDollar[4].expr}
		}
	case 657:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3348
		{
			yyVAL.limit = &Limit{Offset: yyDollar[4].expr, Rowcount: yyDollar[2].expr}
		}
	case 658:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3353
		{
			yyVAL.str = ""
		}
	case 659:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3357
		{
			yyVAL.str = ForUpdateStr
		}
	case 660:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3361
		{
			yyVAL.str = ShareModeStr
		}
	case 661:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3374
		{
			yyVAL.ins = &Insert{Rows: yyDollar[2].values}
		}
	case 662:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3378
		{
			yyVAL.ins = &Insert{Rows: yyDollar[1].selStmt}
		}
	case 663:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3382
		{
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[5].values}
		}
	case 664:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3386
		{
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[4].selStmt}
		}
	case 665:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3392
		{
			yyVAL.columns = Columns{yyDollar[1].colIdent}
		}
	case 666:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3396
		{
			yyVAL.columns = Columns{yyDollar[3].colIdent}
		}
	case 667:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3400
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[3].colIdent)
		}
	case 668:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3404
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[5].colIdent)
		}
	case 669:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3409
		{
			yyVAL.updateExprs = nil
		}
	case 670:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3413
		{
			yyVAL.updateExprs = yyDollar[5].updateExprs
		}
	case 671:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3419
		{
			yyVAL.values = Values{yyDollar[1].valTuple}
		}
	case 672:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3423
		{
			yyVAL.values = append(yyDollar[1].values, yyDollar[3].valTuple)
		}
	case 673:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3429
		{
			yyVAL.valTuple = yyDollar[1].valTuple
		}
	case 674:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3433
		{
			yyVAL.valTuple = ValTuple{}
		}
	case 675:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3439
		{
			yyVAL.valTuple = ValTuple(yyDollar[2].exprs)
		}
	case 676:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3445
		{
			if len(yyDollar[1].valTuple) == 1 {
				yyVAL.expr = yyDollar[1].valTuple[0]
			} else {
				yyVAL.expr = yyDollar[1].valTuple
			}
		}
	case 677:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3455
		{
			yyVAL.updateExprs = UpdateExprs{yyDollar[1].updateExpr}
		}
	case 678:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3459
		{
			yyVAL.updateExprs = append(yyDollar[1].updateExprs, yyDollar[3].updateExpr)
		}
	case 679:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3465
		{
			yyVAL.updateExpr = &UpdateExpr{Name: yyDollar[1].colName, Expr: yyDollar[3].expr}
		}
	case 680:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3471
		{
			yyVAL.setExprs = SetExprs{yyDollar[1].setExpr}
		}
	case 681:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3475
		{
			yyDollar[2].setExpr.Scope = yyDollar[1].str
			yyVAL.setExprs = SetExprs{yyDollar[2].setExpr}
		}
	case 682:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3480
		{
			yyVAL.setExprs = append(yyDollar[1].setExprs, yyDollar[3].setExpr)
		}
	case 683:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3486
		{
			yyVAL.setExpr = &SetExpr{Name: yyDollar[1].colIdent, Expr: NewStrVal([]byte("on"))}
		}
	case 684:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3490
		{
			yyVAL.setExpr = &SetExpr{Name: yyDollar[1].colIdent, Expr: NewStrVal([]byte("off"))}
		}
	case 685:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3494
		{
			yyVAL.setExpr = &SetExpr{Name: yyDollar[1].colIdent, Expr: yyDollar[3].expr}
		}
	case 686:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3498
		{
			yyVAL.setExpr = &SetExpr{Name: yyDollar[1].colIdent, Expr: NewStrVal([]byte("on"))}
		}
	case 687:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3502
		{
			yyVAL.setExpr = &SetExpr{Name: yyDollar[1].colIdent, Expr: NewStrVal([]byte("off"))}
		}
	case 688:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3506
		{
			yyVAL.setExpr = &SetExpr{Name: yyDollar[1].colIdent, Expr: yyDollar[3].expr}
		}
	case 689:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3510
		{
			yyVAL.setExpr = &SetExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Expr: yyDollar[2].expr}
		}
	case 691:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3517
		{
			yyVAL.bytes = []byte("charset")
		}
	case 693:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3524
		{
			yyVAL.expr = NewStrVal([]byte(yyDollar[1].colIdent.String()))
		}
	case 694:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3528
		{
			yyVAL.expr = NewStrVal(yyDollar[1].bytes)
		}
	case 695:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3532
		{
			yyVAL.expr = &Default{}
		}
	case 698:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3541
		{
			yyVAL.byt = 0
		}
	case 699:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3543
		{
			yyVAL.byt = 1
		}
	case 700:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3546
		{
			yyVAL.empty = struct{}{}
		}
	case 701:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3548
		{
			yyVAL.empty = struct{}{}
		}
	case 702:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3551
		{
			yyVAL.str = ""
		}
	case 703:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3553
		{
			yyVAL.str = IgnoreStr
		}
	case 704:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3557
		{
			yyVAL.empty = struct{}{}
		}
	case 705:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3559
		{
			yyVAL.empty = struct{}{}
		}
	case 706:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3561
		{
			yyVAL.empty = struct{}{}
		}
	case 707:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3563
		{
			yyVAL.empty = struct{}{}
		}
	case 708:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3565
		{
			yyVAL.empty = struct{}{}
		}
	case 709:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3567
		{
			yyVAL.empty = struct{}{}
		}
	case 710:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3569
		{
			yyVAL.empty = struct{}{}
		}
	case 711:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3571
		{
			yyVAL.empty = struct{}{}
		}
	case 712:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3573
		{
			yyVAL.empty = struct{}{}
		}
	case 713:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3575
		{
			yyVAL.empty = struct{}{}
		}
	case 714:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3578
		{
			yyVAL.empty = struct{}{}
		}
	case 715:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3580
		{
			yyVAL.empty = struct{}{}
		}
	case 716:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3582
		{
			yyVAL.empty = struct{}{}
		}
	case 717:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3586
		{
			yyVAL.empty = struct{}{}
		}
	case 718:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3588
		{
			yyVAL.empty = struct{}{}
		}
	case 719:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3591
		{
			yyVAL.empty = struct{}{}
		}
	case 720:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3593
		{
			yyVAL.empty = struct{}{}
		}
	case 721:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3595
		{
			yyVAL.empty = struct{}{}
		}
	case 722:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3598
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 723:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3600
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 724:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3604
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 725:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3608
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 727:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3615
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 728:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3621
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].colIdent.String()))
		}
	case 729:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3625
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 731:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3632
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 732:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3638
		{
			yyVAL.execVarDef = NewExecVarDef(yyDollar[1].colIdent, yyDollar[3].expr)
		}
	case 733:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3644
		{
			yyVAL.execVarDef = NewExecVarDef(yyDollar[1].colIdent, yyDollar[3].expr)
		}
	case 734:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3650
		{
			yyVAL.execVarDefOpt = nil
		}
	case 735:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3652
		{
			rv := yyDollar[1].execVarDef
			yyVAL.execVarDefOpt = &rv
		}
	case 736:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3658
		{
			yyVAL.execVarDefs = nil
		}
	case 737:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3660
		{
			yyVAL.execVarDefs = []ExecVarDef{yyDollar[1].execVarDef}
		}
	case 738:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3664
		{
			yyVAL.execVarDefs = append(yyDollar[1].execVarDefs, yyDollar[3].execVarDef)
		}
	case 739:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3671
		{
			yyVAL.statement = NewExec(yyDollar[2].bytes2, yyDollar[3].tableName, yyDollar[4].execVarDefs, yyDollar[5].execVarDefOpt)
		}
	case 740:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3677
		{
			yyVAL.statement = NewPurge(yyDollar[2].bytes2, TableName{}, true)
		}
	case 741:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3681
		{
			yyVAL.statement = NewPurge(yyDollar[2].bytes2, yyDollar[3].tableName, false)
		}
	case 1043:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4009
		{
			if incNesting(yylex) {
				yylex.Error("max nesting level reached")
				return 1
			}
		}
	case 1044:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4018
		{
			decNesting(yylex)
		}
	case 1045:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4023
		{
			skipToEnd(yylex)
		}
	case 1046:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4028
		{
			skipToEnd(yylex)
		}
	case 1047:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4032
		{
			skipToEnd(yylex)
		}
	case 1048:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4036
		{
			skipToEnd(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
